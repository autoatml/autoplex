# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing Linux

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        split: [1, 2, 3, 4, 5]  # Number of splits

    steps:
    - uses: actions/checkout@v3
    - name: Run tests using Docker image for Python ${{ matrix.python-version }}
      run: |
        docker pull ghcr.io/autoatml/autoplex/autoplex:python-${{ matrix.python-version }}
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ghcr.io/autoatml/autoplex/autoplex:python-${{ matrix.python-version }} \
          bash -c "
          python -m pip install --upgrade pip && \
          python -m uv cache clean
          python -m uv pip install .[strict,tests] && \
          OMP_NUM_THREADS=1 pytest --cache-clear --cov=autoplex --cov-report term-missing --cov-append --splits 5 --group ${{ matrix.split }} -vv --durations-path /workspace/tests/test_data/.pytest-split-durations
        "
    - name: Upload coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.python-version }}-${{ matrix.split }}
        include-hidden-files: true
        overwrite: false
        path: ./.coverage

  coverage:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Set up Python 3.10
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'
        - name: Install Coverage
          run: |
           python -m pip install coverage[toml]
        - name: Download coverage artifacts
          continue-on-error: true
          uses: actions/download-artifact@v3
        - name: Run coverage
          continue-on-error: true
          run: |
            coverage combine coverage*/.coverage*
            coverage report --show-missing

  docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0} # enables conda/mamba env activation by reading bash profile

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@main
      - name: Create mamba environment
        run: |
            micromamba create -n autoplex_docs python=3.10 --yes
      - name: Install uv
        run: micromamba run -n autoplex_docs pip install uv
      - name: Install autoplex and dependencies
        run: |
            micromamba activate autoplex_docs
            uv pip install --upgrade pip
            uv pip install .[docs,strict]
      - name: Build
        run: micromamba run -n autoplex_docs sphinx-build -W docs _build
