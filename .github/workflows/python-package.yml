# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing Linux

on:
  push:
    branches: '*'
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        split: [1] #, 2, 3, 4]  # Number of splits

    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v2
      with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yml
          auto-activate-base: true

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        python -m pip cache purge
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-mock pytest-split pytest-cov
        python -m pip install types-setuptools
        python -m pip cache purge
        python -m pip install .[strict]
        python -m pip cache purge
        python -m pip install ase==3.23.0
    - name: Install Julia
      run: curl -fsSL https://install.julialang.org | sh -s -- -y
    - name: Set up Julia environment (Needed for ACEpotentials.jl interface)
      run: |
        julia -e 'using Pkg; Pkg.Registry.add("General"); Pkg.Registry.add(Pkg.Registry.RegistrySpec(url="https://github.com/ACEsuit/ACEregistry")); Pkg.add("ACEpotentials"); Pkg.add("DataFrames"); Pkg.add("CSV")'
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and coverage
      run: |
        # run the line below locally to update tests durations file
        # pytest --cov=autoplex --cov-append --splits 1 --group 1 --durations-path ./tests/test_data/.pytest-split-durations --store-durations
        pytest --cov=autoplex --cov-report term-missing --cov-append --splits 1 --group ${{ matrix.split }} -vv --durations-path ./tests/test_data/.pytest-split-durations
    - name: Upload coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ matrix.split }}
        path: .coverage
        
  coverage:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Set up Python 3.10
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'
        - name: Install Coverage
          run: |
           python -m pip install coverage[toml]
        - name: Download coverage artifacts
          continue-on-error: true
          uses: actions/download-artifact@v3
        - name: Run coverage
          continue-on-error: true
          run: |
            coverage combine coverage*/.coverage*
            coverage report --show-missing

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[docs,strict]

      - name: Build
        run: sphinx-build -W docs _build
