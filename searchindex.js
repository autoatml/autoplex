Search.setIndex({"alltitles": {"ACE": [[232, "ace"]], "API reference": [[223, null]], "Adjust supercell settings": [[234, "adjust-supercell-settings"]], "Alternative MongoDB installation through Homebrew": [[230, "alternative-mongodb-installation-through-homebrew"]], "AutoplexBaseModel": [[201, null]], "AutoplexSettings": [[202, null]], "BaseCastepMaker": [[174, null]], "BcurParams": [[203, null]], "Before running the workflow": [[233, "before-running-the-workflow"]], "Before you start using autoplex": [[227, "before-you-start-using-autoplex"], [228, "before-you-start-using-autoplex"]], "Benchmark of ML-based phonon structure": [[231, null]], "Brief overview": [[239, null]], "BuildMultiRandomizedStructure": [[102, null]], "Buildcell parameters": [[238, "buildcell-parameters"]], "BuildcellOptions": [[204, null]], "Building RSS models with various ML potentials": [[240, "building-rss-models-with-various-ml-potentials"]], "Building the documentation locally": [[5, "building-the-documentation-locally"]], "CASTEP_INPUT_FILES": [[175, null], [188, null]], "CASTEP_OUTPUT_FILES": [[176, null], [189, null]], "CastepInputGenerator": [[190, null]], "CastepStaticMaker": [[177, null]], "CastepStaticSetGenerator": [[191, null]], "Changelog": [[0, null]], "Changes to be done in the config file - on your local machine": [[229, "changes-to-be-done-in-the-config-file-on-your-local-machine"]], "Check if your setup works correctly": [[229, "check-if-your-setup-works-correctly"]], "Commit guidelines": [[1, "commit-guidelines"], [4, "commit-guidelines"]], "CompleteDFTvsMLBenchmarkWorkflow": [[11, null]], "CompleteDFTvsMLBenchmarkWorkflowMPSettings": [[12, null]], "Contributing guidelines / Developer\u2019s installation": [[227, "contributing-guidelines-developer-s-installation"]], "Contributing to autoplex": [[1, null], [4, null]], "Contributors": [[2, null], [2, "id1"]], "Contributors and Their Contributions": [[243, "contributors-and-their-contributions"]], "Core code developers and maintainers": [[2, "core-code-developers-and-maintainers"]], "CustomIncar": [[205, null]], "CustomPotential": [[138, null]], "DFTPhononMaker": [[87, null]], "DFTStaticLabelling": [[45, null]], "DFTSupercellSettingsMaker": [[13, null]], "Data preprocessing parameters": [[238, "data-preprocessing-parameters"]], "DataPreprocessing": [[121, null]], "Developer Installation": [[5, null]], "Disclaimer": [[238, "disclaimer"]], "Documentation": [[227, "documentation"]], "Download (all) the data of a flow from your remote cluster": [[229, "download-all-the-data-of-a-flow-from-your-remote-cluster"]], "ElementCollection": [[60, null]], "Enabling RSS workflows": [[227, "enabling-rss-workflows"], [228, "enabling-rss-workflows"], [242, "enabling-rss-workflows"]], "Error metrics": [[231, "error-metrics"]], "Example job scripts to test (Add/Submit jobs to DB from your local machine)": [[229, "example-job-scripts-to-test-add-submit-jobs-to-db-from-your-local-machine"]], "Example script for autoplex workflow using GAP to fit and benchmark a Si database": [[232, "example-script-for-autoplex-workflow-using-gap-to-fit-and-benchmark-a-si-database"]], "Examples": [[237, null]], "Executable tutorials": [[224, null]], "Expanding pre-existing dataset and refining MLIPs": [[240, "expanding-pre-existing-dataset-and-refining-mlips"]], "Features": [[239, "features"]], "Finetuning MACE-MP-0": [[232, "finetuning-mace-mp-0"]], "FireWorks configuration": [[230, "fireworks-configuration"]], "Fitting phonon-accurate potentials": [[232, null]], "Formatting requirements": [[1, "formatting-requirements"], [4, "formatting-requirements"]], "GAP": [[232, "gap"]], "GAPGeneralSettings": [[206, null]], "GAPSettings": [[207, null]], "GPa": [[61, null], [110, null], [178, null]], "General code structure": [[1, "general-code-structure"], [4, "general-code-structure"]], "General parameters": [[238, "general-parameters"]], "General settings": [[231, "general-settings"], [232, "general-settings"]], "General workflow": [[233, "general-workflow"]], "GenerateTrainingDataForTesting": [[46, null]], "Generating reference data": [[234, null]], "Getting started": [[229, "getting-started"]], "Glossary": [[6, null]], "HookeanRepulsion": [[111, null]], "Input YAML configuration file": [[238, null]], "InputDoc": [[184, null]], "Installation": [[227, "installation"], [229, "installation"]], "Installation Documentation and Guides of the Dependencies": [[228, "installation-documentation-and-guides-of-the-dependencies"]], "Installation guide": [[228, null]], "Is it possible to run the DFT calculations and the MLIP fitting step on different machines?": [[232, "is-it-possible-to-run-the-dft-calculations-and-the-mlip-fitting-step-on-different-machines"]], "IsoAtomMaker": [[88, null]], "IsoAtomStaticMaker": [[89, null]], "Iterative DFT vs MLIP benchmark workflow for phonons": [[225, null]], "Iterative version of the default workflow": [[233, "iterative-version-of-the-default-workflow"]], "IterativeCompleteDFTvsMLBenchmarkWorkflow": [[14, null]], "JACESettings": [[208, null]], "Jobflow-remote setup": [[229, null]], "LAMMPS installation": [[227, "lammps-installation"], [228, "lammps-installation"], [242, "lammps-installation"]], "Labelling parameters": [[238, "labelling-parameters"]], "License": [[3, null]], "License / Copyright": [[193, "license-copyright"]], "LossCoeff": [[209, null]], "M3GNETSettings": [[210, null]], "M3GNet": [[232, "m3gnet"]], "MACE": [[232, "mace"]], "MACESettings": [[211, null]], "MLIP parameters": [[238, "mlip-parameters"]], "MLIPFitMaker": [[122, null]], "MLIPHypers": [[212, null]], "MLPhononMaker": [[90, null]], "MongoDB setup": [[230, "mongodb-setup"]], "MongoDB setup tutorial": [[230, null]], "NEPSettings": [[213, null]], "NEQUIPSettings": [[214, null]], "Nequip": [[232, "nequip"]], "New Contributors": [[0, "new-contributors"], [0, "id14"]], "Nonlinearity": [[215, null]], "Now start the workflow": [[233, "now-start-the-workflow"]], "Out-of-the-box workflow": [[233, null]], "Output and results": [[233, "output-and-results"]], "OutputDoc": [[185, null]], "Overview": [[227, null]], "Phonon workflow": [[235, null]], "Phonon-accurate machine-learned potentials workflow": [[233, "phonon-accurate-machine-learned-potentials-workflow"]], "PhononBenchmarkMaker": [[33, null]], "Project lead (Berlin)": [[2, "project-lead-berlin"]], "Project lead (Oxford)": [[2, "project-lead-oxford"]], "Python version": [[227, "python-version"]], "Querying completed jobs from DB using jobflow-remote Python API": [[229, "querying-completed-jobs-from-db-using-jobflow-remote-python-api"]], "Quick start": [[240, null]], "Quick-start": [[242, null]], "RSS Exploration Parameters": [[238, "rss-exploration-parameters"]], "RSS Workflow": [[226, null]], "RSS workflow": [[241, null]], "RandomStructuresDataGenerator": [[91, null]], "RandomizedStructure": [[104, null]], "Rattled supercell structures": [[234, "rattled-supercell-structures"]], "ResumeFromPreviousState": [[216, null]], "Resuming workflow from point of interruption": [[240, "resuming-workflow-from-point-of-interruption"]], "RssConfig": [[217, null]], "RssMaker": [[26, null]], "Run a benchmark with a pre-existing DFT calculation and GAP potential": [[231, "run-a-benchmark-with-a-pre-existing-dft-calculation-and-gap-potential"]], "Running a MLIP fit only": [[232, "running-a-mlip-fit-only"]], "Running the workflow with a RSSConfig object": [[240, "running-the-workflow-with-a-rssconfig-object"]], "Running the workflow with direct parameter specification": [[240, "running-the-workflow-with-direct-parameter-specification"]], "Running unit tests": [[5, "running-unit-tests"]], "SETTINGS": [[218, null]], "Sampling parameters": [[238, "sampling-parameters"]], "Setting different workers for different job types": [[229, "setting-different-workers-for-different-job-types"]], "Setup": [[227, "setup"]], "SiO<sub>2</sub>": [[237, "sio2"]], "Simple Python job": [[229, "simple-python-job"]], "Single-atom displaced supercell structures": [[234, "single-atom-displaced-supercell-structures"]], "SoapParas": [[219, null]], "SoapSettings": [[220, null]], "Some useful commands": [[229, "some-useful-commands"]], "Some useful links": [[229, "some-useful-links"]], "Standard installation": [[227, "standard-installation"]], "TYPE_CHECKING": [[48, null], [179, null], [194, null]], "TaskDoc": [[186, null]], "Test DFT run times and memory requirements": [[233, "test-dft-run-times-and-memory-requirements"]], "ThreebSettings": [[221, null]], "TightDFTStaticMaker": [[92, null]], "Troubleshooting stuck tests": [[5, "troubleshooting-stuck-tests"]], "Tutorial table of content": [[243, "tutorial-table-of-content"]], "Tutorials": [[243, null]], "TwobSettings": [[222, null]], "Update pre-exsiting job input parameters in the DB": [[229, "update-pre-exsiting-job-input-parameters-in-the-db"]], "Updating failed jobs time limit or execution config": [[229, "updating-failed-jobs-time-limit-or-execution-config"]], "Use case 1: combining an existing dataset with RSS to train a new MLIP": [[240, "use-case-1-combining-an-existing-dataset-with-rss-to-train-a-new-mlip"]], "Use case 2: kicking off RSS using an existing MLIP and merging data for refinement": [[240, "use-case-2-kicking-off-rss-using-an-existing-mlip-and-merging-data-for-refinement"]], "Use case 3: generating the whole RSS data from scratch and merging later": [[240, "use-case-3-generating-the-whole-rss-data-from-scratch-and-merging-later"]], "VASP relax job using atomate2 workflow": [[229, "vasp-relax-job-using-atomate2-workflow"]], "VASP settings": [[234, "vasp-settings"]], "Visualize MongoDB-Database": [[230, "visualize-mongodb-database"]], "What to cite?": [[227, "what-to-cite"]], "What\u2019s Changed": [[0, "what-s-changed"], [0, "id1"], [0, "id4"], [0, "id9"], [0, "id10"], [0, "id11"], [0, "id12"], [0, "id13"]], "What\u2019s changed": [[0, "id8"]], "Workflow management": [[228, "workflow-management"], [242, "workflow-management"]], "Workflow overview": [[227, "workflow-overview"]], "atomate2 configuration": [[230, "atomate2-configuration"]], "atomic_numbers": [[105, null], [112, null]], "autoplex documentation": [[7, null]], "autoplex.auto": [[8, null]], "autoplex.auto.phonons": [[9, null]], "autoplex.auto.phonons.flows": [[10, null]], "autoplex.auto.phonons.jobs": [[15, null]], "autoplex.auto.rss": [[24, null]], "autoplex.auto.rss.flows": [[25, null]], "autoplex.auto.rss.jobs": [[27, null]], "autoplex.benchmark": [[30, null]], "autoplex.benchmark.phonons": [[31, null]], "autoplex.benchmark.phonons.flows": [[32, null]], "autoplex.benchmark.phonons.jobs": [[34, null]], "autoplex.benchmark.phonons.utils": [[36, null]], "autoplex.benchmark.rss": [[41, null]], "autoplex.data": [[42, null]], "autoplex.data.common": [[43, null]], "autoplex.data.common.flows": [[44, null]], "autoplex.data.common.jobs": [[47, null]], "autoplex.data.common.utils": [[59, null]], "autoplex.data.phonons": [[85, null]], "autoplex.data.phonons.flows": [[86, null]], "autoplex.data.phonons.jobs": [[93, null]], "autoplex.data.phonons.utils": [[95, null]], "autoplex.data.rss": [[100, null]], "autoplex.data.rss.flows": [[101, null]], "autoplex.data.rss.jobs": [[103, null]], "autoplex.data.rss.utils": [[109, null]], "autoplex.fitting": [[118, null]], "autoplex.fitting.common": [[119, null]], "autoplex.fitting.common.flows": [[120, null]], "autoplex.fitting.common.jobs": [[123, null]], "autoplex.fitting.common.regularization": [[125, null]], "autoplex.fitting.common.utils": [[137, null]], "autoplex.fitting.phonons": [[168, null]], "autoplex.fitting.rss": [[169, null]], "autoplex.misc": [[170, null]], "autoplex.misc.castep": [[171, null]], "autoplex.misc.castep.flows": [[172, null]], "autoplex.misc.castep.jobs": [[173, null]], "autoplex.misc.castep.run": [[181, null]], "autoplex.misc.castep.schema": [[183, null]], "autoplex.misc.castep.utils": [[187, null]], "autoplex.misc.utils": [[192, null]], "autoplex.misc.utils.mock_castep": [[193, null]], "autoplex.settings": [[200, null]], "boltzhist_cur_dual_iter": [[62, null]], "boltzhist_cur_one_shot": [[63, null]], "calculate_delta_2b": [[139, null]], "calculate_hull_nd": [[126, null]], "castep_job": [[180, null]], "check_convergence": [[140, null]], "check_convergence_castep": [[49, null]], "check_convergence_vasp": [[50, null]], "check_distances": [[64, null]], "check_supercells": [[96, null]], "chemical_symbols": [[113, null], [141, null]], "clear_castep_inputs": [[195, null]], "collect_dft_data": [[51, null]], "compare_plot": [[37, null]], "complete_benchmark": [[16, null]], "compute_bandstructure_benchmark_metrics": [[38, null]], "compute_num_of_descriptor": [[142, null]], "convert_to_extxyz": [[52, null]], "convert_xyz_to_structure": [[143, null]], "convexhull_cur": [[65, null]], "copy_castep_outputs": [[196, null]], "covalent_radii": [[106, null]], "create_soap_descriptor": [[66, null]], "cur_select": [[67, null]], "data_distillation": [[68, null]], "dft_phonopy_gen_data": [[17, null]], "dft_random_gen_data": [[18, null]], "do_iterative_rattled_structures": [[19, null]], "do_rss_iterations": [[28, null]], "do_rss_multi_node": [[107, null]], "do_rss_single_node": [[108, null]], "energy_plot": [[69, null]], "energy_remain": [[144, null]], "extract_gap_label": [[145, null]], "extract_pairstyle": [[114, null]], "fake_run_castep": [[197, null]], "filter_outlier_energy": [[70, null]], "filter_outlier_forces": [[71, null]], "flatten": [[72, null], [146, null]], "flatten_list": [[73, null]], "force_plot": [[74, null]], "gap_fitting": [[147, null]], "gap_hyperparameter_constructor": [[148, null]], "gcm3_to_Vm": [[149, null]], "generate_randomized_structures": [[53, null]], "generate_supercells": [[20, null]], "get_atomic_numbers": [[150, null]], "get_convex_hull": [[127, null]], "get_e_distance_to_hull": [[128, null]], "get_e_distance_to_hull_nd": [[129, null]], "get_intersect": [[130, null]], "get_iso_atom": [[21, null]], "get_list_of_vasp_calc_dirs": [[151, null]], "get_mole_frac": [[131, null]], "get_phonon_output": [[22, null]], "get_rmse": [[39, null]], "get_supercell_job": [[54, null]], "handle_rss_trajectory": [[75, null]], "initial_rss": [[29, null]], "jace_fitting": [[152, null]], "label_stoichiometry_volume": [[132, null]], "m3gnet_fitting": [[153, null]], "mace_fitting": [[154, null]], "mace_virial_format_conversion": [[155, null]], "machine_learning_fit": [[124, null]], "mc_rattle": [[76, null]], "minimize_structures": [[115, null]], "ml_phonon_maker_preparation": [[97, null]], "monkeypatch_castep": [[198, null]], "nep_fitting": [[156, null]], "nequip_fitting": [[157, null]], "on your local machine": [[229, "on-your-local-machine"]], "on your remote cluster": [[229, "on-your-remote-cluster"]], "parallel_calc_descriptor_vec": [[77, null]], "piecewise_linear": [[133, null]], "plot_convex_hull": [[158, null]], "plot_energy_forces": [[78, null]], "plot_force_distribution": [[55, null]], "point_in_simplex_nd": [[134, null]], "point_in_triangle_2D": [[135, null]], "prepare_fit_environment": [[159, null]], "preprocess_data": [[56, null]], "process_rss": [[116, null]], "random_vary_angle": [[79, null]], "reduce_supercell_size": [[98, null]], "reduce_supercell_size_job": [[94, null]], "rms_dict": [[80, null]], "rmse_qdep_plot": [[40, null]], "run_ace": [[160, null]], "run_ase_gap": [[161, null]], "run_castep": [[182, null]], "run_gap": [[162, null]], "run_mace": [[163, null]], "run_nep": [[164, null]], "run_nequip": [[165, null]], "run_supercells": [[23, null]], "safe_strip_hostname": [[57, null]], "sample_data": [[58, null]], "scale_cell": [[81, null]], "set_custom_sigma": [[136, null]], "split_structure_into_groups": [[117, null]], "std_rattle": [[82, null]], "stratified_dataset_split": [[83, null]], "to_ase_trajectory": [[84, null]], "update_phonon_displacement_maker": [[99, null]], "v0.0.1": [[0, "v0-0-1"]], "v0.0.2": [[0, "v0-0-2"]], "v0.0.4": [[0, "v0-0-4"]], "v0.0.5": [[0, "v0-0-5"]], "v0.0.6": [[0, "v0-0-6"]], "v0.0.7": [[0, "v0-0-7"]], "v0.0.8": [[0, "v0-0-8"]], "v0.0.9": [[0, "v0-0-9"]], "v0.1.0": [[0, "v0-1-0"]], "v0.1.1": [[0, "v0-1-1"]], "v0.1.2": [[0, "v0-1-2"]], "v0.1.3": [[0, "v0-1-3"]], "v0.1.4": [[0, "v0-1-4"]], "vaspoutput_2_extended_xyz": [[166, null]], "write_after_distillation_data_split": [[167, null]], "write_benchmark_metrics": [[35, null]], "zpath": [[199, null]], "\ud83d\udc1b Bug Fixes": [[0, "bug-fixes"]], "\ud83d\udcda Documentation": [[0, "documentation"], [0, "id3"], [0, "id6"]], "\ud83d\udd04 Other Changes": [[0, "other-changes"]], "\ud83d\ude80 New Features": [[0, "new-features"], [0, "id2"], [0, "id5"]], "\ud83e\uddf9 House-Keeping": [[0, "house-keeping"], [0, "id7"]]}, "docnames": ["about/changelog", "about/contributing", "about/contributors", "about/license", "dev/contributing", "dev/dev_install", "glossary", "index", "reference/autoplex.auto", "reference/autoplex.auto.phonons", "reference/autoplex.auto.phonons.flows", "reference/autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow", "reference/autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflowMPSettings", "reference/autoplex.auto.phonons.flows.DFTSupercellSettingsMaker", "reference/autoplex.auto.phonons.flows.IterativeCompleteDFTvsMLBenchmarkWorkflow", "reference/autoplex.auto.phonons.jobs", "reference/autoplex.auto.phonons.jobs.complete_benchmark", "reference/autoplex.auto.phonons.jobs.dft_phonopy_gen_data", "reference/autoplex.auto.phonons.jobs.dft_random_gen_data", "reference/autoplex.auto.phonons.jobs.do_iterative_rattled_structures", "reference/autoplex.auto.phonons.jobs.generate_supercells", "reference/autoplex.auto.phonons.jobs.get_iso_atom", "reference/autoplex.auto.phonons.jobs.get_phonon_output", "reference/autoplex.auto.phonons.jobs.run_supercells", "reference/autoplex.auto.rss", "reference/autoplex.auto.rss.flows", "reference/autoplex.auto.rss.flows.RssMaker", "reference/autoplex.auto.rss.jobs", "reference/autoplex.auto.rss.jobs.do_rss_iterations", "reference/autoplex.auto.rss.jobs.initial_rss", "reference/autoplex.benchmark", "reference/autoplex.benchmark.phonons", "reference/autoplex.benchmark.phonons.flows", "reference/autoplex.benchmark.phonons.flows.PhononBenchmarkMaker", "reference/autoplex.benchmark.phonons.jobs", "reference/autoplex.benchmark.phonons.jobs.write_benchmark_metrics", "reference/autoplex.benchmark.phonons.utils", "reference/autoplex.benchmark.phonons.utils.compare_plot", "reference/autoplex.benchmark.phonons.utils.compute_bandstructure_benchmark_metrics", "reference/autoplex.benchmark.phonons.utils.get_rmse", "reference/autoplex.benchmark.phonons.utils.rmse_qdep_plot", "reference/autoplex.benchmark.rss", "reference/autoplex.data", "reference/autoplex.data.common", "reference/autoplex.data.common.flows", "reference/autoplex.data.common.flows.DFTStaticLabelling", "reference/autoplex.data.common.flows.GenerateTrainingDataForTesting", "reference/autoplex.data.common.jobs", "reference/autoplex.data.common.jobs.TYPE_CHECKING", "reference/autoplex.data.common.jobs.check_convergence_castep", "reference/autoplex.data.common.jobs.check_convergence_vasp", "reference/autoplex.data.common.jobs.collect_dft_data", "reference/autoplex.data.common.jobs.convert_to_extxyz", "reference/autoplex.data.common.jobs.generate_randomized_structures", "reference/autoplex.data.common.jobs.get_supercell_job", "reference/autoplex.data.common.jobs.plot_force_distribution", "reference/autoplex.data.common.jobs.preprocess_data", "reference/autoplex.data.common.jobs.safe_strip_hostname", "reference/autoplex.data.common.jobs.sample_data", "reference/autoplex.data.common.utils", "reference/autoplex.data.common.utils.ElementCollection", "reference/autoplex.data.common.utils.GPa", "reference/autoplex.data.common.utils.boltzhist_cur_dual_iter", "reference/autoplex.data.common.utils.boltzhist_cur_one_shot", "reference/autoplex.data.common.utils.check_distances", "reference/autoplex.data.common.utils.convexhull_cur", "reference/autoplex.data.common.utils.create_soap_descriptor", "reference/autoplex.data.common.utils.cur_select", "reference/autoplex.data.common.utils.data_distillation", "reference/autoplex.data.common.utils.energy_plot", "reference/autoplex.data.common.utils.filter_outlier_energy", "reference/autoplex.data.common.utils.filter_outlier_forces", "reference/autoplex.data.common.utils.flatten", "reference/autoplex.data.common.utils.flatten_list", "reference/autoplex.data.common.utils.force_plot", "reference/autoplex.data.common.utils.handle_rss_trajectory", "reference/autoplex.data.common.utils.mc_rattle", "reference/autoplex.data.common.utils.parallel_calc_descriptor_vec", "reference/autoplex.data.common.utils.plot_energy_forces", "reference/autoplex.data.common.utils.random_vary_angle", "reference/autoplex.data.common.utils.rms_dict", "reference/autoplex.data.common.utils.scale_cell", "reference/autoplex.data.common.utils.std_rattle", "reference/autoplex.data.common.utils.stratified_dataset_split", "reference/autoplex.data.common.utils.to_ase_trajectory", "reference/autoplex.data.phonons", "reference/autoplex.data.phonons.flows", "reference/autoplex.data.phonons.flows.DFTPhononMaker", "reference/autoplex.data.phonons.flows.IsoAtomMaker", "reference/autoplex.data.phonons.flows.IsoAtomStaticMaker", "reference/autoplex.data.phonons.flows.MLPhononMaker", "reference/autoplex.data.phonons.flows.RandomStructuresDataGenerator", "reference/autoplex.data.phonons.flows.TightDFTStaticMaker", "reference/autoplex.data.phonons.jobs", "reference/autoplex.data.phonons.jobs.reduce_supercell_size_job", "reference/autoplex.data.phonons.utils", "reference/autoplex.data.phonons.utils.check_supercells", "reference/autoplex.data.phonons.utils.ml_phonon_maker_preparation", "reference/autoplex.data.phonons.utils.reduce_supercell_size", "reference/autoplex.data.phonons.utils.update_phonon_displacement_maker", "reference/autoplex.data.rss", "reference/autoplex.data.rss.flows", "reference/autoplex.data.rss.flows.BuildMultiRandomizedStructure", "reference/autoplex.data.rss.jobs", "reference/autoplex.data.rss.jobs.RandomizedStructure", "reference/autoplex.data.rss.jobs.atomic_numbers", "reference/autoplex.data.rss.jobs.covalent_radii", "reference/autoplex.data.rss.jobs.do_rss_multi_node", "reference/autoplex.data.rss.jobs.do_rss_single_node", "reference/autoplex.data.rss.utils", "reference/autoplex.data.rss.utils.GPa", "reference/autoplex.data.rss.utils.HookeanRepulsion", "reference/autoplex.data.rss.utils.atomic_numbers", "reference/autoplex.data.rss.utils.chemical_symbols", "reference/autoplex.data.rss.utils.extract_pairstyle", "reference/autoplex.data.rss.utils.minimize_structures", "reference/autoplex.data.rss.utils.process_rss", "reference/autoplex.data.rss.utils.split_structure_into_groups", "reference/autoplex.fitting", "reference/autoplex.fitting.common", "reference/autoplex.fitting.common.flows", "reference/autoplex.fitting.common.flows.DataPreprocessing", "reference/autoplex.fitting.common.flows.MLIPFitMaker", "reference/autoplex.fitting.common.jobs", "reference/autoplex.fitting.common.jobs.machine_learning_fit", "reference/autoplex.fitting.common.regularization", "reference/autoplex.fitting.common.regularization.calculate_hull_nd", "reference/autoplex.fitting.common.regularization.get_convex_hull", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull_nd", "reference/autoplex.fitting.common.regularization.get_intersect", "reference/autoplex.fitting.common.regularization.get_mole_frac", "reference/autoplex.fitting.common.regularization.label_stoichiometry_volume", "reference/autoplex.fitting.common.regularization.piecewise_linear", "reference/autoplex.fitting.common.regularization.point_in_simplex_nd", "reference/autoplex.fitting.common.regularization.point_in_triangle_2D", "reference/autoplex.fitting.common.regularization.set_custom_sigma", "reference/autoplex.fitting.common.utils", "reference/autoplex.fitting.common.utils.CustomPotential", "reference/autoplex.fitting.common.utils.calculate_delta_2b", "reference/autoplex.fitting.common.utils.check_convergence", "reference/autoplex.fitting.common.utils.chemical_symbols", "reference/autoplex.fitting.common.utils.compute_num_of_descriptor", "reference/autoplex.fitting.common.utils.convert_xyz_to_structure", "reference/autoplex.fitting.common.utils.energy_remain", "reference/autoplex.fitting.common.utils.extract_gap_label", "reference/autoplex.fitting.common.utils.flatten", "reference/autoplex.fitting.common.utils.gap_fitting", "reference/autoplex.fitting.common.utils.gap_hyperparameter_constructor", "reference/autoplex.fitting.common.utils.gcm3_to_Vm", "reference/autoplex.fitting.common.utils.get_atomic_numbers", "reference/autoplex.fitting.common.utils.get_list_of_vasp_calc_dirs", "reference/autoplex.fitting.common.utils.jace_fitting", "reference/autoplex.fitting.common.utils.m3gnet_fitting", "reference/autoplex.fitting.common.utils.mace_fitting", "reference/autoplex.fitting.common.utils.mace_virial_format_conversion", "reference/autoplex.fitting.common.utils.nep_fitting", "reference/autoplex.fitting.common.utils.nequip_fitting", "reference/autoplex.fitting.common.utils.plot_convex_hull", "reference/autoplex.fitting.common.utils.prepare_fit_environment", "reference/autoplex.fitting.common.utils.run_ace", "reference/autoplex.fitting.common.utils.run_ase_gap", "reference/autoplex.fitting.common.utils.run_gap", "reference/autoplex.fitting.common.utils.run_mace", "reference/autoplex.fitting.common.utils.run_nep", "reference/autoplex.fitting.common.utils.run_nequip", "reference/autoplex.fitting.common.utils.vaspoutput_2_extended_xyz", "reference/autoplex.fitting.common.utils.write_after_distillation_data_split", "reference/autoplex.fitting.phonons", "reference/autoplex.fitting.rss", "reference/autoplex.misc", "reference/autoplex.misc.castep", "reference/autoplex.misc.castep.flows", "reference/autoplex.misc.castep.jobs", "reference/autoplex.misc.castep.jobs.BaseCastepMaker", "reference/autoplex.misc.castep.jobs.CASTEP_INPUT_FILES", "reference/autoplex.misc.castep.jobs.CASTEP_OUTPUT_FILES", "reference/autoplex.misc.castep.jobs.CastepStaticMaker", "reference/autoplex.misc.castep.jobs.GPa", "reference/autoplex.misc.castep.jobs.TYPE_CHECKING", "reference/autoplex.misc.castep.jobs.castep_job", "reference/autoplex.misc.castep.run", "reference/autoplex.misc.castep.run.run_castep", "reference/autoplex.misc.castep.schema", "reference/autoplex.misc.castep.schema.InputDoc", "reference/autoplex.misc.castep.schema.OutputDoc", "reference/autoplex.misc.castep.schema.TaskDoc", "reference/autoplex.misc.castep.utils", "reference/autoplex.misc.castep.utils.CASTEP_INPUT_FILES", "reference/autoplex.misc.castep.utils.CASTEP_OUTPUT_FILES", "reference/autoplex.misc.castep.utils.CastepInputGenerator", "reference/autoplex.misc.castep.utils.CastepStaticSetGenerator", "reference/autoplex.misc.utils", "reference/autoplex.misc.utils.mock_castep", "reference/autoplex.misc.utils.mock_castep.TYPE_CHECKING", "reference/autoplex.misc.utils.mock_castep.clear_castep_inputs", "reference/autoplex.misc.utils.mock_castep.copy_castep_outputs", "reference/autoplex.misc.utils.mock_castep.fake_run_castep", "reference/autoplex.misc.utils.mock_castep.monkeypatch_castep", "reference/autoplex.misc.utils.mock_castep.zpath", "reference/autoplex.settings", "reference/autoplex.settings.AutoplexBaseModel", "reference/autoplex.settings.AutoplexSettings", "reference/autoplex.settings.BcurParams", "reference/autoplex.settings.BuildcellOptions", "reference/autoplex.settings.CustomIncar", "reference/autoplex.settings.GAPGeneralSettings", "reference/autoplex.settings.GAPSettings", "reference/autoplex.settings.JACESettings", "reference/autoplex.settings.LossCoeff", "reference/autoplex.settings.M3GNETSettings", "reference/autoplex.settings.MACESettings", "reference/autoplex.settings.MLIPHypers", "reference/autoplex.settings.NEPSettings", "reference/autoplex.settings.NEQUIPSettings", "reference/autoplex.settings.Nonlinearity", "reference/autoplex.settings.ResumeFromPreviousState", "reference/autoplex.settings.RssConfig", "reference/autoplex.settings.SETTINGS", "reference/autoplex.settings.SoapParas", "reference/autoplex.settings.SoapSettings", "reference/autoplex.settings.ThreebSettings", "reference/autoplex.settings.TwobSettings", "reference/index", "user/executable/index", "user/executable/tutorial_phonon", "user/executable/tutorial_rss", "user/index", "user/installation/installation", "user/jobflowremote", "user/mongodb", "user/phonon/flows/benchmark/benchmark", "user/phonon/flows/fitting/fitting", "user/phonon/flows/flows", "user/phonon/flows/generation/data", "user/phonon/index", "user/rss", "user/rss/flow/example/example", "user/rss/flow/input/input", "user/rss/flow/introduction/intro", "user/rss/flow/quick_start/start", "user/rss/index", "user/setup", "user/tutorials"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["about/changelog.md", "about/contributing.md", "about/contributors.md", "about/license.md", "dev/contributing.md", "dev/dev_install.md", "glossary.rst", "index.md", "reference/autoplex.auto.rst", "reference/autoplex.auto.phonons.rst", "reference/autoplex.auto.phonons.flows.rst", "reference/autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.rst", "reference/autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflowMPSettings.rst", "reference/autoplex.auto.phonons.flows.DFTSupercellSettingsMaker.rst", "reference/autoplex.auto.phonons.flows.IterativeCompleteDFTvsMLBenchmarkWorkflow.rst", "reference/autoplex.auto.phonons.jobs.rst", "reference/autoplex.auto.phonons.jobs.complete_benchmark.rst", "reference/autoplex.auto.phonons.jobs.dft_phonopy_gen_data.rst", "reference/autoplex.auto.phonons.jobs.dft_random_gen_data.rst", "reference/autoplex.auto.phonons.jobs.do_iterative_rattled_structures.rst", "reference/autoplex.auto.phonons.jobs.generate_supercells.rst", "reference/autoplex.auto.phonons.jobs.get_iso_atom.rst", "reference/autoplex.auto.phonons.jobs.get_phonon_output.rst", "reference/autoplex.auto.phonons.jobs.run_supercells.rst", "reference/autoplex.auto.rss.rst", "reference/autoplex.auto.rss.flows.rst", "reference/autoplex.auto.rss.flows.RssMaker.rst", "reference/autoplex.auto.rss.jobs.rst", "reference/autoplex.auto.rss.jobs.do_rss_iterations.rst", "reference/autoplex.auto.rss.jobs.initial_rss.rst", "reference/autoplex.benchmark.rst", "reference/autoplex.benchmark.phonons.rst", "reference/autoplex.benchmark.phonons.flows.rst", "reference/autoplex.benchmark.phonons.flows.PhononBenchmarkMaker.rst", "reference/autoplex.benchmark.phonons.jobs.rst", "reference/autoplex.benchmark.phonons.jobs.write_benchmark_metrics.rst", "reference/autoplex.benchmark.phonons.utils.rst", "reference/autoplex.benchmark.phonons.utils.compare_plot.rst", "reference/autoplex.benchmark.phonons.utils.compute_bandstructure_benchmark_metrics.rst", "reference/autoplex.benchmark.phonons.utils.get_rmse.rst", "reference/autoplex.benchmark.phonons.utils.rmse_qdep_plot.rst", "reference/autoplex.benchmark.rss.rst", "reference/autoplex.data.rst", "reference/autoplex.data.common.rst", "reference/autoplex.data.common.flows.rst", "reference/autoplex.data.common.flows.DFTStaticLabelling.rst", "reference/autoplex.data.common.flows.GenerateTrainingDataForTesting.rst", "reference/autoplex.data.common.jobs.rst", "reference/autoplex.data.common.jobs.TYPE_CHECKING.rst", "reference/autoplex.data.common.jobs.check_convergence_castep.rst", "reference/autoplex.data.common.jobs.check_convergence_vasp.rst", "reference/autoplex.data.common.jobs.collect_dft_data.rst", "reference/autoplex.data.common.jobs.convert_to_extxyz.rst", "reference/autoplex.data.common.jobs.generate_randomized_structures.rst", "reference/autoplex.data.common.jobs.get_supercell_job.rst", "reference/autoplex.data.common.jobs.plot_force_distribution.rst", "reference/autoplex.data.common.jobs.preprocess_data.rst", "reference/autoplex.data.common.jobs.safe_strip_hostname.rst", "reference/autoplex.data.common.jobs.sample_data.rst", "reference/autoplex.data.common.utils.rst", "reference/autoplex.data.common.utils.ElementCollection.rst", "reference/autoplex.data.common.utils.GPa.rst", "reference/autoplex.data.common.utils.boltzhist_cur_dual_iter.rst", "reference/autoplex.data.common.utils.boltzhist_cur_one_shot.rst", "reference/autoplex.data.common.utils.check_distances.rst", "reference/autoplex.data.common.utils.convexhull_cur.rst", "reference/autoplex.data.common.utils.create_soap_descriptor.rst", "reference/autoplex.data.common.utils.cur_select.rst", "reference/autoplex.data.common.utils.data_distillation.rst", "reference/autoplex.data.common.utils.energy_plot.rst", "reference/autoplex.data.common.utils.filter_outlier_energy.rst", "reference/autoplex.data.common.utils.filter_outlier_forces.rst", "reference/autoplex.data.common.utils.flatten.rst", "reference/autoplex.data.common.utils.flatten_list.rst", "reference/autoplex.data.common.utils.force_plot.rst", "reference/autoplex.data.common.utils.handle_rss_trajectory.rst", "reference/autoplex.data.common.utils.mc_rattle.rst", "reference/autoplex.data.common.utils.parallel_calc_descriptor_vec.rst", "reference/autoplex.data.common.utils.plot_energy_forces.rst", "reference/autoplex.data.common.utils.random_vary_angle.rst", "reference/autoplex.data.common.utils.rms_dict.rst", "reference/autoplex.data.common.utils.scale_cell.rst", "reference/autoplex.data.common.utils.std_rattle.rst", "reference/autoplex.data.common.utils.stratified_dataset_split.rst", "reference/autoplex.data.common.utils.to_ase_trajectory.rst", "reference/autoplex.data.phonons.rst", "reference/autoplex.data.phonons.flows.rst", "reference/autoplex.data.phonons.flows.DFTPhononMaker.rst", "reference/autoplex.data.phonons.flows.IsoAtomMaker.rst", "reference/autoplex.data.phonons.flows.IsoAtomStaticMaker.rst", "reference/autoplex.data.phonons.flows.MLPhononMaker.rst", "reference/autoplex.data.phonons.flows.RandomStructuresDataGenerator.rst", "reference/autoplex.data.phonons.flows.TightDFTStaticMaker.rst", "reference/autoplex.data.phonons.jobs.rst", "reference/autoplex.data.phonons.jobs.reduce_supercell_size_job.rst", "reference/autoplex.data.phonons.utils.rst", "reference/autoplex.data.phonons.utils.check_supercells.rst", "reference/autoplex.data.phonons.utils.ml_phonon_maker_preparation.rst", "reference/autoplex.data.phonons.utils.reduce_supercell_size.rst", "reference/autoplex.data.phonons.utils.update_phonon_displacement_maker.rst", "reference/autoplex.data.rss.rst", "reference/autoplex.data.rss.flows.rst", "reference/autoplex.data.rss.flows.BuildMultiRandomizedStructure.rst", "reference/autoplex.data.rss.jobs.rst", "reference/autoplex.data.rss.jobs.RandomizedStructure.rst", "reference/autoplex.data.rss.jobs.atomic_numbers.rst", "reference/autoplex.data.rss.jobs.covalent_radii.rst", "reference/autoplex.data.rss.jobs.do_rss_multi_node.rst", "reference/autoplex.data.rss.jobs.do_rss_single_node.rst", "reference/autoplex.data.rss.utils.rst", "reference/autoplex.data.rss.utils.GPa.rst", "reference/autoplex.data.rss.utils.HookeanRepulsion.rst", "reference/autoplex.data.rss.utils.atomic_numbers.rst", "reference/autoplex.data.rss.utils.chemical_symbols.rst", "reference/autoplex.data.rss.utils.extract_pairstyle.rst", "reference/autoplex.data.rss.utils.minimize_structures.rst", "reference/autoplex.data.rss.utils.process_rss.rst", "reference/autoplex.data.rss.utils.split_structure_into_groups.rst", "reference/autoplex.fitting.rst", "reference/autoplex.fitting.common.rst", "reference/autoplex.fitting.common.flows.rst", "reference/autoplex.fitting.common.flows.DataPreprocessing.rst", "reference/autoplex.fitting.common.flows.MLIPFitMaker.rst", "reference/autoplex.fitting.common.jobs.rst", "reference/autoplex.fitting.common.jobs.machine_learning_fit.rst", "reference/autoplex.fitting.common.regularization.rst", "reference/autoplex.fitting.common.regularization.calculate_hull_nd.rst", "reference/autoplex.fitting.common.regularization.get_convex_hull.rst", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull.rst", "reference/autoplex.fitting.common.regularization.get_e_distance_to_hull_nd.rst", "reference/autoplex.fitting.common.regularization.get_intersect.rst", "reference/autoplex.fitting.common.regularization.get_mole_frac.rst", "reference/autoplex.fitting.common.regularization.label_stoichiometry_volume.rst", "reference/autoplex.fitting.common.regularization.piecewise_linear.rst", "reference/autoplex.fitting.common.regularization.point_in_simplex_nd.rst", "reference/autoplex.fitting.common.regularization.point_in_triangle_2D.rst", "reference/autoplex.fitting.common.regularization.set_custom_sigma.rst", "reference/autoplex.fitting.common.utils.rst", "reference/autoplex.fitting.common.utils.CustomPotential.rst", "reference/autoplex.fitting.common.utils.calculate_delta_2b.rst", "reference/autoplex.fitting.common.utils.check_convergence.rst", "reference/autoplex.fitting.common.utils.chemical_symbols.rst", "reference/autoplex.fitting.common.utils.compute_num_of_descriptor.rst", "reference/autoplex.fitting.common.utils.convert_xyz_to_structure.rst", "reference/autoplex.fitting.common.utils.energy_remain.rst", "reference/autoplex.fitting.common.utils.extract_gap_label.rst", "reference/autoplex.fitting.common.utils.flatten.rst", "reference/autoplex.fitting.common.utils.gap_fitting.rst", "reference/autoplex.fitting.common.utils.gap_hyperparameter_constructor.rst", "reference/autoplex.fitting.common.utils.gcm3_to_Vm.rst", "reference/autoplex.fitting.common.utils.get_atomic_numbers.rst", "reference/autoplex.fitting.common.utils.get_list_of_vasp_calc_dirs.rst", "reference/autoplex.fitting.common.utils.jace_fitting.rst", "reference/autoplex.fitting.common.utils.m3gnet_fitting.rst", "reference/autoplex.fitting.common.utils.mace_fitting.rst", "reference/autoplex.fitting.common.utils.mace_virial_format_conversion.rst", "reference/autoplex.fitting.common.utils.nep_fitting.rst", "reference/autoplex.fitting.common.utils.nequip_fitting.rst", "reference/autoplex.fitting.common.utils.plot_convex_hull.rst", "reference/autoplex.fitting.common.utils.prepare_fit_environment.rst", "reference/autoplex.fitting.common.utils.run_ace.rst", "reference/autoplex.fitting.common.utils.run_ase_gap.rst", "reference/autoplex.fitting.common.utils.run_gap.rst", "reference/autoplex.fitting.common.utils.run_mace.rst", "reference/autoplex.fitting.common.utils.run_nep.rst", "reference/autoplex.fitting.common.utils.run_nequip.rst", "reference/autoplex.fitting.common.utils.vaspoutput_2_extended_xyz.rst", "reference/autoplex.fitting.common.utils.write_after_distillation_data_split.rst", "reference/autoplex.fitting.phonons.rst", "reference/autoplex.fitting.rss.rst", "reference/autoplex.misc.rst", "reference/autoplex.misc.castep.rst", "reference/autoplex.misc.castep.flows.rst", "reference/autoplex.misc.castep.jobs.rst", "reference/autoplex.misc.castep.jobs.BaseCastepMaker.rst", "reference/autoplex.misc.castep.jobs.CASTEP_INPUT_FILES.rst", "reference/autoplex.misc.castep.jobs.CASTEP_OUTPUT_FILES.rst", "reference/autoplex.misc.castep.jobs.CastepStaticMaker.rst", "reference/autoplex.misc.castep.jobs.GPa.rst", "reference/autoplex.misc.castep.jobs.TYPE_CHECKING.rst", "reference/autoplex.misc.castep.jobs.castep_job.rst", "reference/autoplex.misc.castep.run.rst", "reference/autoplex.misc.castep.run.run_castep.rst", "reference/autoplex.misc.castep.schema.rst", "reference/autoplex.misc.castep.schema.InputDoc.rst", "reference/autoplex.misc.castep.schema.OutputDoc.rst", "reference/autoplex.misc.castep.schema.TaskDoc.rst", "reference/autoplex.misc.castep.utils.rst", "reference/autoplex.misc.castep.utils.CASTEP_INPUT_FILES.rst", "reference/autoplex.misc.castep.utils.CASTEP_OUTPUT_FILES.rst", "reference/autoplex.misc.castep.utils.CastepInputGenerator.rst", "reference/autoplex.misc.castep.utils.CastepStaticSetGenerator.rst", "reference/autoplex.misc.utils.rst", "reference/autoplex.misc.utils.mock_castep.rst", "reference/autoplex.misc.utils.mock_castep.TYPE_CHECKING.rst", "reference/autoplex.misc.utils.mock_castep.clear_castep_inputs.rst", "reference/autoplex.misc.utils.mock_castep.copy_castep_outputs.rst", "reference/autoplex.misc.utils.mock_castep.fake_run_castep.rst", "reference/autoplex.misc.utils.mock_castep.monkeypatch_castep.rst", "reference/autoplex.misc.utils.mock_castep.zpath.rst", "reference/autoplex.settings.rst", "reference/autoplex.settings.AutoplexBaseModel.rst", "reference/autoplex.settings.AutoplexSettings.rst", "reference/autoplex.settings.BcurParams.rst", "reference/autoplex.settings.BuildcellOptions.rst", "reference/autoplex.settings.CustomIncar.rst", "reference/autoplex.settings.GAPGeneralSettings.rst", "reference/autoplex.settings.GAPSettings.rst", "reference/autoplex.settings.JACESettings.rst", "reference/autoplex.settings.LossCoeff.rst", "reference/autoplex.settings.M3GNETSettings.rst", "reference/autoplex.settings.MACESettings.rst", "reference/autoplex.settings.MLIPHypers.rst", "reference/autoplex.settings.NEPSettings.rst", "reference/autoplex.settings.NEQUIPSettings.rst", "reference/autoplex.settings.Nonlinearity.rst", "reference/autoplex.settings.ResumeFromPreviousState.rst", "reference/autoplex.settings.RssConfig.rst", "reference/autoplex.settings.SETTINGS.rst", "reference/autoplex.settings.SoapParas.rst", "reference/autoplex.settings.SoapSettings.rst", "reference/autoplex.settings.ThreebSettings.rst", "reference/autoplex.settings.TwobSettings.rst", "reference/index.rst", "user/executable/index.md", "user/executable/tutorial_phonon.md", "user/executable/tutorial_rss.md", "user/index.md", "user/installation/installation.md", "user/jobflowremote.md", "user/mongodb.md", "user/phonon/flows/benchmark/benchmark.md", "user/phonon/flows/fitting/fitting.md", "user/phonon/flows/flows.md", "user/phonon/flows/generation/data.md", "user/phonon/index.md", "user/rss.md", "user/rss/flow/example/example.md", "user/rss/flow/input/input.md", "user/rss/flow/introduction/intro.md", "user/rss/flow/quick_start/start.md", "user/rss/index.md", "user/setup.md", "user/tutorials.md"], "indexentries": {"abfix (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.ABFIX", false]], "add_dft_phonons() (autoplex.auto.phonons.flows.completedftvsmlbenchmarkworkflow static method)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.add_dft_phonons", false]], "add_dft_rattled() (autoplex.auto.phonons.flows.completedftvsmlbenchmarkworkflow static method)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.add_dft_rattled", false]], "add_species (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.add_species", false]], "add_species (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.add_species", false]], "add_species (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.add_species", false]], "addgrid (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.ADDGRID", false]], "adjust_forces() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.adjust_forces", false]], "adjust_momenta() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.adjust_momenta", false]], "adjust_positions() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.adjust_positions", false]], "adjust_potential_energy() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.adjust_potential_energy", false]], "algo (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.ALGO", false]], "allow_missing_labels (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.allow_missing_labels", false]], "allow_tf32 (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.allow_tf32", false]], "amix (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.AMIX", false]], "amsgrad (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.amsgrad", false]], "append (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.append", false]], "as_dict() (autoplex.settings.autoplexbasemodel method)": [[201, "autoplex.settings.AutoplexBaseModel.as_dict", false]], "ase_args (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.ase_args", false]], "at_file (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.at_file", false]], "atom_sigma (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.atom_sigma", false]], "atom_sigma (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.atom_sigma", false]], "atomic_numbers (in module autoplex.data.rss.jobs)": [[105, "autoplex.data.rss.jobs.atomic_numbers", false]], "atomic_numbers (in module autoplex.data.rss.utils)": [[112, "autoplex.data.rss.utils.atomic_numbers", false]], "auto_delta (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.auto_delta", false]], "autoplex.auto": [[8, "module-autoplex.auto", false]], "autoplex.auto.phonons": [[9, "module-autoplex.auto.phonons", false]], "autoplex.auto.phonons.flows": [[10, "module-autoplex.auto.phonons.flows", false]], "autoplex.auto.phonons.jobs": [[15, "module-autoplex.auto.phonons.jobs", false]], "autoplex.auto.rss": [[24, "module-autoplex.auto.rss", false]], "autoplex.auto.rss.flows": [[25, "module-autoplex.auto.rss.flows", false]], "autoplex.auto.rss.jobs": [[27, "module-autoplex.auto.rss.jobs", false]], "autoplex.benchmark": [[30, "module-autoplex.benchmark", false]], "autoplex.benchmark.phonons": [[31, "module-autoplex.benchmark.phonons", false]], "autoplex.benchmark.phonons.flows": [[32, "module-autoplex.benchmark.phonons.flows", false]], "autoplex.benchmark.phonons.jobs": [[34, "module-autoplex.benchmark.phonons.jobs", false]], "autoplex.benchmark.phonons.utils": [[36, "module-autoplex.benchmark.phonons.utils", false]], "autoplex.benchmark.rss": [[41, "module-autoplex.benchmark.rss", false]], "autoplex.data": [[42, "module-autoplex.data", false]], "autoplex.data.common": [[43, "module-autoplex.data.common", false]], "autoplex.data.common.flows": [[44, "module-autoplex.data.common.flows", false]], "autoplex.data.common.jobs": [[47, "module-autoplex.data.common.jobs", false]], "autoplex.data.common.utils": [[59, "module-autoplex.data.common.utils", false]], "autoplex.data.phonons": [[85, "module-autoplex.data.phonons", false]], "autoplex.data.phonons.flows": [[86, "module-autoplex.data.phonons.flows", false]], "autoplex.data.phonons.jobs": [[93, "module-autoplex.data.phonons.jobs", false]], "autoplex.data.phonons.utils": [[95, "module-autoplex.data.phonons.utils", false]], "autoplex.data.rss": [[100, "module-autoplex.data.rss", false]], "autoplex.data.rss.flows": [[101, "module-autoplex.data.rss.flows", false]], "autoplex.data.rss.jobs": [[103, "module-autoplex.data.rss.jobs", false]], "autoplex.data.rss.utils": [[109, "module-autoplex.data.rss.utils", false]], "autoplex.fitting": [[118, "module-autoplex.fitting", false]], "autoplex.fitting.common": [[119, "module-autoplex.fitting.common", false]], "autoplex.fitting.common.flows": [[120, "module-autoplex.fitting.common.flows", false]], "autoplex.fitting.common.jobs": [[123, "module-autoplex.fitting.common.jobs", false]], "autoplex.fitting.common.regularization": [[125, "module-autoplex.fitting.common.regularization", false]], "autoplex.fitting.common.utils": [[137, "module-autoplex.fitting.common.utils", false]], "autoplex.fitting.phonons": [[168, "module-autoplex.fitting.phonons", false]], "autoplex.fitting.rss": [[169, "module-autoplex.fitting.rss", false]], "autoplex.misc": [[170, "module-autoplex.misc", false]], "autoplex.misc.castep": [[171, "module-autoplex.misc.castep", false]], "autoplex.misc.castep.flows": [[172, "module-autoplex.misc.castep.flows", false]], "autoplex.misc.castep.jobs": [[173, "module-autoplex.misc.castep.jobs", false]], "autoplex.misc.castep.run": [[181, "module-autoplex.misc.castep.run", false]], "autoplex.misc.castep.schema": [[183, "module-autoplex.misc.castep.schema", false]], "autoplex.misc.castep.utils": [[187, "module-autoplex.misc.castep.utils", false]], "autoplex.misc.utils": [[192, "module-autoplex.misc.utils", false]], "autoplex.misc.utils.mock_castep": [[193, "module-autoplex.misc.utils.mock_castep", false]], "autoplex.settings": [[200, "module-autoplex.settings", false]], "average (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.average", false]], "avg_num_neighbors (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.avg_num_neighbors", false]], "basecastepmaker (class in autoplex.misc.castep.jobs)": [[174, "autoplex.misc.castep.jobs.BaseCastepMaker", false]], "basis_size (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.basis_size", false]], "batch (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.batch", false]], "batch_size (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.batch_size", false]], "batch_size (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.batch_size", false]], "batch_size (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.batch_size", false]], "bcur_params (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.bcur_params", false]], "besselbasis_trainable (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.besselbasis_trainable", false]], "bolt_max_num (autoplex.settings.bcurparams attribute)": [[203, "autoplex.settings.BcurParams.bolt_max_num", false]], "boltzhist_cur_dual_iter() (in module autoplex.data.common.utils)": [[62, "autoplex.data.common.utils.boltzhist_cur_dual_iter", false]], "boltzhist_cur_one_shot() (in module autoplex.data.common.utils)": [[63, "autoplex.data.common.utils.boltzhist_cur_one_shot", false]], "buildcell_options (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.buildcell_options", false]], "buildmultirandomizedstructure (class in autoplex.data.rss.flows)": [[102, "autoplex.data.rss.flows.BuildMultiRandomizedStructure", false]], "calculate() (autoplex.fitting.common.utils.custompotential method)": [[138, "autoplex.fitting.common.utils.CustomPotential.calculate", false]], "calculate_delta_2b() (in module autoplex.fitting.common.utils)": [[139, "autoplex.fitting.common.utils.calculate_delta_2b", false]], "calculate_hull_nd() (in module autoplex.fitting.common.regularization)": [[126, "autoplex.fitting.common.regularization.calculate_hull_nd", false]], "castep_cmd (autoplex.settings.autoplexsettings attribute)": [[202, "autoplex.settings.AutoplexSettings.CASTEP_CMD", false]], "castep_input_files (in module autoplex.misc.castep.jobs)": [[175, "autoplex.misc.castep.jobs.CASTEP_INPUT_FILES", false]], "castep_input_files (in module autoplex.misc.castep.utils)": [[188, "autoplex.misc.castep.utils.CASTEP_INPUT_FILES", false]], "castep_job() (in module autoplex.misc.castep.jobs)": [[180, "autoplex.misc.castep.jobs.castep_job", false]], "castep_keywords (autoplex.settings.autoplexsettings attribute)": [[202, "autoplex.settings.AutoplexSettings.CASTEP_KEYWORDS", false]], "castep_output_files (in module autoplex.misc.castep.jobs)": [[176, "autoplex.misc.castep.jobs.CASTEP_OUTPUT_FILES", false]], "castep_output_files (in module autoplex.misc.castep.utils)": [[189, "autoplex.misc.castep.utils.CASTEP_OUTPUT_FILES", false]], "castepinputgenerator (class in autoplex.misc.castep.utils)": [[190, "autoplex.misc.castep.utils.CastepInputGenerator", false]], "castepstaticmaker (class in autoplex.misc.castep.jobs)": [[177, "autoplex.misc.castep.jobs.CastepStaticMaker", false]], "castepstaticsetgenerator (class in autoplex.misc.castep.utils)": [[191, "autoplex.misc.castep.utils.CastepStaticSetGenerator", false]], "cell_seed_paths (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.cell_seed_paths", false]], "cell_updates (autoplex.misc.castep.utils.castepinputgenerator property)": [[190, "autoplex.misc.castep.utils.CastepInputGenerator.cell_updates", false]], "cell_updates (autoplex.misc.castep.utils.castepstaticsetgenerator property)": [[191, "autoplex.misc.castep.utils.CastepStaticSetGenerator.cell_updates", false]], "central_weight (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.central_weight", false]], "check_convergence() (in module autoplex.fitting.common.utils)": [[140, "autoplex.fitting.common.utils.check_convergence", false]], "check_convergence_castep() (in module autoplex.data.common.jobs)": [[49, "autoplex.data.common.jobs.check_convergence_castep", false]], "check_convergence_vasp() (in module autoplex.data.common.jobs)": [[50, "autoplex.data.common.jobs.check_convergence_vasp", false]], "check_distances() (in module autoplex.data.common.utils)": [[64, "autoplex.data.common.utils.check_distances", false]], "check_supercells() (in module autoplex.data.phonons.utils)": [[96, "autoplex.data.phonons.utils.check_supercells", false]], "chemical_symbols (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.chemical_symbols", false]], "chemical_symbols (in module autoplex.data.rss.utils)": [[113, "autoplex.data.rss.utils.chemical_symbols", false]], "chemical_symbols (in module autoplex.fitting.common.utils)": [[141, "autoplex.fitting.common.utils.chemical_symbols", false]], "clear_castep_inputs() (in module autoplex.misc.utils.mock_castep)": [[195, "autoplex.misc.utils.mock_castep.clear_castep_inputs", false]], "collect_dft_data() (in module autoplex.data.common.jobs)": [[51, "autoplex.data.common.jobs.collect_dft_data", false]], "compact_clusters (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.compact_clusters", false]], "compact_clusters (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.compact_clusters", false]], "compare_plot() (in module autoplex.benchmark.phonons.utils)": [[37, "autoplex.benchmark.phonons.utils.compare_plot", false]], "complete_benchmark() (in module autoplex.auto.phonons.jobs)": [[16, "autoplex.auto.phonons.jobs.complete_benchmark", false]], "completedftvsmlbenchmarkworkflow (class in autoplex.auto.phonons.flows)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow", false]], "completedftvsmlbenchmarkworkflowmpsettings (class in autoplex.auto.phonons.flows)": [[12, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflowMPSettings", false]], "compute_avg_num_neighbors (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.compute_avg_num_neighbors", false]], "compute_bandstructure_benchmark_metrics() (in module autoplex.benchmark.phonons.utils)": [[38, "autoplex.benchmark.phonons.utils.compute_bandstructure_benchmark_metrics", false]], "compute_forces (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.compute_forces", false]], "compute_num_of_descriptor() (in module autoplex.fitting.common.utils)": [[142, "autoplex.fitting.common.utils.compute_num_of_descriptor", false]], "compute_statistics (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.compute_statistics", false]], "compute_stress (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.compute_stress", false]], "config_file (autoplex.settings.autoplexsettings attribute)": [[202, "autoplex.settings.AutoplexSettings.CONFIG_FILE", false]], "config_type_weights (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.config_type_weights", false]], "config_types (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.config_types", false]], "convert_to_extxyz() (in module autoplex.data.common.jobs)": [[52, "autoplex.data.common.jobs.convert_to_extxyz", false]], "convert_xyz_to_structure() (in module autoplex.fitting.common.utils)": [[143, "autoplex.fitting.common.utils.convert_xyz_to_structure", false]], "convexhull_cur() (in module autoplex.data.common.utils)": [[65, "autoplex.data.common.utils.convexhull_cur", false]], "copy_castep_outputs() (in module autoplex.misc.utils.mock_castep)": [[196, "autoplex.misc.utils.mock_castep.copy_castep_outputs", false]], "correlation (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.correlation", false]], "covalent_radii (in module autoplex.data.rss.jobs)": [[106, "autoplex.data.rss.jobs.covalent_radii", false]], "covariance_type (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.covariance_type", false]], "covariance_type (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.covariance_type", false]], "covariance_type (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.covariance_type", false]], "create_soap_descriptor() (in module autoplex.data.common.utils)": [[66, "autoplex.data.common.utils.create_soap_descriptor", false]], "cur_select() (in module autoplex.data.common.utils)": [[67, "autoplex.data.common.utils.cur_select", false]], "current_iter_index (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.current_iter_index", false]], "custom_incar (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.custom_incar", false]], "custom_potcar (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.custom_potcar", false]], "custompotential (class in autoplex.fitting.common.utils)": [[138, "autoplex.fitting.common.utils.CustomPotential", false]], "cutoff (autoplex.settings.jacesettings attribute)": [[208, "autoplex.settings.JACESettings.cutoff", false]], "cutoff (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.cutoff", false]], "cutoff (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.cutoff", false]], "cutoff (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.cutoff", false]], "cutoff (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.cutoff", false]], "cutoff (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.cutoff", false]], "cutoff (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.cutoff", false]], "cutoff_transition_width (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.cutoff_transition_width", false]], "cutoff_transition_width (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.cutoff_transition_width", false]], "data_distillation() (in module autoplex.data.common.utils)": [[68, "autoplex.data.common.utils.data_distillation", false]], "data_mean (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.data_mean", false]], "data_std (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.data_std", false]], "datapreprocessing (class in autoplex.fitting.common.flows)": [[121, "autoplex.fitting.common.flows.DataPreprocessing", false]], "dataset (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.dataset", false]], "dataset_file_name (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.dataset_file_name", false]], "dataset_key_mapping (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.dataset_key_mapping", false]], "dataset_seed (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.dataset_seed", false]], "decay_alpha (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.decay_alpha", false]], "decay_steps (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.decay_steps", false]], "default_dtype (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.default_dtype", false]], "default_dtype (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.default_dtype", false]], "default_sigma (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.default_sigma", false]], "delta (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.delta", false]], "delta (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.delta", false]], "delta (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.delta", false]], "device (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.device", false]], "device_for_fitting (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.device_for_fitting", false]], "device_for_rss (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.device_for_rss", false]], "dft_phonopy_gen_data() (in module autoplex.auto.phonons.jobs)": [[17, "autoplex.auto.phonons.jobs.dft_phonopy_gen_data", false]], "dft_random_gen_data() (in module autoplex.auto.phonons.jobs)": [[18, "autoplex.auto.phonons.jobs.dft_random_gen_data", false]], "dft_ref_file (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.dft_ref_file", false]], "dftphononmaker (class in autoplex.data.phonons.flows)": [[87, "autoplex.data.phonons.flows.DFTPhononMaker", false]], "dftstaticlabelling (class in autoplex.data.common.flows)": [[45, "autoplex.data.common.flows.DFTStaticLabelling", false]], "dftsupercellsettingsmaker (class in autoplex.auto.phonons.flows)": [[13, "autoplex.auto.phonons.flows.DFTSupercellSettingsMaker", false]], "dim_edge_embedding (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.dim_edge_embedding", false]], "dim_node_embedding (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.dim_node_embedding", false]], "dim_state_embedding (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.dim_state_embedding", false]], "dimer_box (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.dimer_box", false]], "dimer_num (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.dimer_num", false]], "dimer_range (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.dimer_range", false]], "dir_name (autoplex.misc.castep.schema.taskdoc attribute)": [[186, "autoplex.misc.castep.schema.TaskDoc.dir_name", false]], "distance_nb_order (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.distance_Nb_order", false]], "distance_nb_order (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.distance_Nb_order", false]], "distillation (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.distillation", false]], "distributed (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.distributed", false]], "do_copy_at_file (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.do_copy_at_file", false]], "do_iterative_rattled_structures() (in module autoplex.auto.phonons.jobs)": [[19, "autoplex.auto.phonons.jobs.do_iterative_rattled_structures", false]], "do_rss_iterations() (in module autoplex.auto.rss.jobs)": [[28, "autoplex.auto.rss.jobs.do_rss_iterations", false]], "do_rss_multi_node() (in module autoplex.data.rss.jobs)": [[107, "autoplex.data.rss.jobs.do_rss_multi_node", false]], "do_rss_single_node() (in module autoplex.data.rss.jobs)": [[108, "autoplex.data.rss.jobs.do_rss_single_node", false]], "e (autoplex.settings.nonlinearity attribute)": [[215, "autoplex.settings.Nonlinearity.e", false]], "e0_offset (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.e0_offset", false]], "e0_spin (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.e0_spin", false]], "e0s (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.E0s", false]], "early_stopping_lower_bounds (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.early_stopping_lower_bounds", false]], "early_stopping_patiences (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.early_stopping_patiences", false]], "ediff (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.EDIFF", false]], "element_refs (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.element_refs", false]], "elementcollection (class in autoplex.data.common.utils)": [[60, "autoplex.data.common.utils.ElementCollection", false]], "ema (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.ema", false]], "ema_decay (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.ema_decay", false]], "ema_decay (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.ema_decay", false]], "ema_use_num_updates (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.ema_use_num_updates", false]], "encut (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.ENCUT", false]], "energy (autoplex.misc.castep.schema.outputdoc attribute)": [[185, "autoplex.misc.castep.schema.OutputDoc.energy", false]], "energy_parameter_name (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.energy_parameter_name", false]], "energy_per_atom (autoplex.misc.castep.schema.outputdoc attribute)": [[185, "autoplex.misc.castep.schema.OutputDoc.energy_per_atom", false]], "energy_plot() (in module autoplex.data.common.utils)": [[69, "autoplex.data.common.utils.energy_plot", false]], "energy_remain() (in module autoplex.fitting.common.utils)": [[144, "autoplex.fitting.common.utils.energy_remain", false]], "energy_weight (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.energy_weight", false]], "energy_weight (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.energy_weight", false]], "exp_name (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.exp_name", false]], "extract_gap_label() (in module autoplex.fitting.common.utils)": [[145, "autoplex.fitting.common.utils.extract_gap_label", false]], "extract_pairstyle() (in module autoplex.data.rss.utils)": [[114, "autoplex.data.rss.utils.extract_pairstyle", false]], "f0 (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.f0", false]], "f0 (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.f0", false]], "f0 (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.f0", false]], "fake_run_castep() (in module autoplex.misc.utils.mock_castep)": [[197, "autoplex.misc.utils.mock_castep.fake_run_castep", false]], "filter_outlier_energy() (in module autoplex.data.common.utils)": [[70, "autoplex.data.common.utils.filter_outlier_energy", false]], "filter_outlier_forces() (in module autoplex.data.common.utils)": [[71, "autoplex.data.common.utils.filter_outlier_forces", false]], "find_element_pairs() (autoplex.data.common.utils.elementcollection method)": [[60, "autoplex.data.common.utils.ElementCollection.find_element_pairs", false]], "flatten() (in module autoplex.data.common.utils)": [[72, "autoplex.data.common.utils.flatten", false]], "flatten() (in module autoplex.fitting.common.utils)": [[146, "autoplex.fitting.common.utils.flatten", false]], "flatten_list() (in module autoplex.data.common.utils)": [[73, "autoplex.data.common.utils.flatten_list", false]], "force_delta (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.force_delta", false]], "force_label (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.force_label", false]], "force_max (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.force_max", false]], "force_parameter_name (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.force_parameter_name", false]], "force_plot() (in module autoplex.data.common.utils)": [[74, "autoplex.data.common.utils.force_plot", false]], "force_tol (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.force_tol", false]], "force_weight (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.force_weight", false]], "forces (autoplex.misc.castep.schema.outputdoc attribute)": [[185, "autoplex.misc.castep.schema.OutputDoc.forces", false]], "forces (autoplex.settings.losscoeff attribute)": [[209, "autoplex.settings.LossCoeff.forces", false]], "forces_weight (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.forces_weight", false]], "foundation_filter_elements (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.foundation_filter_elements", false]], "foundation_model (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.foundation_model", false]], "foundation_model (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.foundation_model", false]], "foundation_model_readout (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.foundation_model_readout", false]], "frac_of_bcur (autoplex.settings.bcurparams attribute)": [[203, "autoplex.settings.BcurParams.frac_of_bcur", false]], "fragment_file (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.fragment_file", false]], "fragment_numbers (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.fragment_numbers", false]], "from_dict() (autoplex.settings.autoplexbasemodel class method)": [[201, "autoplex.settings.AutoplexBaseModel.from_dict", false]], "from_file() (autoplex.settings.autoplexbasemodel class method)": [[201, "autoplex.settings.AutoplexBaseModel.from_file", false]], "from_file() (autoplex.settings.rssconfig class method)": [[217, "autoplex.settings.RssConfig.from_file", false]], "gap (autoplex.settings.mliphypers attribute)": [[212, "autoplex.settings.MLIPHypers.GAP", false]], "gap_fitting() (in module autoplex.fitting.common.utils)": [[147, "autoplex.fitting.common.utils.gap_fitting", false]], "gap_hyperparameter_constructor() (in module autoplex.fitting.common.utils)": [[148, "autoplex.fitting.common.utils.gap_hyperparameter_constructor", false]], "gcm3_to_vm() (in module autoplex.fitting.common.utils)": [[149, "autoplex.fitting.common.utils.gcm3_to_Vm", false]], "general (autoplex.settings.gapsettings attribute)": [[207, "autoplex.settings.GAPSettings.general", false]], "generate_randomized_structures() (in module autoplex.data.common.jobs)": [[53, "autoplex.data.common.jobs.generate_randomized_structures", false]], "generate_supercells() (in module autoplex.auto.phonons.jobs)": [[20, "autoplex.auto.phonons.jobs.generate_supercells", false]], "generated_struct_numbers (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.generated_struct_numbers", false]], "generatetrainingdatafortesting (class in autoplex.data.common.flows)": [[46, "autoplex.data.common.flows.GenerateTrainingDataForTesting", false]], "generation (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.generation", false]], "generic type": [[6, "term-generic-type", true]], "get_atomic_numbers() (in module autoplex.fitting.common.utils)": [[150, "autoplex.fitting.common.utils.get_atomic_numbers", false]], "get_convex_hull() (in module autoplex.fitting.common.regularization)": [[127, "autoplex.fitting.common.regularization.get_convex_hull", false]], "get_e_distance_to_hull() (in module autoplex.fitting.common.regularization)": [[128, "autoplex.fitting.common.regularization.get_e_distance_to_hull", false]], "get_e_distance_to_hull_nd() (in module autoplex.fitting.common.regularization)": [[129, "autoplex.fitting.common.regularization.get_e_distance_to_hull_nd", false]], "get_indices() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.get_indices", false]], "get_input_set() (autoplex.misc.castep.utils.castepinputgenerator method)": [[190, "autoplex.misc.castep.utils.CastepInputGenerator.get_input_set", false]], "get_intersect() (in module autoplex.fitting.common.regularization)": [[130, "autoplex.fitting.common.regularization.get_intersect", false]], "get_iso_atom() (in module autoplex.auto.phonons.jobs)": [[21, "autoplex.auto.phonons.jobs.get_iso_atom", false]], "get_list_of_vasp_calc_dirs() (in module autoplex.fitting.common.utils)": [[151, "autoplex.fitting.common.utils.get_list_of_vasp_calc_dirs", false]], "get_mole_frac() (in module autoplex.fitting.common.regularization)": [[131, "autoplex.fitting.common.regularization.get_mole_frac", false]], "get_number_of_species() (autoplex.data.common.utils.elementcollection method)": [[60, "autoplex.data.common.utils.ElementCollection.get_number_of_species", false]], "get_phonon_output() (in module autoplex.auto.phonons.jobs)": [[22, "autoplex.auto.phonons.jobs.get_phonon_output", false]], "get_removed_dof() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.get_removed_dof", false]], "get_rmse() (in module autoplex.benchmark.phonons.utils)": [[39, "autoplex.benchmark.phonons.utils.get_rmse", false]], "get_species() (autoplex.data.common.utils.elementcollection method)": [[60, "autoplex.data.common.utils.ElementCollection.get_species", false]], "get_species_z() (autoplex.data.common.utils.elementcollection method)": [[60, "autoplex.data.common.utils.ElementCollection.get_species_Z", false]], "get_supercell_job() (in module autoplex.data.common.jobs)": [[54, "autoplex.data.common.jobs.get_supercell_job", false]], "gga (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.GGA", false]], "gp_file (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.gp_file", false]], "gpa (in module autoplex.data.common.utils)": [[61, "autoplex.data.common.utils.GPa", false]], "gpa (in module autoplex.data.rss.utils)": [[110, "autoplex.data.rss.utils.GPa", false]], "gpa (in module autoplex.misc.castep.jobs)": [[178, "autoplex.misc.castep.jobs.GPa", false]], "handle_rss_trajectory() (in module autoplex.data.common.utils)": [[75, "autoplex.data.common.utils.handle_rss_trajectory", false]], "hidden_irreps (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.hidden_irreps", false]], "hookean_paras (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.hookean_paras", false]], "hookean_repul (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.hookean_repul", false]], "hookeanrepulsion (class in autoplex.data.rss.utils)": [[111, "autoplex.data.rss.utils.HookeanRepulsion", false]], "include_dimer (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.include_dimer", false]], "include_isolated_atom (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.include_isolated_atom", false]], "include_line_graph (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.include_line_graph", false]], "include_stresses (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.include_stresses", false]], "index_shuffle() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.index_shuffle", false]], "initial_kt (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.initial_kt", false]], "initial_rss() (in module autoplex.auto.rss.jobs)": [[29, "autoplex.auto.rss.jobs.initial_rss", false]], "initial_selection_enabled (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.initial_selection_enabled", false]], "input (autoplex.misc.castep.schema.taskdoc attribute)": [[186, "autoplex.misc.castep.schema.TaskDoc.input", false]], "input_set (autoplex.misc.castep.schema.inputdoc attribute)": [[184, "autoplex.misc.castep.schema.InputDoc.input_set", false]], "invariant_layers (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.invariant_layers", false]], "invariant_neurons (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.invariant_neurons", false]], "is_intensive (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.is_intensive", false]], "ismear (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.ISMEAR", false]], "isoatommaker (class in autoplex.data.phonons.flows)": [[88, "autoplex.data.phonons.flows.IsoAtomMaker", false]], "isoatomstaticmaker (class in autoplex.data.phonons.flows)": [[89, "autoplex.data.phonons.flows.IsoAtomStaticMaker", false]], "isolated_atom_energies (autoplex.settings.resumefrompreviousstate attribute)": [[216, "autoplex.settings.ResumeFromPreviousState.isolated_atom_energies", false]], "isolatedatom_box (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.isolatedatom_box", false]], "isym (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.ISYM", false]], "iterativecompletedftvsmlbenchmarkworkflow (class in autoplex.auto.phonons.flows)": [[14, "autoplex.auto.phonons.flows.IterativeCompleteDFTvsMLBenchmarkWorkflow", false]], "j_ace (autoplex.settings.mliphypers attribute)": [[212, "autoplex.settings.MLIPHypers.J_ACE", false]], "jace_fitting() (in module autoplex.fitting.common.utils)": [[152, "autoplex.fitting.common.utils.jace_fitting", false]], "keep_checkpoint (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.keep_checkpoint", false]], "keep_isolated_atoms (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.keep_isolated_atoms", false]], "keep_symmetry (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.keep_symmetry", false]], "kpar (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.KPAR", false]], "kspacing (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.KSPACING", false]], "l_max (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.l_max", false]], "l_max (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.l_max", false]], "l_max (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.l_max", false]], "l_max (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.l_max", false]], "label_stoichiometry_volume() (in module autoplex.fitting.common.regularization)": [[132, "autoplex.fitting.common.regularization.label_stoichiometry_volume", false]], "lambda_1 (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.lambda_1", false]], "lambda_e (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.lambda_e", false]], "lambda_f (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.lambda_f", false]], "lambda_v (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.lambda_v", false]], "lcharg (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.LCHARG", false]], "learning_rate (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.learning_rate", false]], "log_batch_freq (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.log_batch_freq", false]], "log_epoch_freq (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.log_epoch_freq", false]], "loss (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.loss", false]], "loss (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.loss", false]], "loss_coeffs (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.loss_coeffs", false]], "loss_params (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.loss_params", false]], "lplane (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.LPLANE", false]], "lr (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.lr", false]], "lr (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.lr", false]], "lr_scheduler_factor (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.lr_scheduler_factor", false]], "lr_scheduler_name (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.lr_scheduler_name", false]], "lr_scheduler_patience (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.lr_scheduler_patience", false]], "lreal (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.LREAL", false]], "lscalapack (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.LSCALAPACK", false]], "lwave (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.LWAVE", false]], "m3gnet (autoplex.settings.mliphypers attribute)": [[212, "autoplex.settings.MLIPHypers.M3GNET", false]], "m3gnet_fitting() (in module autoplex.fitting.common.utils)": [[153, "autoplex.fitting.common.utils.m3gnet_fitting", false]], "mace (autoplex.settings.mliphypers attribute)": [[212, "autoplex.settings.MLIPHypers.MACE", false]], "mace_fitting() (in module autoplex.fitting.common.utils)": [[154, "autoplex.fitting.common.utils.mace_fitting", false]], "mace_virial_format_conversion() (in module autoplex.fitting.common.utils)": [[155, "autoplex.fitting.common.utils.mace_virial_format_conversion", false]], "machine_learning_fit() (in module autoplex.fitting.common.jobs)": [[124, "autoplex.fitting.common.jobs.machine_learning_fit", false]], "magmom_target (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.magmom_target", false]], "magmom_weight (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.magmom_weight", false]], "make() (autoplex.auto.phonons.flows.completedftvsmlbenchmarkworkflow method)": [[11, "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow.make", false]], "make() (autoplex.auto.phonons.flows.dftsupercellsettingsmaker method)": [[13, "autoplex.auto.phonons.flows.DFTSupercellSettingsMaker.make", false]], "make() (autoplex.auto.phonons.flows.iterativecompletedftvsmlbenchmarkworkflow method)": [[14, "autoplex.auto.phonons.flows.IterativeCompleteDFTvsMLBenchmarkWorkflow.make", false]], "make() (autoplex.auto.rss.flows.rssmaker method)": [[26, "autoplex.auto.rss.flows.RssMaker.make", false]], "make() (autoplex.benchmark.phonons.flows.phononbenchmarkmaker method)": [[33, "autoplex.benchmark.phonons.flows.PhononBenchmarkMaker.make", false]], "make() (autoplex.data.common.flows.dftstaticlabelling method)": [[45, "autoplex.data.common.flows.DFTStaticLabelling.make", false]], "make() (autoplex.data.common.flows.generatetrainingdatafortesting method)": [[46, "autoplex.data.common.flows.GenerateTrainingDataForTesting.make", false]], "make() (autoplex.data.phonons.flows.isoatommaker method)": [[88, "autoplex.data.phonons.flows.IsoAtomMaker.make", false]], "make() (autoplex.data.phonons.flows.randomstructuresdatagenerator method)": [[91, "autoplex.data.phonons.flows.RandomStructuresDataGenerator.make", false]], "make() (autoplex.data.rss.flows.buildmultirandomizedstructure method)": [[102, "autoplex.data.rss.flows.BuildMultiRandomizedStructure.make", false]], "make() (autoplex.data.rss.jobs.randomizedstructure method)": [[104, "autoplex.data.rss.jobs.RandomizedStructure.make", false]], "make() (autoplex.fitting.common.flows.datapreprocessing method)": [[121, "autoplex.fitting.common.flows.DataPreprocessing.make", false]], "make() (autoplex.fitting.common.flows.mlipfitmaker method)": [[122, "autoplex.fitting.common.flows.MLIPFitMaker.make", false]], "make() (autoplex.misc.castep.jobs.basecastepmaker method)": [[174, "autoplex.misc.castep.jobs.BaseCastepMaker.make", false]], "make_from_ml_model() (autoplex.data.phonons.flows.mlphononmaker method)": [[90, "autoplex.data.phonons.flows.MLPhononMaker.make_from_ml_model", false]], "max_epochs (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.max_epochs", false]], "max_epochs (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.max_epochs", false]], "max_iteration_number (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.max_iteration_number", false]], "max_l (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.max_l", false]], "max_n (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.max_n", false]], "max_num_epochs (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.max_num_epochs", false]], "max_steps (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.max_steps", false]], "mc_rattle() (in module autoplex.data.common.utils)": [[76, "autoplex.data.common.utils.mc_rattle", false]], "metrics_components (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.metrics_components", false]], "metrics_key (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.metrics_key", false]], "minimize_structures() (in module autoplex.data.rss.utils)": [[115, "autoplex.data.rss.utils.minimize_structures", false]], "minsep (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.MINSEP", false]], "ml_phonon_maker_preparation() (in module autoplex.data.phonons.utils)": [[97, "autoplex.data.phonons.utils.ml_phonon_maker_preparation", false]], "mlip_hypers (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.mlip_hypers", false]], "mlip_path (autoplex.settings.resumefrompreviousstate attribute)": [[216, "autoplex.settings.ResumeFromPreviousState.mlip_path", false]], "mlip_type (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.mlip_type", false]], "mlipfitmaker (class in autoplex.fitting.common.flows)": [[122, "autoplex.fitting.common.flows.MLIPFitMaker", false]], "mlphononmaker (class in autoplex.data.phonons.flows)": [[90, "autoplex.data.phonons.flows.MLPhononMaker", false]], "model (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.model", false]], "model_dtype (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.model_dtype", false]], "model_type (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.model_type", false]], "module": [[8, "module-autoplex.auto", false], [9, "module-autoplex.auto.phonons", false], [10, "module-autoplex.auto.phonons.flows", false], [15, "module-autoplex.auto.phonons.jobs", false], [24, "module-autoplex.auto.rss", false], [25, "module-autoplex.auto.rss.flows", false], [27, "module-autoplex.auto.rss.jobs", false], [30, "module-autoplex.benchmark", false], [31, "module-autoplex.benchmark.phonons", false], [32, "module-autoplex.benchmark.phonons.flows", false], [34, "module-autoplex.benchmark.phonons.jobs", false], [36, "module-autoplex.benchmark.phonons.utils", false], [41, "module-autoplex.benchmark.rss", false], [42, "module-autoplex.data", false], [43, "module-autoplex.data.common", false], [44, "module-autoplex.data.common.flows", false], [47, "module-autoplex.data.common.jobs", false], [59, "module-autoplex.data.common.utils", false], [85, "module-autoplex.data.phonons", false], [86, "module-autoplex.data.phonons.flows", false], [93, "module-autoplex.data.phonons.jobs", false], [95, "module-autoplex.data.phonons.utils", false], [100, "module-autoplex.data.rss", false], [101, "module-autoplex.data.rss.flows", false], [103, "module-autoplex.data.rss.jobs", false], [109, "module-autoplex.data.rss.utils", false], [118, "module-autoplex.fitting", false], [119, "module-autoplex.fitting.common", false], [120, "module-autoplex.fitting.common.flows", false], [123, "module-autoplex.fitting.common.jobs", false], [125, "module-autoplex.fitting.common.regularization", false], [137, "module-autoplex.fitting.common.utils", false], [168, "module-autoplex.fitting.phonons", false], [169, "module-autoplex.fitting.rss", false], [170, "module-autoplex.misc", false], [171, "module-autoplex.misc.castep", false], [172, "module-autoplex.misc.castep.flows", false], [173, "module-autoplex.misc.castep.jobs", false], [181, "module-autoplex.misc.castep.run", false], [183, "module-autoplex.misc.castep.schema", false], [187, "module-autoplex.misc.castep.utils", false], [192, "module-autoplex.misc.utils", false], [193, "module-autoplex.misc.utils.mock_castep", false], [200, "module-autoplex.settings", false]], "monkeypatch_castep() (in module autoplex.misc.utils.mock_castep)": [[198, "autoplex.misc.utils.mock_castep.monkeypatch_castep", false]], "multiheads_finetuning (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.multiheads_finetuning", false]], "n_max (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.n_max", false]], "n_max (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.n_max", false]], "n_max (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.n_max", false]], "n_sparse (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.n_sparse", false]], "n_sparse (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.n_sparse", false]], "n_sparse (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.n_sparse", false]], "n_train (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.n_train", false]], "n_val (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.n_val", false]], "name (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.name", false]], "nblocks (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.nblocks", false]], "ncore (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.NCORE", false]], "nelm (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.NELM", false]], "nep (autoplex.settings.mliphypers attribute)": [[212, "autoplex.settings.MLIPHypers.NEP", false]], "nep_fitting() (in module autoplex.fitting.common.utils)": [[156, "autoplex.fitting.common.utils.nep_fitting", false]], "nequip (autoplex.settings.mliphypers attribute)": [[212, "autoplex.settings.MLIPHypers.NEQUIP", false]], "nequip_fitting() (in module autoplex.fitting.common.utils)": [[157, "autoplex.fitting.common.utils.nequip_fitting", false]], "neuron (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.neuron", false]], "nform (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.NFORM", false]], "nonlinearity_gates (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.nonlinearity_gates", false]], "nonlinearity_scalars (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.nonlinearity_scalars", false]], "nonlinearity_type (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.nonlinearity_type", false]], "num_basis (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.num_basis", false]], "num_features (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.num_features", false]], "num_groups (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.num_groups", false]], "num_layers (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.num_layers", false]], "num_of_initial_selected_structs (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.num_of_initial_selected_structs", false]], "num_of_rss_selected_structs (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.num_of_rss_selected_structs", false]], "num_processes_buildcell (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.num_processes_buildcell", false]], "num_processes_fit (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.num_processes_fit", false]], "num_processes_rss (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.num_processes_rss", false]], "o (autoplex.settings.nonlinearity attribute)": [[215, "autoplex.settings.Nonlinearity.o", false]], "octet (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.OCTET", false]], "openmp_chunk_size (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.openmp_chunk_size", false]], "optimizer (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.optimizer", false]], "optimizer_amsgrad (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.optimizer_amsgrad", false]], "optimizer_name (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.optimizer_name", false]], "order (autoplex.settings.jacesettings attribute)": [[208, "autoplex.settings.JACESettings.order", false]], "output (autoplex.misc.castep.schema.taskdoc attribute)": [[186, "autoplex.misc.castep.schema.TaskDoc.output", false]], "overlap (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.OVERLAP", false]], "pair_repulsion (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.pair_repulsion", false]], "parallel_calc_descriptor_vec() (in module autoplex.data.common.utils)": [[77, "autoplex.data.common.utils.parallel_calc_descriptor_vec", false]], "param_updates (autoplex.misc.castep.utils.castepinputgenerator property)": [[190, "autoplex.misc.castep.utils.CastepInputGenerator.param_updates", false]], "param_updates (autoplex.misc.castep.utils.castepstaticsetgenerator property)": [[191, "autoplex.misc.castep.utils.CastepStaticSetGenerator.param_updates", false]], "parity (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.parity", false]], "patience (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.patience", false]], "per_species_rescale_scales (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.per_species_rescale_scales", false]], "per_species_rescale_scales_trainable (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.per_species_rescale_scales_trainable", false]], "per_species_rescale_shifts (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.per_species_rescale_shifts", false]], "per_species_rescale_shifts_trainable (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.per_species_rescale_shifts_trainable", false]], "phononbenchmarkmaker (class in autoplex.benchmark.phonons.flows)": [[33, "autoplex.benchmark.phonons.flows.PhononBenchmarkMaker", false]], "piecewise_linear() (in module autoplex.fitting.common.regularization)": [[133, "autoplex.fitting.common.regularization.piecewise_linear", false]], "plot_convex_hull() (in module autoplex.fitting.common.utils)": [[158, "autoplex.fitting.common.utils.plot_convex_hull", false]], "plot_energy_forces() (in module autoplex.data.common.utils)": [[78, "autoplex.data.common.utils.plot_energy_forces", false]], "plot_force_distribution() (in module autoplex.data.common.jobs)": [[55, "autoplex.data.common.jobs.plot_force_distribution", false]], "point_in_simplex_nd() (in module autoplex.fitting.common.regularization)": [[134, "autoplex.fitting.common.regularization.point_in_simplex_nd", false]], "point_in_triangle_2d() (in module autoplex.fitting.common.regularization)": [[135, "autoplex.fitting.common.regularization.point_in_triangle_2D", false]], "polynomialcutoff_p (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.polynomialcutoff_p", false]], "population (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.population", false]], "pre_database_dir (autoplex.settings.resumefrompreviousstate attribute)": [[216, "autoplex.settings.ResumeFromPreviousState.pre_database_dir", false]], "pre_database_dir (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.pre_database_dir", false]], "prec (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.PREC", false]], "prediction (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.prediction", false]], "prepare_fit_environment() (in module autoplex.fitting.common.utils)": [[159, "autoplex.fitting.common.utils.prepare_fit_environment", false]], "preprocess_data() (in module autoplex.data.common.jobs)": [[56, "autoplex.data.common.jobs.preprocess_data", false]], "process_rss() (in module autoplex.data.rss.utils)": [[116, "autoplex.data.rss.utils.process_rss", false]], "r_max (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.r_max", false]], "r_max (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.r_max", false]], "random_seed (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.random_seed", false]], "random_vary_angle() (in module autoplex.data.common.utils)": [[79, "autoplex.data.common.utils.random_vary_angle", false]], "randomizedstructure (class in autoplex.data.rss.jobs)": [[104, "autoplex.data.rss.jobs.RandomizedStructure", false]], "randomstructuresdatagenerator (class in autoplex.data.phonons.flows)": [[91, "autoplex.data.phonons.flows.RandomStructuresDataGenerator", false]], "rbf_type (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.rbf_type", false]], "reduce_supercell_size() (in module autoplex.data.phonons.utils)": [[98, "autoplex.data.phonons.utils.reduce_supercell_size", false]], "reduce_supercell_size_job() (in module autoplex.data.phonons.jobs)": [[94, "autoplex.data.phonons.jobs.reduce_supercell_size_job", false]], "ref_energy_name (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.ref_energy_name", false]], "ref_force_name (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.ref_force_name", false]], "ref_virial_name (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.ref_virial_name", false]], "reg_minmax (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.reg_minmax", false]], "regularization (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.regularization", false]], "remove_traj_files (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.remove_traj_files", false]], "report_init_validation (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.report_init_validation", false]], "restart_latest (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.restart_latest", false]], "results_dir (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.results_dir", false]], "resume_from_previous_state (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.resume_from_previous_state", false]], "retain_existing_sigma (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.retain_existing_sigma", false]], "rms_dict() (in module autoplex.data.common.utils)": [[80, "autoplex.data.common.utils.rms_dict", false]], "rmse_qdep_plot() (in module autoplex.benchmark.phonons.utils)": [[40, "autoplex.benchmark.phonons.utils.rmse_qdep_plot", false]], "root (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.root", false]], "rss_group (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.rss_group", false]], "rss_selection_method (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.rss_selection_method", false]], "rssmaker (class in autoplex.auto.rss.flows)": [[26, "autoplex.auto.rss.flows.RssMaker", false]], "run_ace() (in module autoplex.fitting.common.utils)": [[160, "autoplex.fitting.common.utils.run_ace", false]], "run_ase_gap() (in module autoplex.fitting.common.utils)": [[161, "autoplex.fitting.common.utils.run_ase_gap", false]], "run_castep() (in module autoplex.misc.castep.run)": [[182, "autoplex.misc.castep.run.run_castep", false]], "run_gap() (in module autoplex.fitting.common.utils)": [[162, "autoplex.fitting.common.utils.run_gap", false]], "run_mace() (in module autoplex.fitting.common.utils)": [[163, "autoplex.fitting.common.utils.run_mace", false]], "run_name (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.run_name", false]], "run_nep() (in module autoplex.fitting.common.utils)": [[164, "autoplex.fitting.common.utils.run_nep", false]], "run_nequip() (in module autoplex.fitting.common.utils)": [[165, "autoplex.fitting.common.utils.run_nequip", false]], "run_supercells() (in module autoplex.auto.phonons.jobs)": [[23, "autoplex.auto.phonons.jobs.run_supercells", false]], "safe_strip_hostname() (in module autoplex.data.common.jobs)": [[57, "autoplex.data.common.jobs.safe_strip_hostname", false]], "sample_data() (in module autoplex.data.common.jobs)": [[58, "autoplex.data.common.jobs.sample_data", false]], "save_all_checkpoints (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.save_all_checkpoints", false]], "save_checkpoint_freq (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.save_checkpoint_freq", false]], "save_cpu (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.save_cpu", false]], "save_ema_checkpoint_freq (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.save_ema_checkpoint_freq", false]], "scalar_exp_pressure (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.scalar_exp_pressure", false]], "scalar_pressure_exponential_width (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.scalar_pressure_exponential_width", false]], "scalar_pressure_high (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.scalar_pressure_high", false]], "scalar_pressure_low (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.scalar_pressure_low", false]], "scalar_pressure_method (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.scalar_pressure_method", false]], "scale_cell() (in module autoplex.data.common.utils)": [[81, "autoplex.data.common.utils.scale_cell", false]], "scaling (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.scaling", false]], "scheduler (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.scheduler", false]], "scheme (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.scheme", false]], "seed (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.seed", false]], "seed (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.seed", false]], "set_custom_sigma() (in module autoplex.fitting.common.regularization)": [[136, "autoplex.fitting.common.regularization.set_custom_sigma", false]], "settings (in module autoplex.settings)": [[218, "autoplex.settings.SETTINGS", false]], "shuffle (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.shuffle", false]], "sigma (autoplex.settings.customincar attribute)": [[205, "autoplex.settings.CustomIncar.SIGMA", false]], "slack (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.SLACK", false]], "soap (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.soap", false]], "soap (autoplex.settings.gapsettings attribute)": [[207, "autoplex.settings.GAPSettings.soap", false]], "soap_paras (autoplex.settings.bcurparams attribute)": [[203, "autoplex.settings.BcurParams.soap_paras", false]], "solver (autoplex.settings.jacesettings attribute)": [[208, "autoplex.settings.JACESettings.solver", false]], "sparse_jitter (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.sparse_jitter", false]], "sparse_method (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.sparse_method", false]], "sparse_method (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.sparse_method", false]], "sparse_method (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.sparse_method", false]], "species (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.species", false]], "split_structure_into_groups() (in module autoplex.data.rss.utils)": [[117, "autoplex.data.rss.utils.split_structure_into_groups", false]], "start_swa (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.start_swa", false]], "static_run_and_convert() (autoplex.data.common.flows.generatetrainingdatafortesting method)": [[46, "autoplex.data.common.flows.GenerateTrainingDataForTesting.static_run_and_convert", false]], "std_rattle() (in module autoplex.data.common.utils)": [[82, "autoplex.data.common.utils.std_rattle", false]], "stop_criterion (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.stop_criterion", false]], "stratified_dataset_split() (in module autoplex.data.common.utils)": [[83, "autoplex.data.common.utils.stratified_dataset_split", false]], "stress (autoplex.misc.castep.schema.outputdoc attribute)": [[185, "autoplex.misc.castep.schema.OutputDoc.stress", false]], "stress_tol (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.stress_tol", false]], "stress_weight (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.stress_weight", false]], "stress_weight (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.stress_weight", false]], "structure (autoplex.misc.castep.schema.taskdoc attribute)": [[186, "autoplex.misc.castep.schema.TaskDoc.structure", false]], "swa (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.swa", false]], "symmops (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.SYMMOPS", false]], "sync_dist (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.sync_dist", false]], "system (autoplex.settings.buildcelloptions attribute)": [[204, "autoplex.settings.BuildcellOptions.SYSTEM", false]], "tag (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.tag", false]], "task_label (autoplex.misc.castep.schema.taskdoc attribute)": [[186, "autoplex.misc.castep.schema.TaskDoc.task_label", false]], "test_error (autoplex.settings.resumefrompreviousstate attribute)": [[216, "autoplex.settings.ResumeFromPreviousState.test_error", false]], "test_ratio (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.test_ratio", false]], "theta_uniform (autoplex.settings.threebsettings attribute)": [[221, "autoplex.settings.ThreebSettings.theta_uniform", false]], "theta_uniform (autoplex.settings.twobsettings attribute)": [[222, "autoplex.settings.TwobSettings.theta_uniform", false]], "three_body (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.three_body", false]], "threeb (autoplex.settings.gapsettings attribute)": [[207, "autoplex.settings.GAPSettings.threeb", false]], "threebody_cutoff (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.threebody_cutoff", false]], "tightdftstaticmaker (class in autoplex.data.phonons.flows)": [[92, "autoplex.data.phonons.flows.TightDFTStaticMaker", false]], "to_ase_trajectory() (in module autoplex.data.common.utils)": [[84, "autoplex.data.common.utils.to_ase_trajectory", false]], "todict() (autoplex.data.rss.utils.hookeanrepulsion method)": [[111, "autoplex.data.rss.utils.HookeanRepulsion.todict", false]], "total_energy (autoplex.settings.losscoeff attribute)": [[209, "autoplex.settings.LossCoeff.total_energy", false]], "totaldegree (autoplex.settings.jacesettings attribute)": [[208, "autoplex.settings.JACESettings.totaldegree", false]], "train_from_scratch (autoplex.settings.rssconfig attribute)": [[217, "autoplex.settings.RssConfig.train_from_scratch", false]], "two_body (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.two_body", false]], "twob (autoplex.settings.gapsettings attribute)": [[207, "autoplex.settings.GAPSettings.twob", false]], "type (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.type", false]], "type_checking (in module autoplex.data.common.jobs)": [[48, "autoplex.data.common.jobs.TYPE_CHECKING", false]], "type_checking (in module autoplex.misc.castep.jobs)": [[179, "autoplex.misc.castep.jobs.TYPE_CHECKING", false]], "type_checking (in module autoplex.misc.utils.mock_castep)": [[194, "autoplex.misc.utils.mock_castep.TYPE_CHECKING", false]], "type_weight (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.type_weight", false]], "units (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.units", false]], "update_parameters() (autoplex.settings.autoplexbasemodel method)": [[201, "autoplex.settings.AutoplexBaseModel.update_parameters", false]], "update_phonon_displacement_maker() (in module autoplex.data.phonons.utils)": [[99, "autoplex.data.phonons.utils.update_phonon_displacement_maker", false]], "use_ema (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.use_ema", false]], "use_foundation_model_element_refs (autoplex.settings.m3gnetsettings attribute)": [[210, "autoplex.settings.M3GNETSettings.use_foundation_model_element_refs", false]], "use_sc (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.use_sc", false]], "valid_batch_size (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.valid_batch_size", false]], "validation_batch_size (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.validation_batch_size", false]], "validation_dataset (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.validation_dataset", false]], "validation_dataset_file_name (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.validation_dataset_file_name", false]], "validation_dataset_key_mapping (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.validation_dataset_key_mapping", false]], "vaspoutput_2_extended_xyz() (in module autoplex.fitting.common.utils)": [[166, "autoplex.fitting.common.utils.vaspoutput_2_extended_xyz", false]], "verbose (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.verbose", false]], "version (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.version", false]], "virial_parameter_name (autoplex.settings.gapgeneralsettings attribute)": [[206, "autoplex.settings.GAPGeneralSettings.virial_parameter_name", false]], "virials_weight (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.virials_weight", false]], "wandb (autoplex.settings.macesettings attribute)": [[211, "autoplex.settings.MACESettings.wandb", false]], "wandb (autoplex.settings.nequipsettings attribute)": [[214, "autoplex.settings.NEQUIPSettings.wandb", false]], "write_after_distillation_data_split() (in module autoplex.fitting.common.utils)": [[167, "autoplex.fitting.common.utils.write_after_distillation_data_split", false]], "write_benchmark_metrics() (in module autoplex.benchmark.phonons.jobs)": [[35, "autoplex.benchmark.phonons.jobs.write_benchmark_metrics", false]], "zbl (autoplex.settings.nepsettings attribute)": [[213, "autoplex.settings.NEPSettings.zbl", false]], "zeta (autoplex.settings.soapparas attribute)": [[219, "autoplex.settings.SoapParas.zeta", false]], "zeta (autoplex.settings.soapsettings attribute)": [[220, "autoplex.settings.SoapSettings.zeta", false]], "zpath() (in module autoplex.misc.utils.mock_castep)": [[199, "autoplex.misc.utils.mock_castep.zpath", false]]}, "objects": {"autoplex": [[8, 0, 0, "-", "auto"], [30, 0, 0, "-", "benchmark"], [42, 0, 0, "-", "data"], [118, 0, 0, "-", "fitting"], [170, 0, 0, "-", "misc"], [200, 0, 0, "-", "settings"]], "autoplex.auto": [[9, 0, 0, "-", "phonons"], [24, 0, 0, "-", "rss"]], "autoplex.auto.phonons": [[10, 0, 0, "-", "flows"], [15, 0, 0, "-", "jobs"]], "autoplex.auto.phonons.flows": [[11, 1, 1, "", "CompleteDFTvsMLBenchmarkWorkflow"], [12, 1, 1, "", "CompleteDFTvsMLBenchmarkWorkflowMPSettings"], [13, 1, 1, "", "DFTSupercellSettingsMaker"], [14, 1, 1, "", "IterativeCompleteDFTvsMLBenchmarkWorkflow"]], "autoplex.auto.phonons.flows.CompleteDFTvsMLBenchmarkWorkflow": [[11, 2, 1, "", "add_dft_phonons"], [11, 2, 1, "", "add_dft_rattled"], [11, 2, 1, "", "make"]], "autoplex.auto.phonons.flows.DFTSupercellSettingsMaker": [[13, 2, 1, "", "make"]], "autoplex.auto.phonons.flows.IterativeCompleteDFTvsMLBenchmarkWorkflow": [[14, 2, 1, "", "make"]], "autoplex.auto.phonons.jobs": [[16, 3, 1, "", "complete_benchmark"], [17, 3, 1, "", "dft_phonopy_gen_data"], [18, 3, 1, "", "dft_random_gen_data"], [19, 3, 1, "", "do_iterative_rattled_structures"], [20, 3, 1, "", "generate_supercells"], [21, 3, 1, "", "get_iso_atom"], [22, 3, 1, "", "get_phonon_output"], [23, 3, 1, "", "run_supercells"]], "autoplex.auto.rss": [[25, 0, 0, "-", "flows"], [27, 0, 0, "-", "jobs"]], "autoplex.auto.rss.flows": [[26, 1, 1, "", "RssMaker"]], "autoplex.auto.rss.flows.RssMaker": [[26, 2, 1, "", "make"]], "autoplex.auto.rss.jobs": [[28, 3, 1, "", "do_rss_iterations"], [29, 3, 1, "", "initial_rss"]], "autoplex.benchmark": [[31, 0, 0, "-", "phonons"], [41, 0, 0, "-", "rss"]], "autoplex.benchmark.phonons": [[32, 0, 0, "-", "flows"], [34, 0, 0, "-", "jobs"], [36, 0, 0, "-", "utils"]], "autoplex.benchmark.phonons.flows": [[33, 1, 1, "", "PhononBenchmarkMaker"]], "autoplex.benchmark.phonons.flows.PhononBenchmarkMaker": [[33, 2, 1, "", "make"]], "autoplex.benchmark.phonons.jobs": [[35, 3, 1, "", "write_benchmark_metrics"]], "autoplex.benchmark.phonons.utils": [[37, 3, 1, "", "compare_plot"], [38, 3, 1, "", "compute_bandstructure_benchmark_metrics"], [39, 3, 1, "", "get_rmse"], [40, 3, 1, "", "rmse_qdep_plot"]], "autoplex.data": [[43, 0, 0, "-", "common"], [85, 0, 0, "-", "phonons"], [100, 0, 0, "-", "rss"]], "autoplex.data.common": [[44, 0, 0, "-", "flows"], [47, 0, 0, "-", "jobs"], [59, 0, 0, "-", "utils"]], "autoplex.data.common.flows": [[45, 1, 1, "", "DFTStaticLabelling"], [46, 1, 1, "", "GenerateTrainingDataForTesting"]], "autoplex.data.common.flows.DFTStaticLabelling": [[45, 2, 1, "", "make"]], "autoplex.data.common.flows.GenerateTrainingDataForTesting": [[46, 2, 1, "", "make"], [46, 2, 1, "", "static_run_and_convert"]], "autoplex.data.common.jobs": [[48, 4, 1, "", "TYPE_CHECKING"], [49, 3, 1, "", "check_convergence_castep"], [50, 3, 1, "", "check_convergence_vasp"], [51, 3, 1, "", "collect_dft_data"], [52, 3, 1, "", "convert_to_extxyz"], [53, 3, 1, "", "generate_randomized_structures"], [54, 3, 1, "", "get_supercell_job"], [55, 3, 1, "", "plot_force_distribution"], [56, 3, 1, "", "preprocess_data"], [57, 3, 1, "", "safe_strip_hostname"], [58, 3, 1, "", "sample_data"]], "autoplex.data.common.utils": [[60, 1, 1, "", "ElementCollection"], [61, 4, 1, "", "GPa"], [62, 3, 1, "", "boltzhist_cur_dual_iter"], [63, 3, 1, "", "boltzhist_cur_one_shot"], [64, 3, 1, "", "check_distances"], [65, 3, 1, "", "convexhull_cur"], [66, 3, 1, "", "create_soap_descriptor"], [67, 3, 1, "", "cur_select"], [68, 3, 1, "", "data_distillation"], [69, 3, 1, "", "energy_plot"], [70, 3, 1, "", "filter_outlier_energy"], [71, 3, 1, "", "filter_outlier_forces"], [72, 3, 1, "", "flatten"], [73, 3, 1, "", "flatten_list"], [74, 3, 1, "", "force_plot"], [75, 3, 1, "", "handle_rss_trajectory"], [76, 3, 1, "", "mc_rattle"], [77, 3, 1, "", "parallel_calc_descriptor_vec"], [78, 3, 1, "", "plot_energy_forces"], [79, 3, 1, "", "random_vary_angle"], [80, 3, 1, "", "rms_dict"], [81, 3, 1, "", "scale_cell"], [82, 3, 1, "", "std_rattle"], [83, 3, 1, "", "stratified_dataset_split"], [84, 3, 1, "", "to_ase_trajectory"]], "autoplex.data.common.utils.ElementCollection": [[60, 2, 1, "", "find_element_pairs"], [60, 2, 1, "", "get_number_of_species"], [60, 2, 1, "", "get_species"], [60, 2, 1, "", "get_species_Z"]], "autoplex.data.phonons": [[86, 0, 0, "-", "flows"], [93, 0, 0, "-", "jobs"], [95, 0, 0, "-", "utils"]], "autoplex.data.phonons.flows": [[87, 1, 1, "", "DFTPhononMaker"], [88, 1, 1, "", "IsoAtomMaker"], [89, 1, 1, "", "IsoAtomStaticMaker"], [90, 1, 1, "", "MLPhononMaker"], [91, 1, 1, "", "RandomStructuresDataGenerator"], [92, 1, 1, "", "TightDFTStaticMaker"]], "autoplex.data.phonons.flows.IsoAtomMaker": [[88, 2, 1, "", "make"]], "autoplex.data.phonons.flows.MLPhononMaker": [[90, 2, 1, "", "make_from_ml_model"]], "autoplex.data.phonons.flows.RandomStructuresDataGenerator": [[91, 2, 1, "", "make"]], "autoplex.data.phonons.jobs": [[94, 3, 1, "", "reduce_supercell_size_job"]], "autoplex.data.phonons.utils": [[96, 3, 1, "", "check_supercells"], [97, 3, 1, "", "ml_phonon_maker_preparation"], [98, 3, 1, "", "reduce_supercell_size"], [99, 3, 1, "", "update_phonon_displacement_maker"]], "autoplex.data.rss": [[101, 0, 0, "-", "flows"], [103, 0, 0, "-", "jobs"], [109, 0, 0, "-", "utils"]], "autoplex.data.rss.flows": [[102, 1, 1, "", "BuildMultiRandomizedStructure"]], "autoplex.data.rss.flows.BuildMultiRandomizedStructure": [[102, 2, 1, "", "make"]], "autoplex.data.rss.jobs": [[104, 1, 1, "", "RandomizedStructure"], [105, 4, 1, "", "atomic_numbers"], [106, 4, 1, "", "covalent_radii"], [107, 3, 1, "", "do_rss_multi_node"], [108, 3, 1, "", "do_rss_single_node"]], "autoplex.data.rss.jobs.RandomizedStructure": [[104, 2, 1, "", "make"]], "autoplex.data.rss.utils": [[110, 4, 1, "", "GPa"], [111, 1, 1, "", "HookeanRepulsion"], [112, 4, 1, "", "atomic_numbers"], [113, 4, 1, "", "chemical_symbols"], [114, 3, 1, "", "extract_pairstyle"], [115, 3, 1, "", "minimize_structures"], [116, 3, 1, "", "process_rss"], [117, 3, 1, "", "split_structure_into_groups"]], "autoplex.data.rss.utils.HookeanRepulsion": [[111, 2, 1, "", "adjust_forces"], [111, 2, 1, "", "adjust_momenta"], [111, 2, 1, "", "adjust_positions"], [111, 2, 1, "", "adjust_potential_energy"], [111, 2, 1, "", "get_indices"], [111, 2, 1, "", "get_removed_dof"], [111, 2, 1, "", "index_shuffle"], [111, 2, 1, "", "todict"]], "autoplex.fitting": [[119, 0, 0, "-", "common"], [168, 0, 0, "-", "phonons"], [169, 0, 0, "-", "rss"]], "autoplex.fitting.common": [[120, 0, 0, "-", "flows"], [123, 0, 0, "-", "jobs"], [125, 0, 0, "-", "regularization"], [137, 0, 0, "-", "utils"]], "autoplex.fitting.common.flows": [[121, 1, 1, "", "DataPreprocessing"], [122, 1, 1, "", "MLIPFitMaker"]], "autoplex.fitting.common.flows.DataPreprocessing": [[121, 2, 1, "", "make"]], "autoplex.fitting.common.flows.MLIPFitMaker": [[122, 2, 1, "", "make"]], "autoplex.fitting.common.jobs": [[124, 3, 1, "", "machine_learning_fit"]], "autoplex.fitting.common.regularization": [[126, 3, 1, "", "calculate_hull_nd"], [127, 3, 1, "", "get_convex_hull"], [128, 3, 1, "", "get_e_distance_to_hull"], [129, 3, 1, "", "get_e_distance_to_hull_nd"], [130, 3, 1, "", "get_intersect"], [131, 3, 1, "", "get_mole_frac"], [132, 3, 1, "", "label_stoichiometry_volume"], [133, 3, 1, "", "piecewise_linear"], [134, 3, 1, "", "point_in_simplex_nd"], [135, 3, 1, "", "point_in_triangle_2D"], [136, 3, 1, "", "set_custom_sigma"]], "autoplex.fitting.common.utils": [[138, 1, 1, "", "CustomPotential"], [139, 3, 1, "", "calculate_delta_2b"], [140, 3, 1, "", "check_convergence"], [141, 4, 1, "", "chemical_symbols"], [142, 3, 1, "", "compute_num_of_descriptor"], [143, 3, 1, "", "convert_xyz_to_structure"], [144, 3, 1, "", "energy_remain"], [145, 3, 1, "", "extract_gap_label"], [146, 3, 1, "", "flatten"], [147, 3, 1, "", "gap_fitting"], [148, 3, 1, "", "gap_hyperparameter_constructor"], [149, 3, 1, "", "gcm3_to_Vm"], [150, 3, 1, "", "get_atomic_numbers"], [151, 3, 1, "", "get_list_of_vasp_calc_dirs"], [152, 3, 1, "", "jace_fitting"], [153, 3, 1, "", "m3gnet_fitting"], [154, 3, 1, "", "mace_fitting"], [155, 3, 1, "", "mace_virial_format_conversion"], [156, 3, 1, "", "nep_fitting"], [157, 3, 1, "", "nequip_fitting"], [158, 3, 1, "", "plot_convex_hull"], [159, 3, 1, "", "prepare_fit_environment"], [160, 3, 1, "", "run_ace"], [161, 3, 1, "", "run_ase_gap"], [162, 3, 1, "", "run_gap"], [163, 3, 1, "", "run_mace"], [164, 3, 1, "", "run_nep"], [165, 3, 1, "", "run_nequip"], [166, 3, 1, "", "vaspoutput_2_extended_xyz"], [167, 3, 1, "", "write_after_distillation_data_split"]], "autoplex.fitting.common.utils.CustomPotential": [[138, 2, 1, "", "calculate"]], "autoplex.misc": [[171, 0, 0, "-", "castep"], [192, 0, 0, "-", "utils"]], "autoplex.misc.castep": [[172, 0, 0, "-", "flows"], [173, 0, 0, "-", "jobs"], [181, 0, 0, "-", "run"], [183, 0, 0, "-", "schema"], [187, 0, 0, "-", "utils"]], "autoplex.misc.castep.jobs": [[174, 1, 1, "", "BaseCastepMaker"], [175, 4, 1, "", "CASTEP_INPUT_FILES"], [176, 4, 1, "", "CASTEP_OUTPUT_FILES"], [177, 1, 1, "", "CastepStaticMaker"], [178, 4, 1, "", "GPa"], [179, 4, 1, "", "TYPE_CHECKING"], [180, 3, 1, "", "castep_job"]], "autoplex.misc.castep.jobs.BaseCastepMaker": [[174, 2, 1, "", "make"]], "autoplex.misc.castep.run": [[182, 3, 1, "", "run_castep"]], "autoplex.misc.castep.schema": [[184, 5, 1, "", "InputDoc"], [185, 5, 1, "", "OutputDoc"], [186, 5, 1, "", "TaskDoc"]], "autoplex.misc.castep.schema.InputDoc": [[184, 6, 1, "", "input_set"]], "autoplex.misc.castep.schema.OutputDoc": [[185, 6, 1, "", "energy"], [185, 6, 1, "", "energy_per_atom"], [185, 6, 1, "", "forces"], [185, 6, 1, "", "stress"]], "autoplex.misc.castep.schema.TaskDoc": [[186, 6, 1, "", "dir_name"], [186, 6, 1, "", "input"], [186, 6, 1, "", "output"], [186, 6, 1, "", "structure"], [186, 6, 1, "", "task_label"]], "autoplex.misc.castep.utils": [[188, 4, 1, "", "CASTEP_INPUT_FILES"], [189, 4, 1, "", "CASTEP_OUTPUT_FILES"], [190, 1, 1, "", "CastepInputGenerator"], [191, 1, 1, "", "CastepStaticSetGenerator"]], "autoplex.misc.castep.utils.CastepInputGenerator": [[190, 7, 1, "", "cell_updates"], [190, 2, 1, "", "get_input_set"], [190, 7, 1, "", "param_updates"]], "autoplex.misc.castep.utils.CastepStaticSetGenerator": [[191, 7, 1, "", "cell_updates"], [191, 7, 1, "", "param_updates"]], "autoplex.misc.utils": [[193, 0, 0, "-", "mock_castep"]], "autoplex.misc.utils.mock_castep": [[194, 4, 1, "", "TYPE_CHECKING"], [195, 3, 1, "", "clear_castep_inputs"], [196, 3, 1, "", "copy_castep_outputs"], [197, 3, 1, "", "fake_run_castep"], [198, 3, 1, "", "monkeypatch_castep"], [199, 3, 1, "", "zpath"]], "autoplex.settings": [[201, 5, 1, "", "AutoplexBaseModel"], [202, 8, 1, "", "AutoplexSettings"], [203, 5, 1, "", "BcurParams"], [204, 5, 1, "", "BuildcellOptions"], [205, 5, 1, "", "CustomIncar"], [206, 5, 1, "", "GAPGeneralSettings"], [207, 5, 1, "", "GAPSettings"], [208, 5, 1, "", "JACESettings"], [209, 5, 1, "", "LossCoeff"], [210, 5, 1, "", "M3GNETSettings"], [211, 5, 1, "", "MACESettings"], [212, 5, 1, "", "MLIPHypers"], [213, 5, 1, "", "NEPSettings"], [214, 5, 1, "", "NEQUIPSettings"], [215, 5, 1, "", "Nonlinearity"], [216, 5, 1, "", "ResumeFromPreviousState"], [217, 5, 1, "", "RssConfig"], [218, 4, 1, "", "SETTINGS"], [219, 5, 1, "", "SoapParas"], [220, 5, 1, "", "SoapSettings"], [221, 5, 1, "", "ThreebSettings"], [222, 5, 1, "", "TwobSettings"]], "autoplex.settings.AutoplexBaseModel": [[201, 2, 1, "", "as_dict"], [201, 2, 1, "", "from_dict"], [201, 2, 1, "", "from_file"], [201, 2, 1, "", "update_parameters"]], "autoplex.settings.AutoplexSettings": [[202, 6, 1, "", "CASTEP_CMD"], [202, 6, 1, "", "CASTEP_KEYWORDS"], [202, 6, 1, "", "CONFIG_FILE"]], "autoplex.settings.BcurParams": [[203, 6, 1, "", "bolt_max_num"], [203, 6, 1, "", "frac_of_bcur"], [203, 6, 1, "", "soap_paras"]], "autoplex.settings.BuildcellOptions": [[204, 6, 1, "", "ABFIX"], [204, 6, 1, "", "MINSEP"], [204, 6, 1, "", "NFORM"], [204, 6, 1, "", "OCTET"], [204, 6, 1, "", "OVERLAP"], [204, 6, 1, "", "SLACK"], [204, 6, 1, "", "SYMMOPS"], [204, 6, 1, "", "SYSTEM"]], "autoplex.settings.CustomIncar": [[205, 6, 1, "", "ADDGRID"], [205, 6, 1, "", "ALGO"], [205, 6, 1, "", "AMIX"], [205, 6, 1, "", "EDIFF"], [205, 6, 1, "", "ENCUT"], [205, 6, 1, "", "GGA"], [205, 6, 1, "", "ISMEAR"], [205, 6, 1, "", "ISYM"], [205, 6, 1, "", "KPAR"], [205, 6, 1, "", "KSPACING"], [205, 6, 1, "", "LCHARG"], [205, 6, 1, "", "LPLANE"], [205, 6, 1, "", "LREAL"], [205, 6, 1, "", "LSCALAPACK"], [205, 6, 1, "", "LWAVE"], [205, 6, 1, "", "NCORE"], [205, 6, 1, "", "NELM"], [205, 6, 1, "", "PREC"], [205, 6, 1, "", "SIGMA"]], "autoplex.settings.GAPGeneralSettings": [[206, 6, 1, "", "at_file"], [206, 6, 1, "", "default_sigma"], [206, 6, 1, "", "do_copy_at_file"], [206, 6, 1, "", "e0_offset"], [206, 6, 1, "", "energy_parameter_name"], [206, 6, 1, "", "force_parameter_name"], [206, 6, 1, "", "gp_file"], [206, 6, 1, "", "openmp_chunk_size"], [206, 6, 1, "", "soap"], [206, 6, 1, "", "sparse_jitter"], [206, 6, 1, "", "three_body"], [206, 6, 1, "", "two_body"], [206, 6, 1, "", "virial_parameter_name"]], "autoplex.settings.GAPSettings": [[207, 6, 1, "", "general"], [207, 6, 1, "", "soap"], [207, 6, 1, "", "threeb"], [207, 6, 1, "", "twob"]], "autoplex.settings.JACESettings": [[208, 6, 1, "", "cutoff"], [208, 6, 1, "", "order"], [208, 6, 1, "", "solver"], [208, 6, 1, "", "totaldegree"]], "autoplex.settings.LossCoeff": [[209, 6, 1, "", "forces"], [209, 6, 1, "", "total_energy"]], "autoplex.settings.M3GNETSettings": [[210, 6, 1, "", "allow_missing_labels"], [210, 6, 1, "", "batch_size"], [210, 6, 1, "", "cutoff"], [210, 6, 1, "", "data_mean"], [210, 6, 1, "", "data_std"], [210, 6, 1, "", "decay_alpha"], [210, 6, 1, "", "decay_steps"], [210, 6, 1, "", "dim_edge_embedding"], [210, 6, 1, "", "dim_node_embedding"], [210, 6, 1, "", "dim_state_embedding"], [210, 6, 1, "", "element_refs"], [210, 6, 1, "", "energy_weight"], [210, 6, 1, "", "exp_name"], [210, 6, 1, "", "force_weight"], [210, 6, 1, "", "foundation_model"], [210, 6, 1, "", "include_line_graph"], [210, 6, 1, "", "include_stresses"], [210, 6, 1, "", "is_intensive"], [210, 6, 1, "", "loss"], [210, 6, 1, "", "loss_params"], [210, 6, 1, "", "lr"], [210, 6, 1, "", "magmom_target"], [210, 6, 1, "", "magmom_weight"], [210, 6, 1, "", "max_epochs"], [210, 6, 1, "", "max_l"], [210, 6, 1, "", "max_n"], [210, 6, 1, "", "nblocks"], [210, 6, 1, "", "optimizer"], [210, 6, 1, "", "rbf_type"], [210, 6, 1, "", "results_dir"], [210, 6, 1, "", "scheduler"], [210, 6, 1, "", "stress_weight"], [210, 6, 1, "", "sync_dist"], [210, 6, 1, "", "threebody_cutoff"], [210, 6, 1, "", "units"], [210, 6, 1, "", "use_foundation_model_element_refs"]], "autoplex.settings.MACESettings": [[211, 6, 1, "", "E0s"], [211, 6, 1, "", "amsgrad"], [211, 6, 1, "", "batch_size"], [211, 6, 1, "", "compute_avg_num_neighbors"], [211, 6, 1, "", "compute_forces"], [211, 6, 1, "", "compute_statistics"], [211, 6, 1, "", "compute_stress"], [211, 6, 1, "", "config_type_weights"], [211, 6, 1, "", "correlation"], [211, 6, 1, "", "default_dtype"], [211, 6, 1, "", "device"], [211, 6, 1, "", "distributed"], [211, 6, 1, "", "ema"], [211, 6, 1, "", "ema_decay"], [211, 6, 1, "", "energy_weight"], [211, 6, 1, "", "forces_weight"], [211, 6, 1, "", "foundation_filter_elements"], [211, 6, 1, "", "foundation_model"], [211, 6, 1, "", "foundation_model_readout"], [211, 6, 1, "", "hidden_irreps"], [211, 6, 1, "", "keep_checkpoint"], [211, 6, 1, "", "keep_isolated_atoms"], [211, 6, 1, "", "loss"], [211, 6, 1, "", "lr"], [211, 6, 1, "", "max_num_epochs"], [211, 6, 1, "", "model"], [211, 6, 1, "", "multiheads_finetuning"], [211, 6, 1, "", "name"], [211, 6, 1, "", "pair_repulsion"], [211, 6, 1, "", "patience"], [211, 6, 1, "", "r_max"], [211, 6, 1, "", "restart_latest"], [211, 6, 1, "", "save_all_checkpoints"], [211, 6, 1, "", "save_cpu"], [211, 6, 1, "", "scaling"], [211, 6, 1, "", "seed"], [211, 6, 1, "", "start_swa"], [211, 6, 1, "", "stress_weight"], [211, 6, 1, "", "swa"], [211, 6, 1, "", "valid_batch_size"], [211, 6, 1, "", "virials_weight"], [211, 6, 1, "", "wandb"]], "autoplex.settings.MLIPHypers": [[212, 6, 1, "", "GAP"], [212, 6, 1, "", "J_ACE"], [212, 6, 1, "", "M3GNET"], [212, 6, 1, "", "MACE"], [212, 6, 1, "", "NEP"], [212, 6, 1, "", "NEQUIP"]], "autoplex.settings.NEPSettings": [[213, 6, 1, "", "basis_size"], [213, 6, 1, "", "batch"], [213, 6, 1, "", "cutoff"], [213, 6, 1, "", "force_delta"], [213, 6, 1, "", "generation"], [213, 6, 1, "", "l_max"], [213, 6, 1, "", "lambda_1"], [213, 6, 1, "", "lambda_e"], [213, 6, 1, "", "lambda_f"], [213, 6, 1, "", "lambda_v"], [213, 6, 1, "", "model_type"], [213, 6, 1, "", "n_max"], [213, 6, 1, "", "neuron"], [213, 6, 1, "", "population"], [213, 6, 1, "", "prediction"], [213, 6, 1, "", "type"], [213, 6, 1, "", "type_weight"], [213, 6, 1, "", "version"], [213, 6, 1, "", "zbl"]], "autoplex.settings.NEQUIPSettings": [[214, 6, 1, "", "allow_tf32"], [214, 6, 1, "", "append"], [214, 6, 1, "", "ase_args"], [214, 6, 1, "", "avg_num_neighbors"], [214, 6, 1, "", "batch_size"], [214, 6, 1, "", "besselbasis_trainable"], [214, 6, 1, "", "chemical_symbols"], [214, 6, 1, "", "dataset"], [214, 6, 1, "", "dataset_file_name"], [214, 6, 1, "", "dataset_key_mapping"], [214, 6, 1, "", "dataset_seed"], [214, 6, 1, "", "default_dtype"], [214, 6, 1, "", "early_stopping_lower_bounds"], [214, 6, 1, "", "early_stopping_patiences"], [214, 6, 1, "", "ema_decay"], [214, 6, 1, "", "ema_use_num_updates"], [214, 6, 1, "", "invariant_layers"], [214, 6, 1, "", "invariant_neurons"], [214, 6, 1, "", "l_max"], [214, 6, 1, "", "learning_rate"], [214, 6, 1, "", "log_batch_freq"], [214, 6, 1, "", "log_epoch_freq"], [214, 6, 1, "", "loss_coeffs"], [214, 6, 1, "", "lr_scheduler_factor"], [214, 6, 1, "", "lr_scheduler_name"], [214, 6, 1, "", "lr_scheduler_patience"], [214, 6, 1, "", "max_epochs"], [214, 6, 1, "", "metrics_components"], [214, 6, 1, "", "metrics_key"], [214, 6, 1, "", "model_dtype"], [214, 6, 1, "", "n_train"], [214, 6, 1, "", "n_val"], [214, 6, 1, "", "nonlinearity_gates"], [214, 6, 1, "", "nonlinearity_scalars"], [214, 6, 1, "", "nonlinearity_type"], [214, 6, 1, "", "num_basis"], [214, 6, 1, "", "num_features"], [214, 6, 1, "", "num_layers"], [214, 6, 1, "", "optimizer_amsgrad"], [214, 6, 1, "", "optimizer_name"], [214, 6, 1, "", "parity"], [214, 6, 1, "", "per_species_rescale_scales"], [214, 6, 1, "", "per_species_rescale_scales_trainable"], [214, 6, 1, "", "per_species_rescale_shifts"], [214, 6, 1, "", "per_species_rescale_shifts_trainable"], [214, 6, 1, "", "polynomialcutoff_p"], [214, 6, 1, "", "r_max"], [214, 6, 1, "", "report_init_validation"], [214, 6, 1, "", "root"], [214, 6, 1, "", "run_name"], [214, 6, 1, "", "save_checkpoint_freq"], [214, 6, 1, "", "save_ema_checkpoint_freq"], [214, 6, 1, "", "seed"], [214, 6, 1, "", "shuffle"], [214, 6, 1, "", "use_ema"], [214, 6, 1, "", "use_sc"], [214, 6, 1, "", "validation_batch_size"], [214, 6, 1, "", "validation_dataset"], [214, 6, 1, "", "validation_dataset_file_name"], [214, 6, 1, "", "validation_dataset_key_mapping"], [214, 6, 1, "", "verbose"], [214, 6, 1, "", "wandb"]], "autoplex.settings.Nonlinearity": [[215, 6, 1, "", "e"], [215, 6, 1, "", "o"]], "autoplex.settings.ResumeFromPreviousState": [[216, 6, 1, "", "isolated_atom_energies"], [216, 6, 1, "", "mlip_path"], [216, 6, 1, "", "pre_database_dir"], [216, 6, 1, "", "test_error"]], "autoplex.settings.RssConfig": [[217, 6, 1, "", "auto_delta"], [217, 6, 1, "", "bcur_params"], [217, 6, 1, "", "buildcell_options"], [217, 6, 1, "", "cell_seed_paths"], [217, 6, 1, "", "config_types"], [217, 6, 1, "", "current_iter_index"], [217, 6, 1, "", "custom_incar"], [217, 6, 1, "", "custom_potcar"], [217, 6, 1, "", "device_for_fitting"], [217, 6, 1, "", "device_for_rss"], [217, 6, 1, "", "dft_ref_file"], [217, 6, 1, "", "dimer_box"], [217, 6, 1, "", "dimer_num"], [217, 6, 1, "", "dimer_range"], [217, 6, 1, "", "distillation"], [217, 6, 1, "", "e0_spin"], [217, 6, 1, "", "force_label"], [217, 6, 1, "", "force_max"], [217, 6, 1, "", "force_tol"], [217, 6, 1, "", "fragment_file"], [217, 6, 1, "", "fragment_numbers"], [217, 2, 1, "", "from_file"], [217, 6, 1, "", "generated_struct_numbers"], [217, 6, 1, "", "hookean_paras"], [217, 6, 1, "", "hookean_repul"], [217, 6, 1, "", "include_dimer"], [217, 6, 1, "", "include_isolated_atom"], [217, 6, 1, "", "initial_kt"], [217, 6, 1, "", "initial_selection_enabled"], [217, 6, 1, "", "isolatedatom_box"], [217, 6, 1, "", "keep_symmetry"], [217, 6, 1, "", "max_iteration_number"], [217, 6, 1, "", "max_steps"], [217, 6, 1, "", "mlip_hypers"], [217, 6, 1, "", "mlip_type"], [217, 6, 1, "", "num_groups"], [217, 6, 1, "", "num_of_initial_selected_structs"], [217, 6, 1, "", "num_of_rss_selected_structs"], [217, 6, 1, "", "num_processes_buildcell"], [217, 6, 1, "", "num_processes_fit"], [217, 6, 1, "", "num_processes_rss"], [217, 6, 1, "", "pre_database_dir"], [217, 6, 1, "", "random_seed"], [217, 6, 1, "", "ref_energy_name"], [217, 6, 1, "", "ref_force_name"], [217, 6, 1, "", "ref_virial_name"], [217, 6, 1, "", "reg_minmax"], [217, 6, 1, "", "regularization"], [217, 6, 1, "", "remove_traj_files"], [217, 6, 1, "", "resume_from_previous_state"], [217, 6, 1, "", "retain_existing_sigma"], [217, 6, 1, "", "rss_group"], [217, 6, 1, "", "rss_selection_method"], [217, 6, 1, "", "scalar_exp_pressure"], [217, 6, 1, "", "scalar_pressure_exponential_width"], [217, 6, 1, "", "scalar_pressure_high"], [217, 6, 1, "", "scalar_pressure_low"], [217, 6, 1, "", "scalar_pressure_method"], [217, 6, 1, "", "scheme"], [217, 6, 1, "", "stop_criterion"], [217, 6, 1, "", "stress_tol"], [217, 6, 1, "", "tag"], [217, 6, 1, "", "test_ratio"], [217, 6, 1, "", "train_from_scratch"]], "autoplex.settings.SoapParas": [[219, 6, 1, "", "atom_sigma"], [219, 6, 1, "", "average"], [219, 6, 1, "", "cutoff"], [219, 6, 1, "", "cutoff_transition_width"], [219, 6, 1, "", "l_max"], [219, 6, 1, "", "n_max"], [219, 6, 1, "", "species"], [219, 6, 1, "", "zeta"]], "autoplex.settings.SoapSettings": [[220, 6, 1, "", "add_species"], [220, 6, 1, "", "atom_sigma"], [220, 6, 1, "", "central_weight"], [220, 6, 1, "", "covariance_type"], [220, 6, 1, "", "cutoff"], [220, 6, 1, "", "cutoff_transition_width"], [220, 6, 1, "", "delta"], [220, 6, 1, "", "f0"], [220, 6, 1, "", "l_max"], [220, 6, 1, "", "n_max"], [220, 6, 1, "", "n_sparse"], [220, 6, 1, "", "sparse_method"], [220, 6, 1, "", "zeta"]], "autoplex.settings.ThreebSettings": [[221, 6, 1, "", "add_species"], [221, 6, 1, "", "compact_clusters"], [221, 6, 1, "", "covariance_type"], [221, 6, 1, "", "cutoff"], [221, 6, 1, "", "delta"], [221, 6, 1, "", "distance_Nb_order"], [221, 6, 1, "", "f0"], [221, 6, 1, "", "n_sparse"], [221, 6, 1, "", "sparse_method"], [221, 6, 1, "", "theta_uniform"]], "autoplex.settings.TwobSettings": [[222, 6, 1, "", "add_species"], [222, 6, 1, "", "compact_clusters"], [222, 6, 1, "", "covariance_type"], [222, 6, 1, "", "cutoff"], [222, 6, 1, "", "delta"], [222, 6, 1, "", "distance_Nb_order"], [222, 6, 1, "", "f0"], [222, 6, 1, "", "n_sparse"], [222, 6, 1, "", "sparse_method"], [222, 6, 1, "", "theta_uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "pydantic_model", "Python model"], "6": ["py", "pydantic_field", "Python field"], "7": ["py", "property", "Python property"], "8": ["py", "pydantic_settings", "Python settings"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:pydantic_model", "6": "py:pydantic_field", "7": "py:property", "8": "py:pydantic_settings"}, "terms": {"": [3, 11, 12, 26, 28, 29, 74, 77, 87, 88, 90, 102, 104, 105, 106, 107, 112, 113, 124, 141, 157, 183, 193, 202, 218, 228, 229, 232, 238, 240, 242], "0": [11, 12, 14, 16, 18, 19, 22, 26, 28, 29, 38, 46, 53, 55, 58, 61, 62, 63, 65, 67, 70, 71, 76, 79, 81, 82, 87, 90, 91, 96, 105, 106, 107, 108, 110, 111, 112, 115, 116, 121, 122, 136, 156, 166, 167, 178, 203, 205, 206, 208, 210, 211, 213, 214, 217, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 240, 242], "00": [228, 229, 230, 232, 234, 240, 242], "000": [26, 106, 217], "00001": 231, "0001": [11, 12, 87, 206, 232, 237, 238], "0005": 70, "001": [90, 136, 210, 211, 225, 232, 237, 238], "0023569": 233, "003": 76, "0049634": 233, "005": [214, 232, 233], "006241509125883258": [61, 110, 178], "0074c8d0": 229, "01": [11, 12, 14, 16, 18, 19, 22, 26, 28, 38, 46, 53, 81, 82, 87, 90, 91, 106, 107, 108, 115, 116, 121, 122, 166, 217, 228, 229, 231, 232, 233, 237, 238, 242], "010": [87, 90], "0106617": 156, "01b903c416ca": 229, "02": [11, 12, 18, 53, 81, 91, 106, 228, 242], "021f506da5c4": 229, "024": 156, "024803": [122, 124], "025": 227, "025a49ba": 229, "03": [106, 228, 238, 242], "0316": [136, 237, 238], "04": 106, "044104": [227, 232, 234], "045504": 239, "05": [11, 12, 18, 26, 28, 53, 81, 87, 90, 91, 106, 205, 206, 214, 225, 228, 232, 234, 237, 238, 242], "053201": 239, "06": [106, 225], "061019144638489": 231, "0632": [136, 237, 238], "06_0": 225, "06_0_191": 225, "06_0_52": 225, "06_0_53": 225, "06_0_67": 225, "06_1": 225, "06_1_259": 225, "06_pre1": 225, "07": [7, 106, 111, 205, 237], "07f2f80d": 229, "08": [206, 237, 238], "083c4c17": 229, "0875": [26, 58, 219, 237, 238], "0_0": 225, "0_0_189": 225, "0_0_47": 225, "0_0_48": 225, "0_0_65": 225, "0_1": 225, "0_1_255": 225, "0_pre1": 225, "0b6bffe3": 229, "0d5e00f1a74": 229, "0e": [106, 225, 232], "1": [1, 3, 4, 5, 11, 12, 18, 26, 28, 29, 40, 53, 58, 62, 63, 64, 65, 71, 76, 79, 81, 91, 94, 96, 98, 102, 104, 105, 106, 107, 108, 112, 115, 121, 122, 131, 134, 136, 149, 153, 156, 166, 167, 204, 209, 210, 211, 213, 214, 217, 219, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 241, 242], "10": [3, 11, 12, 14, 18, 26, 53, 58, 63, 67, 76, 79, 81, 87, 90, 91, 96, 105, 111, 112, 122, 156, 193, 202, 204, 210, 211, 214, 217, 218, 219, 220, 225, 227, 229, 232, 233, 234, 237, 238], "100": [0, 26, 28, 29, 45, 62, 63, 65, 94, 96, 98, 105, 107, 108, 112, 115, 116, 211, 214, 217, 221, 233, 234, 237, 238], "1000": [11, 12, 18, 46, 53, 79, 91, 107, 108, 115, 116, 156, 210, 213, 214, 232, 237, 238], "10000": [206, 214, 231, 232, 237, 238], "100000": [156, 213], "101": [105, 112], "1016": [87, 90], "102": [0, 105, 112], "103": [0, 105, 112], "1038": [156, 227], "1039": 193, "104": [105, 112], "105": [105, 112, 234], "106": [0, 105, 112], "1063": 156, "107": [0, 105, 112], "1072544": 233, "1079297": 233, "108": [105, 112], "109": [0, 105, 112], "1095269": 233, "10a8": 229, "11": [0, 3, 63, 67, 105, 106, 112, 204, 228, 230, 234, 238], "110": [0, 105, 112], "111": [0, 105, 112], "112": [0, 105, 112], "113": [105, 112], "114": [105, 112], "1145": 156, "115": [0, 105, 112], "116": [105, 112], "117": [0, 105, 112, 225], "117_0": 225, "117_1": 225, "118": [105, 112], "1185319": 233, "11_mp": 229, "11c19d95557d": 229, "12": [26, 58, 94, 98, 105, 112, 204, 219, 220, 225, 232, 237, 238], "120": [0, 227, 239], "1200": [211, 232], "1200830": 233, "1203790": 233, "121": 0, "123": [0, 211, 214], "12345": 229, "125": [46, 55], "126": 0, "127": [0, 230], "128": [210, 217, 232, 237, 238], "128x0e": [211, 232, 240], "128x1o": [211, 232, 240], "129": [0, 231], "12_mp": 234, "13": [3, 105, 112, 238], "130": 0, "132": 0, "134": 0, "135": 0, "138": 0, "139": 0, "14": [105, 112, 136, 238, 240], "143": 0, "144": [230, 232], "149": [232, 233], "15": [3, 105, 106, 112, 222, 225, 230, 232, 233, 237, 238], "1500": [211, 232], "152": 0, "153": [227, 232, 234], "154": 0, "155": 0, "156001": [227, 239], "157": 0, "159": [0, 122, 124], "16": [3, 28, 29, 56, 105, 106, 112, 129, 131, 132, 136, 204, 205, 227, 228, 231, 237, 238, 242], "161": 0, "162": 0, "16220": 233, "163": [0, 136], "164": 0, "16438578": 240, "165": 233, "166": 0, "16613333": 240, "16736": 227, "168": [0, 233], "169": 0, "17": [105, 112, 238], "170": 0, "171": 0, "172": 0, "174": 0, "176": 0, "177": 0, "18": [94, 96, 98, 105, 112, 231, 233, 238], "182": 0, "185": 0, "189": 0, "19": [105, 106, 112, 238], "192": 0, "198b30d8": 229, "1996": 3, "1_mp": [225, 229], "1e": [87, 205, 206, 214, 225, 232, 237, 238], "2": [1, 3, 4, 11, 12, 14, 18, 19, 26, 28, 29, 40, 53, 65, 79, 87, 90, 91, 102, 104, 105, 106, 107, 108, 112, 115, 116, 122, 124, 156, 204, 205, 208, 210, 213, 214, 217, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 238, 241, 242, 243], "20": [3, 26, 28, 29, 87, 90, 94, 102, 104, 105, 112, 136, 154, 226, 232, 234, 237, 238], "200": [0, 26, 28, 232, 234, 238], "2000": [237, 238], "2001576": 156, "2001692": 156, "2006": 239, "2007": 3, "201": 0, "2010": [87, 90], "2011": 239, "2015": [183, 193, 202, 218], "2018": [227, 239], "2019": [63, 67, 227, 239], "202": 0, "2020": [227, 232, 234], "2021": 210, "2022": 183, "2024": [111, 153, 227, 228, 242], "2025": [7, 193, 227], "203": 0, "2048": 211, "206": 0, "207": 0, "208": 0, "209": 0, "20_mp": 229, "20a": 153, "20bdb7b3": 229, "20lightn": 153, "20m3gnet": 153, "20potenti": 153, "20pytorch": 153, "20with": 153, "21": [26, 28, 29, 45, 105, 106, 112, 217, 234, 238], "210": 0, "212": 0, "214": 229, "215": 0, "217": 0, "218": 0, "22": [98, 105, 106, 112, 228, 238], "220": 0, "220b": 229, "221": 0, "224": 0, "226": 0, "22862": 229, "22905": [229, 231, 233, 234], "23": [105, 111, 112, 237, 238, 239], "238": 0, "24": [105, 106, 112, 204, 238, 240], "2412": 227, "242": 0, "243": 0, "244": 0, "245": 0, "247": 0, "24d92e7b": 229, "25": [26, 96, 105, 112, 217, 221, 232, 233, 234, 237, 238], "250": [205, 237], "253": 0, "255": 0, "256": 0, "258": 0, "26": [105, 106, 112], "260": 0, "261": 0, "265": 0, "266": 0, "268": 0, "269": 0, "27": [105, 112, 228], "27017": 230, "272": 0, "273": 0, "276": 0, "277": 0, "279": 0, "28": [3, 105, 106, 112, 237], "280": 0, "2829ea98": 229, "283": 0, "285": 0, "286": 0, "288": 0, "29": [3, 105, 112, 227, 242], "290": 0, "2901815": [122, 124], "294": 0, "298": 0, "299": [87, 90], "2_mp": [225, 234], "2b": [11, 12, 122, 124, 147, 159, 161, 232], "2d": [26, 65, 135, 136], "2ftrain": 153, "2i": [26, 58], "3": [3, 26, 28, 29, 58, 62, 63, 87, 90, 102, 104, 105, 106, 111, 112, 126, 153, 156, 183, 193, 202, 204, 208, 210, 211, 217, 218, 221, 225, 227, 228, 229, 230, 232, 234, 237, 238, 241, 242], "30": [3, 87, 105, 112, 230], "300": [217, 225, 232, 237], "3000": [26, 58, 62, 63, 65, 203, 232, 237, 238], "303": 0, "304": 0, "306": 0, "307": 0, "309": 0, "31": [105, 106, 112], "310": 0, "311": 0, "312": [87, 90], "314": 0, "315": 0, "316": [136, 237, 238], "318": 0, "319": 0, "32": [104, 105, 106, 112, 124, 147, 152, 214, 217, 232, 237], "321": 0, "323": 106, "325": 0, "326": 0, "33": [105, 112, 225, 232], "332": 0, "333": 0, "334": 0, "337cf0ee": 229, "34": [105, 112], "343": 0, "348": 0, "349": 0, "35": [105, 112], "354": 0, "357": 0, "36": [105, 106, 112], "363": 0, "366": 0, "367": 0, "37": [105, 112], "38": [105, 106, 112], "39": [105, 106, 112], "390": 0, "398": 0, "3aff252b": [63, 67], "3b": [11, 12, 122, 124, 147, 232], "3d": [26, 65, 136], "3d456713": 229, "3e": 231, "3x3": 155, "4": [3, 11, 12, 26, 58, 62, 63, 65, 67, 87, 105, 106, 112, 122, 156, 204, 210, 213, 214, 219, 220, 225, 226, 228, 229, 232, 233, 237, 238], "40": [11, 12, 56, 105, 112, 121, 122, 232], "402": 0, "404": 0, "41": [105, 106, 112, 237], "41ee": 229, "42": [11, 12, 18, 28, 29, 53, 56, 76, 82, 91, 105, 106, 112, 129, 131, 132, 136], "426b": 229, "43": [105, 112], "43005": 229, "43008": 229, "43010": 229, "43011": 229, "43017": 229, "43020": 229, "43036": 229, "43047": 229, "43062": 229, "43069": 229, "43070": 229, "43076": 229, "43077": 229, "43084": 229, "43106": 229, "43126": 229, "4357": 229, "44": [105, 106, 112], "4455": 229, "45": [105, 106, 112], "45cb": 229, "46": [105, 106, 112], "46a4": 229, "47": [105, 106, 112], "470c": 229, "47b4": 229, "48": [105, 106, 112, 204, 225, 231, 232], "48550": 227, "49": [87, 90, 105, 112], "493f": 229, "49fd": 229, "4aff": 229, "4b0f": 229, "4b19": 229, "4bdb": 229, "4c8a": 229, "4cf1": 229, "4e": 231, "4e7c": [63, 67], "4ef7": 229, "4f2b31d3f09c": 229, "4f7a": 229, "5": [3, 11, 12, 18, 19, 26, 28, 46, 53, 55, 58, 64, 65, 76, 79, 82, 91, 94, 98, 105, 106, 112, 121, 156, 204, 210, 211, 213, 214, 219, 220, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 242], "50": [26, 28, 46, 105, 107, 108, 112, 115, 116, 156, 214, 232], "500": [94, 96, 98, 231, 233], "5000": 230, "51": [105, 106, 112], "52": [105, 112], "520": 205, "53": [105, 106, 112], "531": 231, "54": [105, 106, 112], "54554": 156, "55": [105, 112, 232], "56": [105, 112], "57": [105, 106, 112], "571520": 233, "57608": 233, "58": [105, 106, 112, 237], "59": [105, 112], "5a": [11, 12, 18, 53, 64, 76, 79, 91], "5e": [106, 231], "6": [105, 106, 112, 156, 204, 208, 217, 227, 228, 229, 230, 232, 237, 238, 242], "60": [3, 105, 112, 156, 213], "600": 238, "6000": [220, 225, 231, 232, 233, 238], "61": [105, 112], "62": [105, 106, 112], "62510": 227, "63": [105, 112], "632": [136, 237, 238], "63251308285152": 231, "64": [105, 106, 112, 214, 232, 238], "65": [105, 112], "66": [105, 106, 112], "67": [105, 112], "67bc": 229, "68": [105, 112], "69": [0, 105, 106, 112], "6b": 3, "6d": 3, "7": [3, 105, 106, 112, 153, 204, 225, 227, 228, 232, 237, 238, 242], "70": [105, 112], "700": 225, "7000": 232, "71": [105, 106, 112], "72": [105, 112], "72665b79": 229, "73": [0, 105, 112], "74": [105, 112], "75": [105, 106, 112, 136], "76": [0, 105, 106, 112], "7666": 227, "77": [105, 112], "78": [0, 105, 112], "79": [105, 112], "8": [5, 26, 58, 79, 105, 106, 112, 136, 153, 156, 203, 204, 205, 210, 214, 225, 229, 232, 237, 238, 240], "80": [0, 105, 112, 156, 213, 237, 238], "8000": [232, 237, 238], "81": [0, 105, 112], "82": [0, 105, 112], "83": [105, 112], "84": [0, 105, 106, 112], "85": [0, 105, 112], "86": [105, 112], "87": [105, 106, 112], "875f": 229, "8761": 229, "88": [105, 112], "8888": 230, "89": [0, 105, 106, 112], "893e": 229, "8c6be8305f0f": 229, "8e": 231, "9": [11, 12, 105, 106, 112, 121, 155, 167, 204, 225, 227, 228, 229, 232, 234, 238, 242], "90": [11, 12, 18, 53, 81, 87, 90, 91, 105, 112, 122, 231, 234], "900": 237, "9000": 232, "91": [105, 112], "91a3": 229, "92": [0, 105, 106, 112], "93": [105, 112], "94": [105, 106, 112, 225], "94_0": 225, "94_0_193": 225, "94_0_42": 225, "94_0_43": 225, "94_0_63": 225, "94_1": 225, "94_1_257": 225, "94_pre1": 225, "94f5": 229, "95": [0, 11, 12, 18, 53, 81, 91, 105, 106, 112, 232, 234], "96": [0, 105, 106, 112, 210], "967e7c512f230105b1a82c2227fb101d8d4acb3d": 229, "97": [105, 112, 239], "970413631078": 229, "971661": 233, "971662": 233, "98": [0, 11, 12, 18, 53, 81, 91, 105, 106, 112, 227, 228, 242], "9883": 229, "99": [11, 12, 18, 53, 81, 91, 105, 106, 112, 211, 214, 227, 232, 239], "999200": 233, "9c2f": 229, "9dc1540cc37e": [63, 67], "A": [3, 6, 11, 12, 13, 26, 28, 29, 35, 37, 38, 40, 45, 51, 52, 54, 56, 60, 66, 72, 80, 102, 121, 122, 127, 130, 134, 138, 139, 147, 151, 152, 153, 154, 156, 157, 167, 174, 180, 185, 193, 197, 201, 203, 204, 205, 216, 217, 219, 227, 231, 233, 234, 240, 242], "AND": 3, "AS": 3, "ASE": [75, 82, 83, 84, 90, 111, 116, 142, 161, 183, 186, 238], "And": [3, 229, 230, 231], "As": [105, 112, 113, 141, 228, 233, 234, 239, 240], "Ase": 139, "At": [105, 112, 113, 141, 233], "BE": 3, "BEING": 3, "BUT": 3, "BY": [3, 63, 67], "Be": [105, 112, 113, 141], "But": 3, "By": [3, 234, 239, 243], "FOR": 3, "For": [3, 5, 11, 12, 14, 19, 22, 26, 28, 29, 65, 68, 102, 104, 106, 121, 122, 152, 167, 180, 204, 217, 228, 229, 230, 231, 232, 234, 238, 240], "IF": 3, "IN": 3, "IT": [228, 230], "If": [1, 2, 3, 4, 5, 11, 12, 16, 18, 26, 28, 29, 39, 40, 45, 53, 56, 62, 63, 72, 75, 81, 84, 87, 90, 91, 94, 98, 102, 104, 106, 107, 108, 113, 115, 116, 121, 122, 124, 136, 141, 152, 153, 157, 175, 176, 188, 189, 190, 199, 210, 214, 217, 225, 227, 228, 229, 231, 232, 234, 238, 240, 242], "In": [1, 3, 4, 26, 28, 29, 45, 105, 112, 113, 141, 226, 229, 230, 231, 232, 238, 239, 240], "It": [2, 3, 5, 26, 28, 29, 45, 60, 90, 102, 104, 111, 152, 154, 157, 180, 190, 217, 225, 227, 228, 229, 231, 232, 233, 234, 238, 240, 242], "NO": 3, "NOT": 3, "No": [3, 105, 106, 112, 113, 141, 214], "Not": 3, "OF": 3, "OR": 3, "Of": [3, 233], "On": [227, 228], "One": [5, 224, 225, 238], "Or": 238, "SUCH": 3, "Such": 3, "THE": 3, "THERE": 3, "TO": 3, "The": [0, 3, 5, 7, 11, 12, 14, 16, 17, 18, 19, 22, 26, 28, 29, 33, 45, 46, 48, 52, 54, 56, 57, 58, 60, 62, 63, 65, 66, 67, 68, 76, 77, 82, 83, 84, 87, 89, 90, 91, 92, 94, 98, 106, 107, 108, 113, 115, 116, 121, 122, 133, 140, 141, 142, 156, 165, 174, 175, 176, 177, 179, 183, 184, 185, 186, 188, 189, 190, 193, 194, 201, 202, 204, 213, 214, 216, 217, 218, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 243], "Then": [16, 46, 230, 233, 238, 240], "There": [106, 228, 230, 232, 234], "These": [3, 62, 63, 106, 227, 228, 238], "To": [1, 3, 4, 5, 89, 90, 92, 106, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 242], "WILL": 3, "WITH": 3, "Will": [14, 19], "With": [90, 233], "_": [225, 229, 234], "__init__": 106, "__new__": 106, "_build": 5, "_default_static_energy_mak": [28, 29], "_id": [229, 231], "_pre1": 225, "_vfile": 197, "a0e5": 229, "a1": [111, 130], "a2": [111, 130], "a2a8": 229, "a330": 229, "a45d": 229, "a583": [63, 67], "a6ce98dcea3f": 229, "a794": 229, "a7a8": 229, "a88": 229, "a988": 229, "a9c4": 229, "aa11": 229, "aakash": [0, 2, 243], "ab": 215, "abc": 231, "abfix": [204, 237], "abil": 3, "abl": [210, 227, 228, 242, 243], "abort": [11, 12, 18, 53, 79, 91], "about": [3, 227, 230, 231, 233], "abov": [3, 5, 106, 136, 227, 228, 229, 234, 238, 240, 242], "absenc": 3, "absolut": [3, 210], "abus": 3, "ac": [0, 5, 26, 28, 29, 63, 67, 105, 107, 108, 112, 113, 114, 115, 116, 122, 124, 141, 152, 160, 208, 212, 217, 227, 228, 235, 238, 240, 242, 243], "accept": [1, 3, 4, 26, 156, 213, 240], "access": [0, 3, 210, 230, 232, 239, 240], "accident": 0, "accompani": 3, "accord": [3, 63, 65, 87, 90, 230, 233, 238], "accordingli": 238, "account": [230, 232, 240], "account_nam": 230, "accumul": 56, "accur": [0, 7, 90, 156, 205, 213, 227, 234, 235, 237, 238, 239, 240, 243], "accuraci": 28, "ace_json": 114, "ace_label": 114, "ace_t": 114, "acepotenti": [227, 228, 232, 242], "aceregistri": [227, 228, 242], "acesuit": [227, 228, 232, 242], "achiev": [3, 234], "acknowledg": 3, "acquir": 3, "across": [3, 22, 26, 28, 107, 117, 210, 217], "act": [1, 4], "action": 3, "activ": [3, 16, 111, 227, 228, 229, 230, 242], "actual": [3, 106, 107, 108, 115, 116], "ad": [0, 1, 3, 4, 5, 26, 28, 77, 107, 108, 111, 115, 116, 217, 225, 234, 238], "adam": 214, "adapt": [0, 3, 69, 74, 78, 80, 87, 92, 166, 193, 210, 230, 232, 239], "adapt_sc_algo": 0, "add": [0, 3, 11, 12, 16, 18, 91, 220, 221, 222, 227, 228, 230, 232, 233, 242], "add_arrai": 138, "add_data": [11, 12], "add_dft_phonon": 11, "add_dft_phonon_struct": [11, 12, 16, 225, 232, 233, 234], "add_dft_random_struct": 234, "add_dft_rattl": 11, "add_dft_rattled_struct": [11, 12, 225, 232], "add_info": 138, "add_rss_struct": [11, 12], "add_speci": [220, 221, 222, 237, 238], "add_wf": [228, 240, 242], "addgrid": [205, 237], "addit": [0, 3, 26, 28, 29, 89, 92, 122, 124, 147, 227, 230, 232, 233, 238], "addition": [91, 227, 228, 238, 240, 242], "additional_stor": 230, "address": 3, "adjust": [0, 69, 74, 78, 80, 90, 111, 230, 233, 235, 238, 240, 243], "adjust_forc": 111, "adjust_momenta": 111, "adjust_posit": 111, "adjust_potential_energi": 111, "admin": [229, 230], "admin_password": 230, "admin_us": 230, "administr": [228, 230], "adminnam": 230, "adminpassword": 230, "adopt": 3, "adress": [228, 229, 232, 242], "advanc": [225, 228, 242], "advers": 3, "advis": [3, 232, 238, 243], "afc9": [63, 67], "affect": [3, 232], "affero": 3, "affirm": 3, "after": [3, 14, 19, 26, 28, 29, 56, 64, 75, 106, 152, 154, 157, 167, 217, 227, 228, 229, 233, 238, 242], "ag": [105, 112, 113, 141], "again": [230, 232], "against": [3, 233], "aggreg": [3, 22], "agre": 3, "agreement": 3, "ai": [153, 239], "aim": [1, 3, 4, 7, 193, 227, 243], "aimd": 239, "aip": [122, 124], "airss": [227, 228, 238, 242], "al": [105, 112, 113, 141], "algo": [0, 205, 225, 229, 232, 234, 237], "algorithm": [62, 63, 87, 90, 156, 213, 233], "alia": [106, 211, 212, 214, 221, 222], "alias": 230, "all": [1, 3, 4, 5, 11, 12, 14, 16, 17, 19, 20, 21, 22, 26, 28, 29, 33, 45, 46, 58, 60, 64, 87, 90, 102, 104, 106, 111, 124, 127, 158, 163, 166, 180, 183, 193, 201, 202, 210, 211, 217, 218, 225, 227, 228, 230, 231, 232, 233, 234, 237, 238, 240, 242], "all_point": 158, "all_speci": 88, "alleg": 3, "alloc": 106, "allotrop": 232, "allow": [0, 3, 7, 11, 12, 18, 26, 46, 53, 64, 68, 79, 87, 90, 91, 94, 96, 98, 106, 121, 122, 167, 204, 210, 227, 230, 233, 238, 240], "allow_bson": 231, "allow_missing_label": 210, "allow_orthorhomb": [87, 90, 94, 98], "allow_tf32": 214, "along": [3, 165], "alpha": [11, 12, 18, 53, 79, 91], "alreadi": [3, 16, 234, 240], "also": [3, 5, 26, 28, 29, 102, 104, 106, 180, 217, 225, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240, 242], "altern": [3, 5, 202, 229, 234, 238, 240], "although": [3, 13, 238, 240], "alwai": 231, "am": [105, 112, 113, 141, 225], "amix": 205, "among": [3, 60], "amongst": 136, "amper": 214, "amplitud": [11, 12, 18, 46, 53, 76, 82, 91], "amsgrad": [211, 214, 232], "an": [0, 1, 3, 4, 5, 13, 14, 19, 26, 28, 29, 60, 72, 75, 84, 106, 107, 108, 111, 113, 115, 116, 134, 141, 146, 156, 175, 176, 188, 189, 196, 199, 213, 214, 217, 223, 227, 228, 229, 230, 231, 232, 233, 234, 238, 241], "analysi": 229, "ancillari": 3, "angl": [11, 12, 18, 53, 64, 79, 87, 90, 91, 231, 234], "angle_max_attempt": [11, 12, 18, 53, 79, 91], "angle_percentage_scal": [11, 12, 18, 53, 79, 91], "angular": [156, 213], "ani": [1, 3, 4, 11, 12, 18, 53, 64, 76, 87, 90, 91, 106, 136, 180, 183, 193, 198, 201, 202, 214, 218, 227, 229, 230, 231, 232, 233, 238, 240, 243], "anoth": [106, 130, 230, 231, 232], "answer": 229, "anti": 3, "anymor": 26, "anyon": 3, "anyth": [3, 229], "api": [233, 234], "api_kei": [229, 231, 232, 233], "append": [5, 214, 225, 231, 232, 233], "append_nam": 225, "appli": [3, 11, 12, 26, 28, 29, 56, 107, 108, 115, 116, 183, 193, 202, 217, 218, 238, 240], "applic": [1, 3, 4, 238, 239], "apply_data_preprocess": [11, 12, 122, 225, 231, 232, 233, 240], "approach": [239, 240], "appropri": [3, 238], "approv": [183, 193, 202, 218], "approxim": [3, 147, 238, 240], "apt": [227, 228], "ar": [0, 1, 3, 4, 11, 12, 13, 18, 26, 28, 29, 45, 48, 53, 62, 63, 64, 76, 82, 87, 90, 91, 94, 98, 105, 106, 112, 113, 124, 136, 141, 156, 179, 180, 186, 194, 197, 204, 213, 214, 217, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240, 242, 243], "architectur": [232, 238], "archiv": [227, 228, 230, 242], "ard_s": [221, 222, 237, 238], "area": 3, "aren": 64, "arg": [11, 14, 19, 22, 87, 90, 138], "args_str": [138, 231], "argument": [11, 12, 16, 26, 28, 29, 46, 48, 87, 89, 90, 92, 97, 102, 104, 113, 122, 124, 141, 147, 148, 152, 153, 154, 156, 157, 165, 175, 176, 179, 188, 189, 191, 194, 214, 232, 234, 238, 240], "aris": 3, "around": [180, 234], "arrai": [26, 28, 29, 102, 104, 106, 128, 131, 136, 158, 214], "arrang": 3, "articl": [3, 122, 124, 227], "arxiv": 227, "as_dict": 201, "ase": [7, 11, 12, 46, 58, 62, 63, 65, 67, 77, 91, 111, 129, 136, 155, 166, 214, 227, 234, 238, 243], "ase_arg": 214, "asemak": 11, "ashok": 2, "ask": [3, 111, 228, 229, 230], "aspect": [233, 240], "assert": 3, "asset": 3, "assign": [26, 28, 106, 107, 117, 217], "associ": [3, 38, 75, 106, 239], "assum": [3, 242], "assumpt": 3, "assur": 3, "asta": 193, "at_fil": [206, 232, 237, 238], "atom": [0, 11, 12, 16, 18, 21, 26, 28, 29, 33, 38, 45, 46, 53, 56, 58, 60, 62, 63, 64, 65, 67, 68, 69, 72, 74, 75, 76, 77, 79, 83, 84, 88, 89, 90, 91, 94, 96, 98, 102, 104, 107, 108, 111, 115, 116, 121, 122, 124, 127, 128, 129, 131, 132, 136, 138, 139, 142, 143, 144, 146, 149, 150, 152, 153, 154, 155, 156, 157, 166, 185, 190, 211, 213, 216, 217, 220, 225, 229, 232, 233, 235, 238, 240, 243], "atom_sigma": [26, 58, 219, 220, 225, 232, 237, 238], "atom_wise_regular": [11, 12, 121, 122, 166, 232], "atomate2": [0, 1, 4, 7, 11, 12, 46, 87, 177, 180, 183, 193, 202, 218, 225, 226, 227, 228, 231, 232, 234, 238, 242, 243], "atomate2_config_fil": [229, 230, 238], "atomate2_vasp_cmd": 238, "atomate2set": 232, "atomic_numb": [132, 150], "atomicdipolesmac": 211, "atomist": 34, "atoms_db": 139, "atoms_distil": 68, "atoms_list": [132, 143], "atoms_object": [72, 146], "atomwise_regularization_list": [11, 12, 232], "atomwise_regularization_paramet": [11, 12, 16, 33, 38, 121, 122, 231, 232], "attach": 3, "attempt": [3, 11, 12, 18, 53, 79, 91], "attribut": [3, 63, 67, 106], "au": [105, 112, 113, 141], "aug": [227, 242], "authent": 229, "author": [0, 3, 63, 67, 111, 153], "auto": [0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 214, 225, 226, 229, 231, 232, 233, 234, 238, 240], "auto_delta": [11, 12, 26, 28, 29, 122, 124, 147, 217, 232, 237, 238], "auto_ispin": 225, "auto_load": [228, 240, 242], "auto_npar": 230, "auto_work": 229, "autoatml": [0, 5, 224], "autodoc": 0, "autom": [0, 1, 4, 7, 8, 15, 227, 229, 230, 232, 233], "automat": [1, 3, 4, 5, 10, 11, 12, 26, 28, 29, 45, 89, 92, 94, 98, 122, 124, 125, 136, 147, 217, 228, 229, 231, 232, 233, 234, 238, 242], "autoplex": [0, 2, 5, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 33, 35, 37, 38, 39, 40, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 233, 234, 235, 238, 240, 242, 243], "autoplex_castep_cmd": 238, "autoplex_config_fil": 238, "autoplex_doc": [202, 218], "autoplex_flow": [225, 226, 228, 232, 233, 242], "autoplex_wf": 232, "autoplex_work": [228, 232, 242], "autoplexset": 218, "autoupd": 0, "avail": [3, 11, 63, 67, 87, 90, 111, 121, 122, 123, 153, 190, 210, 227, 228, 229, 234, 238, 240], "averag": [26, 58, 76, 99, 139, 211, 214, 219, 232, 237, 238], "avg_num_neighbor": 214, "avoid": [1, 3, 4, 89, 92, 111], "awai": 3, "awar": [87, 90], "awk": [227, 228, 242], "ax": [69, 74], "axi": [46, 55], "b": [3, 76, 105, 112, 113, 141, 193, 227, 228, 231, 242], "b1": 130, "b15d": 229, "b1bc": 229, "b2": 130, "b2b5bca76b30": 229, "b4e8": 229, "b8b0": 229, "ba": [105, 112, 113, 141], "back": 230, "backend": 230, "bam": [2, 227], "band": [11, 12, 33, 35, 37, 38, 39, 40, 87, 90, 176, 189], "band_comparison": 37, "bandstructur": [16, 231, 233], "banstructur": 229, "barrier": 239, "base": [1, 3, 4, 7, 11, 12, 13, 14, 16, 26, 28, 29, 33, 38, 45, 46, 56, 60, 62, 65, 66, 87, 88, 89, 90, 91, 92, 102, 104, 106, 111, 121, 122, 136, 138, 174, 177, 190, 191, 201, 214, 227, 229, 230, 232, 233, 234, 235, 238, 239, 240, 243], "base_dir_nam": 229, "base_path": 226, "baseaimsmak": 23, "basecastepmak": [177, 180], "basevaspmak": [11, 12, 13, 16, 17, 18, 23, 26, 28, 29, 45, 87, 91, 238], "bash": 230, "bash_profil": 230, "bashrc": [229, 230, 238], "basi": [26, 58, 156, 157, 210, 213, 214, 219, 220], "basic": [3, 229, 238, 243], "basis_s": [156, 213], "batch": [153, 154, 156, 157, 210, 211, 213, 214, 229], "batch_siz": [153, 154, 157, 210, 211, 214, 232], "bayesian": 152, "bcdf": 229, "bcur": [26, 58, 203, 217], "bcur1": [26, 58, 217], "bcur2": 58, "bcur2i": [26, 58, 217, 237, 238], "bcur_param": [26, 28, 29, 58, 102, 217, 237, 238], "bcurparam": 217, "be3e50e15e21": 229, "becaus": [3, 106, 229, 232, 239], "beck": 193, "been": [0, 3, 5, 62, 63, 183, 193, 202, 218, 230, 233, 239, 240], "befor": [5, 11, 12, 18, 53, 56, 79, 90, 91, 190, 197, 225, 229, 235, 238, 243], "beforehand": 232, "behalf": 3, "behind": 234, "being": [0, 3, 117, 156, 213, 239], "believ": 3, "below": [1, 3, 4, 5, 14, 19, 106, 227, 229, 232, 233, 238, 240], "benchmark": [0, 7, 9, 10, 11, 12, 14, 16, 19, 22, 33, 35, 37, 38, 39, 40, 224, 227, 233, 234, 235, 243], "benchmark_kwarg": [11, 12, 225, 232], "benchmark_mp": 229, "benchmark_mp_id": [11, 14, 16, 19, 22, 33, 225, 231, 232, 233, 234], "benchmark_structur": [11, 14, 16, 19, 22, 35, 225, 231, 232, 233, 234], "benchmark_structure_list": [225, 231, 232, 233, 234], "benefit": 3, "berkelei": [183, 193, 202, 218], "berlin": 227, "bernstein": [63, 67], "bessel": 214, "besselbasis_train": 214, "best": [3, 14, 19, 22, 214, 229, 230], "beta": [11, 12, 18, 53, 79, 91], "between": [2, 3, 11, 12, 18, 35, 38, 39, 40, 53, 64, 79, 81, 91, 165, 225, 233, 234, 238, 240], "beyond": [0, 3, 237], "bh": [105, 112, 113, 141], "bi": [105, 112, 113, 141], "bia": [156, 213], "bias": [211, 239], "bib": [176, 189], "big": 214, "bin": [46, 55, 230, 231, 232], "bin_width": [46, 55], "binari": [28, 29, 56, 230, 239], "bind_ip_al": 230, "bindip": 230, "biswa": 193, "bit": 229, "bk": [105, 112, 113, 141], "blob": 229, "block": [0, 157, 210, 238], "blr": [152, 208, 232], "bm": 231, "bm_struc": 232, "bm_structur": [231, 233], "bodi": [3, 139, 142, 148, 153, 156, 206, 207, 210, 213, 221, 222], "bolt_frac": [62, 63, 65], "bolt_max_num": [26, 58, 62, 63, 65, 203, 237, 238], "boltzhist_cur": [58, 62, 63], "boltzmann": [26, 28, 29, 58, 62, 63, 65, 102, 203, 217, 238, 239], "bonkowski": 193, "bool": [11, 12, 16, 18, 26, 28, 29, 35, 38, 39, 45, 46, 48, 49, 50, 56, 58, 67, 72, 75, 84, 87, 90, 91, 102, 104, 107, 108, 115, 116, 121, 122, 124, 134, 135, 136, 140, 143, 146, 147, 148, 153, 156, 159, 161, 166, 167, 179, 190, 191, 194, 197, 204, 206, 210, 211, 214, 217, 219, 234], "boolean": 146, "born": [87, 90], "born_mak": [87, 90], "both": [2, 3, 28, 29, 50, 56, 94, 98, 190, 228, 234, 238, 239, 240, 242], "botnet": 211, "bound": [229, 232], "boundari": 234, "box": [3, 26, 28, 29, 45, 217, 235, 243], "br": [105, 112, 113, 141], "branch": [227, 232], "break": [210, 238], "brew": 230, "brief": [3, 241, 243], "broad": 239, "broader": 240, "broken": 229, "browser": 230, "bsd": [153, 183, 193, 202, 218], "buffer": 106, "build": [0, 1, 4, 156, 204, 213, 227, 228, 234, 238, 241, 242, 243], "build_mpi": [227, 228, 242], "build_omp": [227, 228, 242], "build_random_cel": 104, "build_shared_lib": [227, 228, 242], "buildcel": [0, 5, 26, 28, 29, 102, 104, 204, 217, 227, 228, 237, 241, 242, 243], "buildcell_opt": [26, 28, 29, 102, 104, 217, 237, 238], "buildcellopt": 217, "built": [5, 87, 90, 94, 96, 98, 113, 141, 175, 176, 188, 189, 233], "builtin": [48, 179, 194], "bulk": [11, 12, 16, 17, 18, 45, 87, 90, 97, 238], "bulk_phonon_mak": 234, "bulk_rattled_mak": 234, "bulk_relax_mak": [46, 87, 90, 91, 97, 231], "bump": 0, "busi": 3, "bustamant": 193, "by_alia": 232, "byte": 106, "c": [3, 105, 106, 112, 113, 141, 183, 193, 202, 218, 227, 228, 229, 230, 231, 242], "c003": 229, "c948337c0dae": 229, "c_contigu": 106, "ca": [105, 112, 113, 141], "cach": 0, "calc": [182, 229], "calc_arg": 138, "calcul": [1, 4, 11, 12, 16, 17, 18, 20, 21, 22, 23, 26, 28, 29, 45, 46, 49, 50, 51, 56, 65, 67, 77, 87, 88, 90, 91, 92, 126, 127, 128, 129, 131, 132, 138, 139, 152, 154, 157, 158, 166, 174, 177, 182, 183, 186, 190, 191, 193, 217, 225, 226, 227, 228, 229, 230, 233, 234, 235, 238, 239, 240, 243], "calculation_always_requir": 138, "calculator_kwarg": [90, 97, 231, 232], "calibr": 111, "california": [183, 193, 202, 218], "call": [3, 94, 230, 232], "callabl": [180, 198], "calledprocesserror": 229, "calorin": [227, 228], "cam": [63, 67, 227, 228, 242], "can": [1, 3, 4, 5, 7, 11, 16, 26, 28, 29, 60, 87, 90, 91, 97, 102, 104, 106, 156, 210, 213, 214, 217, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 242], "cannot": [3, 48, 89, 92, 154, 179, 194, 228, 233, 242], "capabl": [227, 228], "card": [227, 228], "care": 232, "carefulli": [233, 238], "carlo": [11, 12, 18, 53, 76, 91, 234], "carri": [3, 238], "case": [0, 1, 3, 4, 26, 28, 29, 45, 65, 90, 94, 96, 98, 227, 228, 229, 230, 231, 232, 233, 237, 238, 241, 242], "castep": [26, 28, 29, 45, 49, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 202, 218, 238], "castep_bin": [176, 189], "castep_binary_nam": 238, "castep_cmd": [202, 218, 238], "castep_gz": 49, "castep_job": 174, "castep_keyword": [175, 188, 202, 218, 238], "castep_mak": 238, "castepinputgener": [174, 177, 191], "castepstaticmak": [26, 28, 29, 45, 238], "castepstaticsetgener": [177, 238], "catch": 233, "categori": [230, 232], "caus": [3, 111], "cc": [63, 67], "cd": [5, 105, 112, 113, 141, 227, 228, 230, 242], "ce": [105, 112, 113, 141], "ce6a": 229, "ceas": 3, "cell": [0, 11, 12, 13, 16, 17, 18, 26, 28, 29, 46, 52, 55, 64, 87, 90, 91, 102, 104, 111, 174, 175, 177, 185, 188, 190, 191, 197, 217, 232, 234, 238], "cell_factor": [46, 55], "cell_factor_sequ": 46, "cell_seed_path": [26, 28, 29, 102, 104, 217, 238], "cell_upd": [190, 191], "centimet": 149, "central": 220, "central_weight": [220, 225, 232, 237, 238], "certain": [3, 87, 90, 229, 232, 233, 234, 238, 240], "cessat": 3, "cf": [105, 112, 113, 141], "challeng": [87, 90], "chang": [1, 3, 4, 11, 12, 18, 46, 53, 79, 91, 111, 230, 232, 233, 234, 240], "channel": [227, 228, 242], "charact": [89, 92], "character": 3, "charg": [3, 87, 90], "chdiff": [176, 189], "chdir": [229, 232], "check": [0, 1, 4, 7, 11, 12, 44, 46, 49, 50, 64, 90, 96, 134, 135, 140, 176, 189, 197, 204, 227, 228, 230, 231, 233], "check_input": 197, "check_supercel": 233, "checkpoint": [153, 211, 214], "chem": [227, 232, 234], "chemic": [60, 71, 74, 156, 213, 214], "chemical_symbol": 214, "chen": [153, 193], "chi": 153, "chiang": 193, "choic": [28, 29, 56, 129, 131, 132, 136, 232], "choos": [3, 26, 28, 29, 107, 108, 115, 116, 122, 124, 229, 230, 240], "chose": 226, "chosen": [0, 33, 46, 62, 94, 98, 232, 233], "christina": [2, 243], "chrzan": 193, "chunk": 206, "ci": 0, "circumst": 3, "circumvent": 3, "citat": 227, "civil": 3, "cl": [105, 112, 113, 141, 231, 232], "claim": 3, "clang": [227, 228, 242], "clari": 193, "clash": 229, "class": [1, 3, 4, 10, 11, 12, 13, 14, 25, 26, 32, 33, 44, 45, 46, 47, 48, 59, 60, 86, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 106, 109, 111, 120, 121, 122, 137, 138, 173, 174, 177, 179, 180, 183, 187, 190, 191, 193, 194, 200, 201, 234, 240], "classic": 239, "classmethod": [201, 217], "claus": [153, 183, 193, 202, 218], "clean": [0, 195, 229], "clean_fold": [225, 226], "cleanup": 0, "clear": [0, 3, 197], "clear_input": 197, "clearli": 3, "cleartext": 230, "client": [229, 231, 232, 233], "clock": 230, "clone": [5, 227, 228, 232, 242], "close": [3, 64, 230, 234], "cluster": [0, 11, 122, 124, 152, 204, 221, 222, 228, 230, 232, 238, 240, 242], "cm": [105, 112, 113, 141], "cmake": [227, 228, 242], "cmake_exe_linker_flag": [227, 228, 242], "cmake_install_prefix": [227, 228, 242], "cmd": 229, "cm\u00b3": 149, "cn": [105, 112, 113, 141], "co": [105, 112, 113, 141], "code": [0, 3, 87, 90, 91, 111, 180, 183, 193, 202, 218, 227, 232, 238, 240], "codespac": 5, "coeffici": [114, 209, 214], "cohen": 193, "collect": [3, 21, 22, 28, 46, 51, 60, 225, 229, 230, 233, 234], "collection_nam": 230, "color": 0, "column": 106, "com": [0, 1, 4, 5, 227, 228, 229, 230, 242], "combin": [3, 11, 62, 63, 121, 122, 232, 233, 234, 238, 241], "come": 3, "comm": [227, 228, 242], "comma": [156, 213], "command": [3, 5, 165, 202, 218, 227, 228, 230, 232, 238, 242], "commatsci": [87, 90], "commerci": 3, "commit": [0, 3, 5], "common": [3, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 180, 231, 232, 238, 239, 240], "commun": [3, 7, 227, 228, 230], "comp_bm": 231, "compact": [221, 222], "compact_clust": [221, 222, 237, 238], "compar": [0, 11, 12], "comparison": [11, 12, 16, 33, 37, 231, 233], "compat": [0, 26, 28, 29, 45], "compil": [0, 3, 227, 228, 242], "complet": [16, 26, 90, 216, 217, 228, 233, 234, 238, 240, 242], "complete_benchmark": 22, "complete_benchmark_mp": [229, 233], "complete_dft_vs_ml_benchmark_workflow_0": [14, 225, 232, 233], "complete_dft_vs_ml_benchmark_workflow_1": [14, 225, 232, 233], "complete_flow": [231, 232, 233, 234], "complete_workflow_mac": 232, "completedftvsmlbenchmarkworkflow": [0, 12, 14, 19, 225, 231, 232, 233, 234], "completedftvsmlbenchmarkworkflowmpset": 232, "completephonondftmldatagenerationflow": [16, 122], "complex": 238, "compli": 3, "complianc": 3, "compon": [3, 11, 12, 16, 33, 38, 65, 74, 121, 122, 166, 167, 214, 238], "compos": [11, 12, 107, 108, 115, 116], "composit": [26, 136], "compound": [28, 29, 56, 240], "comprehens": [228, 232, 240, 242], "compress": 81, "comput": [3, 7, 11, 12, 16, 17, 18, 26, 28, 29, 38, 39, 76, 80, 87, 90, 91, 97, 99, 102, 104, 139, 142, 152, 211, 214, 225, 226, 227, 228, 232, 239], "computation": 233, "compute_avg_num_neighbor": 211, "compute_forc": 211, "compute_statist": 211, "compute_stress": [211, 232], "concern": [3, 232], "conda": [227, 228, 229, 230, 242], "conda_env": 229, "conden": 239, "condit": [3, 234], "conf": [0, 230], "config": [1, 4, 154, 190, 191, 211, 226, 227, 228, 230, 238, 240], "config_dict": [190, 191], "config_fil": [202, 218], "config_typ": [26, 28, 29, 45, 46, 51, 52, 107, 108, 115, 116, 166, 217, 237, 238], "config_type_overrid": 136, "config_type_weight": [154, 211, 232], "configur": [11, 12, 26, 28, 29, 45, 46, 51, 52, 56, 58, 107, 108, 115, 116, 136, 152, 154, 157, 180, 190, 217, 226, 237, 239, 240, 241, 243], "connect": [3, 76, 214, 229, 231, 232, 233], "consecut": 211, "consequ": 3, "consequenti": 3, "consid": [3, 26, 28, 29, 45, 58, 214, 217, 219, 228], "consider": 13, "consist": [0, 3, 28, 29, 33, 56, 120, 234, 238], "conspicu": 3, "constant": [26, 28, 29, 45, 62, 63, 65, 87, 90, 111, 214, 217], "constantli": 3, "constitu": [28, 29, 56], "constitut": 3, "constrain": 111, "constraint": 111, "constru": 3, "construct": [11, 12, 14, 16, 28, 29, 56, 106, 148, 227, 233, 234], "constructor": [106, 113, 141, 175, 176, 188, 189], "consum": 3, "contact": 3, "contain": [3, 8, 9, 11, 13, 14, 16, 19, 22, 24, 26, 28, 29, 30, 31, 33, 38, 41, 42, 43, 45, 51, 56, 58, 66, 72, 75, 85, 89, 92, 100, 106, 107, 108, 114, 115, 116, 118, 119, 122, 124, 127, 139, 152, 153, 154, 156, 157, 163, 168, 169, 186, 190, 196, 201, 211, 212, 216, 227, 231, 232, 233, 234, 238, 240], "content": [3, 89, 92, 230], "context": 3, "contigu": 106, "continu": [3, 240], "contractu": 3, "contradict": 3, "contrast": [3, 239], "contribut": [0, 2, 7], "contributor": 3, "control": [3, 26, 28, 29, 62, 63, 65, 102, 104, 154, 217, 229, 232, 233, 234, 238, 240], "convei": 3, "conveni": [3, 232, 233], "convent": [1, 4, 11, 12, 16, 17, 64, 87, 90, 232], "converg": [14, 26, 28, 49, 50, 90, 140, 217, 232, 233, 234, 238], "convers": 46, "convert": [52, 61, 84, 89, 90, 92, 110, 111, 143, 149, 155, 178], "convex": [26, 28, 29, 56, 65, 126, 127, 128, 129, 132, 134, 136, 158], "convey": 3, "coordin": [132, 135], "copi": [3, 62, 63, 121, 196, 197, 206, 225, 229], "copy_vasp_kwarg": [89, 92], "copy_vasp_output": [89, 92], "copyleft": 3, "copyright": [0, 3, 183, 202, 218], "core": [11, 122, 124, 147, 159, 161, 225, 229, 232, 233, 234, 238, 240], "correct": [0, 3, 90, 231, 232], "correl": [154, 211, 232], "correspond": [3, 45, 51, 75, 154, 214, 227, 238, 240], "cost": [3, 239], "could": [1, 3, 4, 240], "count": [0, 46], "counter": 229, "counterclaim": 3, "counterpart": 234, "countri": 3, "cours": [1, 3, 4, 233], "court": 3, "cov": 5, "covari": [220, 221, 222], "covariance_typ": [220, 221, 222, 225, 232, 237, 238], "coven": 3, "cover": 3, "coverag": [0, 1, 3, 4, 5], "cp": 229, "cpp": [227, 228, 242], "cpu": [26, 28, 29, 107, 108, 115, 116, 122, 124, 153, 154, 157, 211, 217, 232, 237, 238], "cr": [105, 112, 113, 141], "crash": 111, "creat": [0, 5, 7, 26, 44, 47, 54, 86, 89, 93, 102, 104, 106, 113, 141, 174, 175, 176, 177, 188, 189, 191, 201, 217, 227, 229, 230, 238, 240], "create_fold": [225, 226, 231, 232], "create_thermal_displac": [87, 90], "createus": 230, "creation": 0, "criteria": [70, 71, 229, 234, 238], "criterion": [3, 26, 28, 217], "critic": [214, 238], "cross": 3, "crucial": [229, 231], "crystal": [190, 204, 239], "crystallin": [234, 238], "cst_esp": [176, 189], "csv": [227, 228, 242], "cs\u00e1nyi": [63, 67], "ctrl": 229, "ctype": 106, "cu": [105, 112, 113, 141], "cube": 225, "cubi": 204, "cubic": 149, "cuda": [26, 28, 29, 107, 108, 115, 116, 122, 124, 153, 154, 157, 211, 217, 227, 228, 232, 240], "cur": [26, 28, 29, 58, 62, 63, 65, 67, 102, 203, 217, 238, 239], "cur_num": [62, 63, 65], "cur_point": [220, 225, 232, 237, 238], "cure": 3, "curl": [227, 228, 242], "current": [0, 1, 4, 11, 19, 26, 28, 29, 56, 87, 89, 90, 91, 92, 107, 108, 115, 136, 217, 225, 227, 228, 230, 232, 233, 238, 240, 242], "current_it": [26, 28, 29], "current_iter_index": [26, 28, 217, 237, 238], "curtarolo": [87, 90], "custer": 229, "custom": [3, 26, 28, 29, 45, 102, 104, 136, 138, 217, 233, 234, 238, 240, 243], "custom_handl": [226, 232], "custom_incar": [26, 28, 29, 45, 217, 237], "custom_potcar": [26, 28, 29, 45, 217], "customarili": 3, "customincar": 217, "customiz": 240, "cut_off_energi": 238, "cutoff": [11, 12, 26, 58, 121, 122, 139, 142, 152, 153, 154, 156, 157, 166, 208, 210, 211, 213, 214, 219, 220, 221, 222, 225, 232, 237, 238], "cutoff_transition_width": [26, 58, 219, 220, 225, 232, 237, 238], "cwd": 159, "cycl": 240, "d": [3, 105, 112, 113, 134, 141, 193, 201, 227, 228, 230, 240, 242], "d13f1cc874ef": 229, "d1cd": 229, "d4c6c8fb": 229, "d5dd00019j": 193, "d6ba2f4b0577": 229, "daemon": 229, "dai": [3, 238], "damag": 3, "danger": 3, "dark": 0, "data": [0, 3, 10, 11, 12, 22, 24, 26, 28, 29, 33, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 124, 125, 140, 152, 153, 154, 156, 157, 159, 161, 166, 167, 169, 180, 210, 211, 214, 217, 225, 228, 230, 231, 232, 233, 235, 237, 241, 242, 243], "data_mean": 210, "data_path": 161, "data_preprocessing_for_fit": [121, 232, 233], "data_preprocessing_job": 240, "data_std": 210, "data_typ": [11, 121, 122, 166], "databas": [0, 11, 14, 17, 18, 19, 22, 26, 28, 29, 56, 121, 122, 124, 136, 147, 159, 216, 217, 227, 228, 233, 234, 235, 240, 242, 243], "database_dict": 124, "database_dir": [122, 124, 159, 240], "database_nam": 230, "datafram": [227, 228, 242], "dataset": [11, 12, 14, 16, 28, 29, 56, 83, 121, 122, 124, 153, 154, 167, 211, 214, 232, 238, 239, 241, 243], "dataset_file_nam": 214, "dataset_forces_absmax": 214, "dataset_key_map": 214, "dataset_per_atom_total_energy_mean": 214, "dataset_per_atom_total_energy_std": 214, "dataset_per_species_forces_rm": 214, "dataset_per_species_total_energy_mean": 214, "dataset_per_species_total_energy_std": 214, "dataset_se": 214, "datatyp": [0, 232], "date": [3, 7, 26, 63, 67, 111, 153, 217, 239], "db": [105, 112, 113, 141, 230], "db_dir": [147, 152, 153, 154, 156, 157], "db_file": 230, "db_id": 229, "dbe11dfa5100": 229, "dbpath": 230, "de": [63, 67], "deactiv": 233, "debian": [227, 228], "debug": [214, 229], "decai": [210, 211, 214], "decay_alpha": 210, "decay_step": 210, "decemb": 3, "decid": [3, 232, 234], "declin": 3, "decor": 180, "decoupl": 240, "decreas": [211, 214], "dedic": 229, "deem": 3, "def": 180, "default": [0, 1, 4, 11, 12, 16, 18, 26, 28, 29, 33, 37, 38, 40, 45, 46, 51, 53, 58, 60, 62, 64, 65, 75, 76, 79, 81, 82, 90, 91, 102, 104, 107, 108, 115, 116, 122, 139, 147, 149, 152, 154, 156, 157, 177, 190, 201, 202, 206, 211, 212, 213, 214, 217, 227, 228, 229, 232, 234, 235, 238, 240, 242, 243], "default_dtyp": [154, 157, 211, 214, 232], "default_sigma": [206, 225, 232, 237, 238], "defect": 3, "defens": 3, "defin": [1, 3, 4, 26, 28, 29, 102, 104, 134, 139, 190, 217, 225, 227, 228, 230, 234, 238, 240], "definit": [0, 3, 87, 90, 183, 238], "deform": [87, 90], "degre": [26, 58, 87, 90, 111, 152, 153, 208, 210, 214, 219, 220], "del": 231, "delet": [229, 238], "delta": [11, 12, 26, 28, 29, 122, 124, 139, 147, 217, 220, 221, 222, 225, 231, 232, 233, 237, 238], "demonstr": [232, 233, 234, 237, 239, 240, 243], "den_fmt": [176, 189], "deni": 3, "denomin": 3, "denot": [89, 92], "dens": 153, "densiti": [90, 149, 239], "depart": 230, "depend": [0, 1, 4, 5, 16, 39, 40, 111, 227, 229, 230, 238, 239, 242, 243], "dependabot": 0, "deploy": 0, "deposit": 232, "deprec": 230, "depriv": 3, "dept": [183, 193, 202, 218], "dering": [2, 63, 67, 227], "deriv": 45, "describ": [2, 106, 184, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 233, 238, 240], "descript": [1, 4, 186], "descriptor": [26, 58, 62, 63, 65, 66, 67, 77, 139, 142, 156, 213, 238], "descriptor_vec": 77, "design": 3, "desir": [26, 28, 29, 45, 217, 229, 238, 240], "destin": [229, 230, 232], "detail": [3, 5, 76, 229, 233, 234, 238, 240], "detect": 90, "determin": [3, 11, 12, 22, 26, 28, 29, 60, 87, 90, 91, 122, 124, 147, 210, 232, 234, 238], "dev": 5, "devcontain": [0, 5], "develop": [3, 7, 228, 242, 243], "deviat": [11, 12, 18, 46, 53, 76, 80, 82, 91, 210, 234], "devic": [3, 26, 28, 29, 107, 108, 115, 116, 122, 124, 153, 154, 157, 211, 214, 217, 232, 240], "device_for_fit": [26, 28, 29, 217, 237], "device_for_rss": [26, 28, 217, 237, 238], "df47": 229, "dft": [0, 11, 12, 13, 14, 16, 17, 18, 19, 22, 26, 28, 29, 33, 35, 37, 38, 39, 40, 45, 51, 56, 68, 69, 70, 71, 74, 87, 88, 90, 91, 92, 97, 122, 127, 128, 129, 132, 224, 228, 229, 234, 235, 237, 238, 239, 240, 242, 243], "dft_b": [37, 39, 40], "dft_data": 231, "dft_dir": 51, "dft_imag_mod": 38, "dft_maker": [13, 23], "dft_phonon_b": 38, "dft_phonon_static_1_1_mp": 225, "dft_phonon_task_doc": [33, 231], "dft_phonopy_gen_data": 234, "dft_random_gen_data": 234, "dft_rattle_static_1_1_mp": 225, "dft_ref": [26, 28, 29, 51, 217], "dft_ref_dir": [51, 56, 68, 240], "dft_ref_fil": [26, 28, 29, 51, 217, 237], "dft_refer": [11, 14, 16, 19, 22, 231], "dft_supercell_check_flow": 233, "dftphononmak": 234, "dftsupercellsettingsmak": 233, "diagnost": 233, "diagram": [233, 234], "dict": [11, 12, 13, 14, 16, 18, 19, 20, 22, 26, 28, 29, 33, 38, 45, 46, 51, 56, 58, 62, 63, 65, 66, 80, 87, 89, 90, 91, 92, 97, 102, 104, 106, 107, 108, 114, 115, 116, 121, 122, 124, 129, 132, 136, 147, 148, 151, 152, 153, 154, 156, 157, 174, 184, 190, 191, 201, 210, 214, 216, 217, 229], "dictionari": [16, 22, 26, 28, 29, 33, 38, 45, 51, 56, 58, 62, 63, 66, 75, 77, 89, 92, 106, 107, 108, 111, 115, 116, 121, 122, 124, 129, 132, 136, 147, 148, 152, 153, 154, 156, 157, 190, 191, 201, 211, 216, 217, 234, 240], "did": 229, "dielectr": 191, "differ": [0, 3, 7, 11, 16, 26, 28, 29, 45, 56, 60, 87, 90, 92, 111, 122, 124, 156, 165, 209, 213, 217, 225, 227, 228, 231, 233, 234, 235, 237, 238, 239, 242, 243], "differenti": 165, "digit": 193, "dim_edge_embed": [153, 210], "dim_node_embed": [153, 210], "dim_state_embed": 210, "dimens": [0, 106, 134, 153, 210], "dimension": [28, 29, 56, 129, 139, 142], "dimer": [26, 28, 29, 45, 217, 238], "dimer_box": [26, 28, 29, 45, 217, 237, 238], "dimer_num": [26, 28, 29, 45, 217, 237, 238], "dimer_rang": [26, 28, 29, 45, 217, 237, 238], "dimer_speci": 45, "dipol": [156, 211, 213], "dir": [58, 229, 233], "dir_nam": [26, 28, 29, 45, 186, 229], "direct": [3, 210, 241, 243], "directli": [3, 26, 180, 217, 228, 238, 240, 242], "directori": [5, 11, 14, 19, 22, 26, 28, 29, 45, 51, 56, 58, 68, 75, 89, 92, 121, 122, 124, 147, 152, 153, 154, 156, 157, 159, 166, 182, 186, 196, 197, 210, 214, 216, 217, 229, 230, 232, 233], "dirs_of_dft": [45, 51], "disclaim": [3, 227, 241], "discoveri": 193, "discriminatori": 3, "disord": 238, "dispac": 23, "displac": [0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 33, 38, 46, 53, 76, 87, 90, 91, 92, 225, 229, 231, 232, 233, 235, 243], "displacement_list": 234, "displacement_mak": [11, 12, 18, 91, 225, 232, 234], "displai": [3, 230], "distanc": [11, 12, 26, 28, 29, 38, 45, 58, 64, 76, 87, 90, 111, 128, 129, 136, 152, 156, 208, 211, 213, 214, 217, 219, 220, 221, 222, 238, 240], "distance_nb": [221, 222, 237], "distance_nb_ord": [221, 222, 238], "distil": [11, 12, 26, 28, 29, 56, 68, 121, 122, 167, 217, 232, 237, 238], "distinct": 232, "distinguish": 3, "distort": [11, 12, 18, 53, 64, 79, 81, 91, 234], "distort_typ": [11, 12, 18, 53, 91, 225, 232, 234], "distribut": [3, 11, 12, 18, 26, 46, 53, 55, 69, 74, 76, 82, 91, 144, 211, 221, 222, 234, 238], "divers": [0, 62, 63, 65, 238, 239, 240], "divid": [11, 12, 26, 83, 121, 122, 167, 214, 217, 233], "divisor": [227, 228], "dmliap_enable_python": [227, 228, 242], "do": [3, 7, 111, 228, 229, 230, 231, 232, 233, 234, 240], "do_copy_at_fil": [206, 237, 238], "do_dft_label": 45, "do_randomized_structure_gener": 102, "doc": [0, 5, 33, 227, 229, 230], "docker": [0, 5], "dockerbuild": 0, "dockerfil": 0, "docs_stor": 230, "docstr": [0, 1, 4], "document": [3, 183, 186, 229, 231, 233, 243], "doe": [0, 3, 232, 233], "doi": [87, 90, 156, 193, 227], "domain": 3, "don": [229, 233, 234, 240], "done": [1, 4, 230, 232], "dot": [26, 58, 62, 63, 219, 220], "dot_product": [220, 225, 232, 237, 238], "doublerelaxmak": [225, 229], "doubt": 3, "down": [230, 238], "download": [210, 224, 227, 228, 230, 232, 233, 242], "downstream": [3, 26, 28, 29, 45], "dr": 2, "draw": [76, 233, 234], "drawn": [33, 91], "drive": [232, 240], "driven": [26, 238, 239, 240], "drop": 229, "dss": 230, "dsshome1": 230, "dtype": 106, "due": [0, 111, 230, 239], "dumpfn": 231, "durabl": 3, "durat": 0, "dure": [26, 28, 29, 46, 65, 107, 108, 115, 116, 153, 211, 217, 229, 238], "dwell": 3, "dy": [105, 112, 113, 141], "dynam": [3, 90], "e": [1, 3, 4, 5, 11, 12, 18, 26, 28, 29, 53, 56, 64, 65, 69, 70, 71, 74, 79, 89, 91, 92, 102, 104, 105, 106, 111, 112, 113, 127, 129, 131, 132, 136, 141, 153, 154, 157, 186, 193, 204, 215, 227, 228, 229, 230, 232, 233, 234, 240, 242], "e0": [206, 211, 232], "e0_offset": [206, 237, 238], "e0_spin": [26, 28, 29, 45, 217, 237, 238], "e9f2c9e11ea7": 229, "e_nam": 139, "each": [1, 3, 4, 11, 16, 26, 28, 29, 45, 51, 62, 65, 67, 75, 76, 102, 104, 106, 107, 117, 121, 122, 136, 153, 154, 185, 210, 211, 214, 217, 232, 233, 234, 238, 240], "ear": 230, "earli": [111, 214], "earlier": 3, "early_stopping_lower_bound": 214, "early_stopping_pati": 214, "easi": 233, "easier": [11, 106, 230, 238], "echo": [229, 230], "edg": [153, 210], "ediff": [205, 225, 237, 238], "edit": [227, 228], "editor": 233, "ef": 211, "effect": [3, 26, 28, 29, 90, 102, 104, 238], "effici": [7, 227, 238], "effort": 3, "effortlessli": 239, "eg": 240, "eight": 204, "either": [3, 26, 28, 29, 45, 111, 122, 124, 232, 238, 240], "elec_energy_tol": 238, "electron": [3, 50, 87, 90, 204], "electroneg": 190, "element": [26, 28, 29, 45, 56, 60, 65, 102, 104, 106, 122, 124, 127, 131, 147, 152, 156, 157, 210, 211, 213, 217, 238, 239, 240], "element_ord": [28, 29, 56, 65, 129, 131, 132, 136], "element_ref": 210, "elf": [176, 189], "elimin": 239, "els": [0, 1, 4, 106, 229], "ema": [211, 214, 232], "ema_decai": [211, 214, 232], "ema_use_num_upd": 214, "email": 230, "emax": 136, "embed": [153, 210], "embodi": 3, "emin": 136, "emphasi": [156, 213], "emploi": 239, "employ": 3, "empti": [75, 106, 113, 141, 152, 157, 175, 176, 188, 189, 229], "emt": [69, 74, 78, 80], "emul": 197, "enabl": [0, 3, 87, 90, 91, 154, 230, 238, 239, 240], "encourag": 240, "encut": [205, 225, 237, 238], "end": [3, 26, 28, 29, 102, 104, 211, 230, 233, 243], "energi": [11, 12, 16, 17, 25, 26, 28, 29, 45, 51, 56, 58, 62, 63, 65, 67, 69, 70, 74, 78, 80, 83, 87, 88, 90, 97, 107, 108, 111, 115, 116, 121, 122, 124, 127, 128, 129, 132, 136, 138, 143, 144, 147, 152, 153, 154, 156, 157, 166, 167, 177, 183, 185, 191, 193, 202, 206, 209, 210, 211, 213, 214, 216, 217, 218, 225, 232, 233, 234, 238, 239, 240], "energy_forces_dipol": 211, "energy_label": [26, 56, 58, 62, 63, 65, 83, 167], "energy_limit": [78, 233], "energy_nam": [127, 128, 129, 132, 136], "energy_parameter_nam": [139, 206, 232, 237, 238], "energy_per_atom": 185, "energy_weight": [210, 211, 232], "energydipolesmac": 211, "enforc": [3, 26, 28, 29, 45, 87, 90, 204], "enhanc": 239, "enough": [90, 111, 233], "ensur": [1, 3, 4, 14, 26, 28, 29, 45, 56, 58, 102, 180, 210, 217, 227, 232, 234, 238, 239, 240], "ensure_success": [225, 226], "enter": [3, 227, 228, 242], "enthalpi": [26, 58, 62, 217], "entir": 3, "entiti": 3, "entri": [167, 229, 232, 233, 237, 238], "enum_valu": 231, "env": [5, 202, 218, 228, 229, 230, 231, 232, 242], "environ": [5, 7, 159, 226, 227, 228, 229, 230, 231, 232, 242], "epoch": [153, 154, 210, 211, 214], "equal": [81, 214], "equip": [234, 238], "equival": [3, 190], "er": [105, 112, 113, 141], "err": 230, "erron": 3, "error": [0, 26, 28, 29, 35, 38, 39, 40, 45, 140, 152, 153, 154, 157, 214, 216, 229, 230, 233, 235, 238, 243], "ertur": [2, 193, 227, 243], "es_var": 139, "especi": [1, 4, 228, 238, 242], "essenti": [0, 3, 227, 228, 233], "establish": 238, "estim": [152, 233], "etc": [106, 229], "eu": [105, 112, 113, 141], "ev": [26, 28, 58, 62, 63, 65, 136, 185, 217, 233], "evalu": [35, 142], "even": [3, 215, 229, 231, 238, 242], "evenli": 234, "event": 3, "ever": 3, "everi": [3, 233], "everyon": 3, "everyth": [227, 229], "evolut": 156, "evolv": 227, "exact": [3, 229], "examin": 106, "exampl": [1, 3, 4, 5, 26, 28, 29, 102, 104, 106, 156, 180, 213, 217, 225, 231, 233, 234, 235, 238, 241, 243], "example_input_set": 234, "example_work": 229, "exce": 238, "except": [3, 26, 28, 29, 45, 94, 96, 98, 229], "exclud": [3, 26, 28, 29, 56, 72, 146, 217, 233], "exclus": 3, "excus": 3, "exe_config": 229, "exec_config": 229, "execut": [0, 3, 5, 26, 58, 62, 148, 152, 154, 157, 165, 225, 226, 227, 228, 230, 231, 233, 234, 243], "exemplari": 231, "exercis": 3, "exist": [0, 7, 16, 26, 28, 29, 56, 102, 104, 136, 199, 216, 217, 227, 228, 229, 232, 234, 235, 238, 241, 242, 243], "exit": 229, "exp": [26, 28, 107, 108, 115, 116, 217, 237, 238], "exp_nam": [153, 210], "expand": [239, 241, 243], "expans": [152, 156, 213, 240], "expect": [3, 26, 28, 29, 102, 104, 214, 217, 227, 228, 233], "experi": [153, 210, 211, 240, 242], "explain": [3, 234, 238], "explan": 238, "explicit": [11, 12, 18, 53, 81, 91], "explicitli": [3, 26, 28, 29, 56, 234], "explod": 111, "explor": [25, 26, 27, 63, 67, 237, 239, 240, 241, 243], "expon": [26, 58, 62, 63, 65, 67, 214, 219, 220], "exponenti": [26, 28, 107, 108, 115, 116, 211, 214, 217, 238], "export": [0, 229, 230, 238], "expos": 106, "express": 3, "expressli": 3, "extend": [3, 46, 234], "extens": [0, 3, 40, 89, 92], "extent": 3, "extern": [26, 28, 107, 108, 115, 116, 217, 238], "extract": [60, 114, 145, 230, 231], "extxyt": 52, "extxyz": [26, 28, 29, 46, 51, 55, 78, 104, 121, 124, 143, 147, 159, 166, 167, 206, 214, 217, 232, 234, 237, 238], "ey": [26, 28, 29, 102, 104], "f": [3, 105, 106, 112, 113, 141, 193, 206, 211, 226, 229, 230, 233, 237, 238], "f0": [220, 221, 222, 225, 232, 237, 238], "f095": 229, "f45374e9": 229, "f87e9be8": 229, "f_max": 232, "f_min": [166, 232], "facil": 3, "factor": [11, 12, 18, 46, 52, 53, 55, 79, 81, 91, 204, 214, 234], "factori": [11, 12, 13, 14, 26, 45, 87, 89, 90, 91, 92, 174, 177, 190, 191], "faf20068": 229, "fail": 3, "failur": 3, "fair": 3, "fall": [233, 238, 240], "fallback": [94, 96, 98], "fallback_min_length": [94, 96, 98, 225, 232, 233, 234], "fals": [11, 12, 18, 26, 28, 29, 39, 45, 48, 49, 56, 58, 72, 75, 84, 87, 90, 91, 102, 107, 108, 115, 116, 121, 122, 124, 136, 138, 146, 147, 148, 161, 179, 191, 194, 197, 204, 205, 206, 210, 211, 214, 216, 217, 225, 230, 231, 232, 233, 234, 237, 238, 240], "famili": [3, 227, 228, 242], "familiar": [227, 228, 243], "fashion": [3, 14], "fast": 229, "faster": 214, "favicon": 0, "favor": 3, "fe": [105, 112, 113, 141], "feasibl": 230, "featur": [3, 157, 214, 232, 241, 243], "feder": 2, "fee": 3, "feedback": 233, "feel": 5, "few": [229, 233, 240], "ffd00c14982e": 229, "field": [0, 26, 28, 29, 45, 90, 184, 185, 186, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 232, 238], "figur": [37, 40, 233], "file": [0, 1, 3, 4, 11, 12, 14, 16, 19, 22, 26, 28, 29, 33, 35, 38, 40, 46, 49, 50, 51, 52, 55, 58, 69, 70, 71, 74, 75, 78, 84, 89, 90, 92, 102, 104, 107, 108, 114, 115, 116, 121, 122, 124, 144, 145, 147, 152, 153, 154, 155, 156, 157, 159, 161, 165, 166, 167, 182, 190, 191, 195, 196, 197, 199, 201, 202, 206, 214, 216, 217, 225, 226, 227, 228, 230, 231, 232, 233, 240, 241, 242, 243], "file_nam": [37, 40], "filenam": [84, 89, 92, 161, 201, 217], "filename_prefix": 35, "fill": 106, "filter": [56, 70, 71, 78, 122, 211, 229, 232, 233, 238, 240], "filterwarn": [225, 226], "final": [0, 3, 76, 90, 185, 186, 232, 233], "final_atoms_object": [176, 189], "find": [3, 7, 11, 12, 16, 17, 87, 90, 227, 228, 229, 230, 233, 242], "find_element_pair": 60, "fine": [211, 229], "finetun": [0, 211, 225, 235], "finish": [229, 232, 233, 234], "finit": [11, 14, 16, 19, 22, 33], "finite_basis_corr": 238, "firework": [7, 89, 92, 227, 228, 240, 242], "first": [0, 3, 14, 19, 26, 46, 87, 90, 106, 130, 131, 135, 156, 213, 217, 225, 228, 229, 232, 233, 238, 239, 240], "fit": [0, 1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 28, 29, 30, 88, 91, 107, 108, 115, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 206, 207, 208, 210, 211, 213, 214, 215, 217, 220, 221, 222, 227, 228, 231, 233, 234, 235, 238, 239, 240, 242, 243], "fit_input": [16, 121, 122, 232], "fit_input_dict": 232, "fit_kwarg": [26, 28, 29, 122, 124, 147, 152, 153, 154, 156, 157, 232, 240], "fit_kwargs_list": [11, 14, 19, 22, 225, 232], "fite": [11, 56], "fitting_job": 240, "five": [156, 213, 234], "fix": [3, 106, 204, 229, 232, 238, 239], "fixconstraint": 111, "fixtur": 198, "fl": [105, 112, 113, 141], "flag": [106, 227, 228, 242], "flat": [26, 58, 62, 63, 65, 106, 217], "flatit": 106, "flatten": [62, 63, 73, 106], "flexibl": [0, 228, 238, 240, 242], "flexibli": 238, "float": [11, 12, 14, 16, 17, 18, 19, 26, 28, 29, 33, 35, 38, 39, 45, 46, 53, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 78, 79, 81, 82, 83, 87, 90, 91, 94, 96, 98, 106, 107, 108, 110, 111, 115, 116, 121, 122, 128, 129, 130, 131, 136, 139, 140, 142, 152, 153, 154, 156, 157, 166, 167, 178, 185, 203, 204, 205, 206, 208, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222], "float32": [154, 157, 211, 232], "float64": [154, 157, 211, 214, 232], "flow": [0, 1, 3, 4, 8, 9, 11, 12, 13, 14, 16, 18, 19, 22, 24, 26, 30, 31, 33, 41, 42, 43, 45, 46, 85, 87, 88, 89, 90, 91, 92, 100, 102, 104, 118, 119, 121, 122, 168, 169, 180, 225, 226, 231, 232, 233, 234, 238, 240, 243], "flow_id": 229, "flow_output": 151, "flow_queri": 229, "flow_to_workflow": [228, 240, 242], "flowchart": 233, "fm": [105, 112, 113, 141], "fmax": 231, "folder": [1, 4, 5, 197, 225, 226, 229, 230], "follow": [0, 1, 3, 4, 5, 11, 12, 26, 28, 29, 62, 91, 156, 183, 193, 202, 213, 217, 218, 227, 228, 229, 230, 231, 232, 233, 239, 240, 242, 243], "forbid": 3, "forc": [0, 3, 11, 12, 16, 17, 26, 28, 29, 33, 38, 45, 46, 55, 56, 68, 69, 71, 74, 78, 80, 87, 90, 97, 99, 107, 108, 111, 115, 116, 121, 122, 124, 136, 138, 143, 147, 152, 153, 154, 156, 157, 166, 167, 185, 206, 209, 210, 211, 213, 214, 217, 229, 232, 233, 238, 240], "force_90_degre": [94, 98], "force_delta": [156, 213], "force_field_nam": 231, "force_label": [26, 28, 29, 56, 68, 167, 217, 238], "force_limit": [78, 233], "force_max": [11, 12, 26, 28, 29, 56, 68, 121, 122, 167, 217, 232, 238], "force_min": [11, 12, 121, 122, 232], "force_nam": 136, "force_parameter_nam": [206, 232, 237, 238], "force_tol": [26, 28, 107, 108, 115, 116, 217, 237, 238], "force_weight": 210, "forcefield": [90, 231], "forcefieldrelaxmak": [46, 90, 97, 231], "forcefieldstaticmak": [23, 26, 28, 29, 45, 46, 90, 97, 231], "forces_onli": 211, "forces_weight": [211, 232], "forget": [229, 233], "fork": 230, "form": [3, 11, 12, 132, 224, 231, 233], "format": [3, 46, 60, 106, 143, 155, 214, 230, 232, 238], "formula": [149, 204, 238], "fortran": 106, "found": [3, 227, 228, 229, 232, 234, 238, 242], "foundat": [3, 210, 211], "foundation_filter_el": 211, "foundation_model": [210, 211, 232], "foundation_model_readout": 211, "four": [156, 213], "fowler": 193, "fr": [105, 112, 113, 141], "frac_of_bcur": [26, 58, 203, 237, 238], "fraction": [26, 58, 62, 63, 65, 129, 131, 136, 203], "fragapan": [2, 227], "fragment": [26, 28, 29, 102, 104, 217, 238], "fragment_fil": [28, 29, 102, 104, 217, 238], "fragment_id": [26, 28, 29, 102, 104], "fragment_numb": [26, 28, 29, 102, 104, 217, 238], "framework": [7, 227, 228, 230, 240, 242, 243], "free": 3, "freedom": [3, 111], "frequenc": 214, "fresh": 238, "friedrich": 2, "from": [0, 1, 2, 3, 4, 5, 11, 12, 16, 18, 22, 25, 26, 28, 29, 33, 45, 46, 51, 53, 57, 58, 60, 62, 63, 65, 69, 74, 75, 76, 78, 80, 82, 87, 88, 90, 91, 106, 107, 108, 114, 115, 116, 122, 148, 151, 154, 156, 166, 183, 186, 193, 196, 201, 202, 210, 214, 216, 217, 218, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 241, 242, 243], "from_dict": 201, "from_directori": [89, 92], "from_fil": [201, 217, 225, 226, 238, 240], "from_project_nam": 229, "from_relax_mak": 225, "front": 230, "fsf": 3, "fssl": [227, 228, 242], "fulfil": 3, "full": [0, 3, 136, 229, 233], "full_path_on_the_clust": 232, "fulli": [7, 72, 90, 106, 146, 227], "function": [0, 1, 3, 4, 7, 11, 12, 15, 22, 26, 27, 34, 36, 47, 56, 58, 59, 62, 65, 67, 72, 93, 95, 103, 109, 123, 125, 137, 152, 153, 154, 156, 157, 173, 180, 181, 193, 209, 210, 211, 213, 214, 219, 220, 227, 228, 229, 232, 233, 234, 237, 242], "fundament": 3, "further": [3, 227, 228, 229, 230, 232, 234, 242], "futur": [1, 3, 4, 87, 90, 91, 232], "g": [1, 4, 11, 12, 18, 26, 28, 29, 53, 56, 69, 70, 71, 74, 89, 91, 92, 102, 104, 106, 111, 129, 131, 132, 136, 149, 153, 154, 157, 186, 193, 204, 229, 230, 232, 233, 234, 240], "ga": [105, 112, 113, 141], "gallant": 193, "gamma": [11, 12, 18, 26, 28, 29, 45, 53, 79, 91], "ganos": 193, "gap": [0, 11, 12, 16, 26, 28, 29, 33, 37, 38, 46, 51, 56, 69, 74, 78, 80, 90, 107, 108, 115, 116, 122, 124, 139, 145, 147, 148, 161, 162, 206, 207, 212, 217, 220, 221, 222, 225, 229, 233, 235, 237, 238, 240, 243], "gap_fil": [16, 206, 231, 232, 237, 238], "gap_fitting_tutori": [69, 74, 78, 80], "gap_hyp": 147, "gap_parameter_dict": 148, "gapgeneralset": 207, "gapset": [212, 232], "garbag": 106, "gardner": 227, "gate": 214, "gaussian": [26, 58, 87, 92, 147, 210, 219, 220, 238, 240], "gcc": [227, 228, 242], "gcm3": 149, "gd": [105, 112, 113, 141], "ge": [105, 112, 113, 141], "gener": [0, 3, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 35, 37, 38, 39, 40, 42, 43, 46, 53, 54, 58, 60, 62, 63, 66, 67, 69, 70, 71, 74, 76, 79, 81, 82, 85, 87, 88, 89, 90, 91, 92, 95, 100, 102, 104, 106, 107, 108, 115, 116, 123, 156, 166, 174, 177, 180, 182, 183, 190, 191, 198, 206, 207, 211, 213, 217, 225, 227, 228, 229, 235, 237, 239, 241, 242, 243], "generalis": 65, "generalset": 232, "generate_frequencies_eigenvector": [87, 90, 229, 231], "generate_frequencies_eigenvectors_kwarg": [87, 90, 231], "generate_frequencies_eigenvectors_mp": 229, "generate_mc_rattled_structur": 76, "generate_phonon_displacements_mp": [229, 234], "generate_randomized_structures_mp": [229, 234], "generate_training_data_for_test": 46, "generated_struct_numb": [26, 28, 29, 102, 217, 237, 238], "genert": 226, "geom": [176, 189], "geometri": 234, "georg": [2, 193, 227, 243], "gerit": 193, "get": [3, 5, 7, 46, 54, 67, 89, 92, 111, 150, 191, 227, 228, 230, 232, 233, 242], "get_flows_info": 229, "get_indic": 111, "get_input_set": 190, "get_iso_atom": 233, "get_jobs_doc": 229, "get_jobstor": 229, "get_number_of_speci": 60, "get_removed_dof": 111, "get_speci": 60, "get_species_z": 60, "get_structure_by_material_id": [229, 231, 232, 233], "get_supercell_s": [87, 90], "get_supercell_size_kwarg": [87, 90], "gfortran": [227, 228, 242], "gga": [205, 225, 234], "ghcr": 0, "git": [5, 227, 228, 229, 232, 242], "github": [0, 1, 4, 5, 69, 74, 78, 80, 166, 227, 228, 229, 242], "give": [1, 3, 4, 136, 214, 223, 230, 233, 235], "given": [3, 13, 16, 57, 66, 74, 77, 89, 92, 106, 113, 141, 175, 176, 188, 189, 199, 210, 214, 231, 232, 234], "glue": [0, 11, 12, 122, 124, 147, 159, 161, 232], "glue_file_path": [11, 12, 122, 124, 147], "glue_nam": 159, "glue_xml": [11, 12, 122, 124, 147, 159, 161, 232], "gnu": 3, "go": 233, "good": [65, 214, 234], "goodal": 193, "govern": 3, "gp_file": [206, 232, 237, 238], "gpa": [62, 63], "gpl": 3, "gpu": [124, 156, 164, 210, 211, 227, 228, 232], "gpu_identifier_indic": [124, 156, 164], "gpumd": [156, 227, 228], "gram": 149, "grant": 3, "graph": [153, 210, 233, 240], "graph_sourc": 233, "grati": 3, "great": 240, "greater": [136, 238], "greatest": 3, "green": 229, "grid_dens": 234, "gridfsstor": 230, "group": [2, 26, 28, 29, 51, 90, 107, 117, 214, 217, 227], "gst": 65, "guarante": [3, 111, 234, 238], "guha": 193, "gui": 3, "guid": [5, 7, 63, 67, 227, 230, 232, 242, 243], "guidanc": 237, "guidelin": 2, "gz": [49, 227, 228, 242], "g\u00e1bor": [63, 67], "h": [105, 112, 113, 141, 193, 229, 238], "ha": [0, 3, 5, 14, 16, 19, 49, 50, 106, 183, 193, 202, 210, 218, 225, 230, 232, 234, 239, 240], "had": 3, "half": 127, "handl": [0, 11, 12, 16, 17, 26, 56, 60, 75, 87, 90, 107, 117, 136, 152, 154, 157, 217, 227, 228, 234, 239], "handler": [45, 225], "hard": 232, "hardcod": [0, 1, 4], "harmon": [26, 58, 87, 90, 153, 210, 214, 219, 220, 227, 231], "hautier": 193, "have": [1, 3, 4, 5, 11, 14, 19, 22, 26, 28, 29, 51, 62, 63, 75, 90, 102, 104, 204, 226, 227, 228, 229, 230, 231, 232, 233, 238, 240, 242, 243], "haven": 183, "he": [105, 112, 113, 141], "heavili": [90, 228, 239], "help": [1, 4, 90, 227, 228, 229, 231, 233], "henc": 238, "here": [7, 26, 28, 29, 45, 90, 106, 225, 226, 227, 228, 229, 230, 231, 232, 233, 240, 242], "hereaft": 3, "hexa": 204, "hf": [105, 112, 113, 141], "hg": [105, 112, 113, 141], "hidden": [156, 157, 211, 213, 214], "hidden_dim": 232, "hidden_irrep": [154, 211, 232, 240], "high": [1, 4, 7, 26, 28, 29, 56, 87, 90, 107, 108, 115, 116, 227, 228, 232, 234, 238, 239], "higher": 0, "highli": 239, "highlight": [76, 229], "hint": [0, 1, 4], "hinuma": [87, 90], "hiphiv": [0, 76], "histogram": [26, 46, 58, 62, 63, 65, 217, 238, 239], "hjorth": 111, "ho": [105, 112, 113, 141], "holder": 3, "home": [202, 218, 229, 230], "homogen": 106, "hook": [0, 1, 4], "hookean": [0, 26, 28, 107, 108, 115, 116, 217], "hookean_para": [26, 28, 107, 108, 115, 116, 217, 237, 238], "hookean_repul": [26, 28, 107, 108, 115, 116, 217, 237, 238, 240], "hope": 3, "horton": 193, "host": [1, 3, 4, 229, 230], "hostnam": [57, 230], "household": 3, "how": [2, 3, 106, 214, 227, 229, 230, 232, 233, 234, 238], "howev": [0, 3, 5, 26, 28, 29, 87, 90, 102, 104, 217, 233, 238, 239, 240], "hpc": [227, 228, 229], "html": [3, 69, 74, 76, 78, 80, 153, 166], "http": [0, 1, 3, 4, 5, 63, 67, 69, 74, 76, 78, 80, 122, 124, 153, 156, 166, 227, 228, 229, 230, 242], "huber": [211, 232], "huber_loss": 210, "hull": [26, 28, 29, 56, 65, 126, 127, 128, 129, 132, 134, 136, 158, 217, 237, 238], "hull_point": 158, "hundr": 226, "hyper": [77, 163, 233], "hyper_para_loop": [11, 12, 232], "hyperpara_opt": [122, 124], "hyperparamet": [11, 12, 16, 122, 124, 147, 148, 152, 153, 154, 156, 157, 163, 206, 207, 208, 210, 211, 212, 213, 214, 217, 220, 221, 222, 232, 238, 240], "hyperplan": 134, "hypothet": 3, "i": [0, 1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 16, 18, 19, 22, 26, 28, 29, 33, 37, 38, 40, 45, 46, 48, 50, 51, 53, 56, 57, 58, 62, 63, 64, 65, 75, 76, 77, 79, 81, 84, 87, 89, 90, 91, 92, 94, 98, 102, 104, 105, 106, 107, 108, 111, 112, 113, 115, 116, 121, 122, 124, 134, 135, 141, 142, 149, 152, 154, 156, 157, 167, 175, 176, 179, 180, 188, 189, 190, 193, 194, 204, 210, 213, 214, 216, 217, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 243], "ibenchmark_structur": 16, "ibrion": [225, 234], "id": [1, 4, 5, 11, 13, 14, 16, 17, 18, 19, 22, 23, 33, 38, 91, 229, 231, 232, 233, 234], "idea": [1, 3, 4, 7, 227, 234], "ideal": 240, "identifi": [3, 26, 28, 29, 102, 104, 156, 164, 233, 238], "idth": 219, "ifort": [227, 228, 242], "ignor": [0, 136, 225, 226, 229, 234], "ii": 238, "illustr": [106, 240], "imag": [0, 5, 64, 106], "imaginari": [38, 106], "imagmod": 233, "imagmodesdft": 35, "imagmodesml": 35, "img_format": 40, "implement": [0, 3, 87, 90, 91, 227], "impli": [3, 106, 180], "import": [3, 225, 226, 227, 228, 229, 231, 232, 233, 234, 238, 240, 242], "impos": 3, "impress": 13, "improv": [0, 7, 28, 214, 240], "in_fil": [69, 70, 71, 74, 144], "inabl": 3, "inaccur": 3, "inc": 3, "incar": [190, 205, 229, 234], "incar_set": 229, "incas": 5, "incident": 3, "includ": [0, 3, 11, 12, 14, 19, 22, 26, 27, 28, 29, 38, 45, 58, 62, 102, 104, 121, 122, 124, 143, 148, 153, 166, 174, 177, 201, 206, 210, 214, 217, 224, 227, 228, 231, 232, 233, 234, 238, 240, 242], "include_dim": [26, 28, 29, 217, 237, 238], "include_forc": 143, "include_isolated_atom": [26, 28, 29, 217, 237, 238], "include_line_graph": 210, "include_soap": 148, "include_stress": [143, 153, 210, 232], "include_three_bodi": 148, "include_two_bodi": 148, "inclus": 3, "incompat": 3, "inconsist": [229, 233], "incorpor": [2, 3], "increas": [94, 98, 154, 211, 233], "ind": 111, "indemnif": 3, "independ": [3, 26, 217], "index": [0, 26, 28, 29, 107, 108, 115, 116, 217, 229], "index_shuffl": 111, "indic": [3, 11, 12, 18, 53, 79, 91, 111, 124, 148, 156, 164, 204, 217, 238], "individu": [3, 26, 227, 234, 240], "indivud": [28, 29, 102, 104], "induc": 154, "industri": 3, "infer": [156, 213, 214], "influenc": [225, 232, 238], "info": [77, 127, 128, 129, 132, 136, 214, 229, 230, 234], "inform": [0, 3, 5, 7, 22, 26, 28, 29, 58, 75, 106, 138, 186, 216, 219, 220, 221, 222, 227, 229, 230, 232, 233, 240], "infring": 3, "inherit": [26, 28, 29, 45, 234], "initi": [0, 1, 3, 4, 26, 27, 28, 29, 90, 91, 106, 214, 217, 226, 227, 229, 230, 233, 237, 238, 239, 240, 243], "initial_kb_temp": 26, "initial_kt": [28, 217, 237, 238], "initial_selection_en": [26, 28, 29, 102, 217, 237, 238], "inizan": 193, "inp": 197, "input": [0, 22, 26, 28, 29, 45, 46, 62, 63, 69, 74, 77, 87, 88, 89, 92, 121, 144, 148, 152, 154, 155, 157, 174, 177, 184, 186, 190, 191, 195, 197, 217, 227, 228, 234, 239, 240, 241, 243], "input_list": 73, "input_set": [184, 197], "input_set_gener": [89, 92, 174, 177, 225, 229, 234, 238], "inputdoc": 186, "insid": [1, 3, 4, 134, 135, 229, 230], "inspir": 239, "instal": [0, 1, 3, 4, 7, 232, 243], "instanc": [48, 179, 194, 201, 230], "instanti": [106, 229, 240], "instead": [0, 3, 11, 122, 124, 147, 159, 161, 232, 233, 239], "institut": 2, "instruct": [0, 227, 228, 235, 242], "int": [11, 12, 14, 16, 18, 19, 23, 26, 28, 29, 40, 45, 46, 48, 53, 55, 58, 60, 62, 63, 65, 66, 67, 76, 79, 81, 82, 91, 94, 96, 98, 102, 104, 106, 107, 108, 111, 114, 115, 116, 117, 122, 124, 139, 142, 147, 152, 153, 154, 156, 157, 160, 161, 162, 164, 179, 194, 203, 205, 206, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 222], "int16": 106, "int_": 106, "intact": [3, 26, 28, 29, 102, 104], "integ": [106, 156, 213, 229], "integr": [0, 227, 238], "intend": [3, 111], "intens": 210, "intent": 3, "interact": [0, 3, 106, 139, 142, 152, 153, 157, 210, 229], "interatom": [7, 11, 12, 64, 76, 107, 108, 227, 233, 243], "interchang": 3, "interest": [3, 231, 232, 240], "interf": 3, "interfac": [0, 3, 7, 106, 227, 228, 238, 240, 242], "intermedi": 214, "intern": [0, 63, 67, 90, 234], "internet": [210, 232], "interpret": [3, 106], "interrupt": [26, 216, 238, 241, 243], "intersect": 130, "interv": [231, 234], "intial": 240, "intim": 3, "introduc": 227, "introduct": 230, "invalid": 3, "invariant_lay": [157, 214, 232], "invariant_neuron": [157, 214, 232], "invok": [0, 240], "involv": [28, 122, 124, 142, 227, 228, 229, 233], "io": [69, 74, 78, 80, 166, 214, 227], "ionic": [46, 50], "ip": 231, "ir": [105, 112, 113, 141], "irrep": [157, 211], "irrevoc": 3, "is_intens": 210, "isif": 225, "ismear": [205, 225, 234, 237], "iso_atoms_dir": 232, "isoatomstaticmak": [11, 12, 21, 234], "isol": [11, 12, 21, 26, 28, 29, 45, 51, 56, 58, 62, 63, 65, 88, 89, 107, 108, 115, 116, 122, 124, 129, 132, 136, 152, 157, 211, 216, 217, 225, 232, 233, 234, 238], "isolated_atom": [45, 232], "isolated_atom_energi": [26, 28, 29, 51, 56, 58, 62, 63, 65, 107, 108, 115, 116, 122, 124, 129, 132, 136, 152, 157, 216, 238, 240], "isolated_atom_mak": [11, 12, 21, 88, 225, 232, 234], "isolated_speci": 45, "isolatedatom": 232, "isolatedatom_box": [26, 28, 29, 45, 217, 237, 238], "isolatedatomenergymak": 88, "ispin": [225, 234], "issu": [0, 7], "isym": [205, 225, 237], "item": [3, 63, 67, 106], "items": 106, "iter": [0, 11, 12, 14, 18, 19, 20, 26, 27, 28, 29, 53, 58, 62, 72, 76, 91, 106, 107, 108, 111, 113, 115, 141, 146, 175, 176, 188, 189, 217, 224, 232, 235, 238, 239, 240, 243], "iteration_flow": 225, "iteration_index": [107, 108, 115], "iterativecompletedftvsmlbenchmarkworkflow": [225, 232, 233], "ith": 16, "its": [3, 26, 28, 29, 45, 77, 106, 117, 165, 182, 232, 233, 234, 238], "itself": [3, 20, 23], "j": [0, 26, 28, 29, 87, 90, 107, 108, 115, 116, 122, 124, 193, 208, 212, 217, 227, 228, 229, 230, 232, 234, 239, 242], "j_ace": [152, 212], "jace_hyp": 152, "jaceset": 212, "jageo": [0, 227], "jain": 193, "janin": [2, 243], "jc": 229, "jcp": [122, 124], "jena": 2, "jf": 229, "jfremot": 229, "jitter": 206, "jl": 232, "job": [0, 1, 4, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 35, 36, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 85, 89, 90, 91, 92, 94, 95, 100, 104, 105, 106, 107, 108, 118, 119, 120, 124, 137, 168, 169, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 191, 217, 225, 226, 227, 228, 230, 231, 232, 233, 234, 238, 240, 242], "job1": 229, "job2": 229, "job_collect": 229, "job_dict": 229, "job_doc": 229, "job_list": 225, "job_opt": 225, "job_output": 52, "job_stor": [230, 231, 232], "jobcontrol": 229, "jobflow": [7, 225, 226, 227, 228, 230, 231, 232, 233, 240, 242, 243], "jobflow_config_fil": 230, "jobflow_remot": [228, 229, 232, 240, 242], "jobid": 229, "joe": 2, "joint": 2, "jointli": 227, "journal": 230, "jsanit": 231, "json": [0, 114, 139, 147, 152, 154, 156, 157, 175, 188, 202, 218, 230, 231, 232, 238], "julia": [5, 152, 160, 227, 228, 232, 238, 242], "julialang": [227, 228, 242], "jump": 106, "jun": 228, "june": 3, "jupyt": 224, "just": [1, 4, 214, 229], "k": [39, 87, 90, 105, 111, 112, 113, 141, 193, 225, 238], "kaplan": 193, "kb_temp": 26, "kbar": 185, "keep": [3, 26, 28, 29, 56, 136, 211, 229, 234], "keep_checkpoint": 211, "keep_isolated_atom": 211, "keep_symmetri": [26, 28, 107, 108, 115, 116, 217, 237, 238], "kei": [3, 26, 28, 29, 45, 51, 75, 77, 89, 92, 102, 104, 127, 128, 129, 132, 136, 147, 152, 153, 154, 156, 157, 190, 201, 214, 217, 229, 233, 238, 239, 240], "kept": 65, "kernel": [3, 26, 58, 62, 63, 65, 67, 219, 220], "kernel_exp": [26, 58, 62, 63, 65, 67], "keyword": [11, 12, 14, 16, 19, 22, 26, 28, 29, 46, 87, 89, 90, 91, 92, 97, 106, 122, 124, 147, 152, 153, 154, 156, 157, 191, 228, 229, 232, 238, 240, 242], "kick": [228, 241], "kill": 229, "kind": [3, 87, 90, 232], "kingsburi": 193, "know": [2, 3], "knowingli": 3, "knowledg": [3, 243], "ko": 153, "kokkos_arch_zen3": [227, 228, 242], "kokkos_enable_openmp": [227, 228, 242], "kpar": [205, 237], "kpath_schem": [87, 90], "kpoint": [87, 90], "kpoint_mp_spac": 238, "kr": [105, 112, 113, 141], "kspace": [26, 28, 29, 45, 205, 225, 237], "kt": [28, 58, 62, 63, 65], "kuner": 193, "kwarg": [26, 127, 128, 138, 191], "l": [63, 67, 227, 230], "l1": [156, 213], "l1_loss": 210, "l467": 229, "l_max": [26, 58, 156, 157, 213, 214, 219, 220, 225, 232, 237, 238], "la": [105, 112, 113, 141], "lab": 183, "label": [26, 28, 29, 45, 51, 56, 58, 62, 63, 65, 68, 69, 74, 83, 91, 114, 121, 122, 145, 155, 167, 210, 217, 230, 232, 237, 240, 241, 243], "laboratori": [183, 193, 202, 218], "laechg": 225, "lambda_": [156, 213], "lambda_1": [156, 213], "lambda_f": [156, 213], "lambda_v": [156, 213], "lammp": [0, 5, 114], "lammps_except": [227, 228, 242], "lammps_instal": [227, 228, 242], "languag": 3, "larg": [152, 167, 180, 232, 233, 238, 239], "larger": [3, 11, 12, 18, 53, 76, 91, 154, 227, 233, 239], "larsen": 111, "lasph": 237, "last": [0, 26, 154, 216], "later": [3, 214, 241], "latest": [26, 211, 229], "latimer_munro": [87, 90], "lattic": [26, 28, 29, 45, 99, 204, 217, 231, 233], "launchag": 230, "launchpad": [228, 240, 242], "law": 3, "lawrenc": [183, 193, 202, 218], "lawsuit": 3, "layer": [153, 154, 156, 157, 210, 211, 213, 214], "layout": 0, "lcalcpol": 191, "lcharg": [205, 225, 237], "lead": [76, 229], "learn": [7, 11, 12, 25, 26, 56, 63, 67, 107, 108, 157, 210, 211, 214, 227, 235, 238, 239, 240, 243], "learning_r": [157, 214, 232], "least": [3, 232], "leav": [106, 225], "legal": 3, "legend": [69, 74], "length": [87, 90, 94, 96, 98, 153, 157, 238], "lepsilon": 191, "less": [227, 228], "lesser": 3, "let": 232, "lett": [227, 239], "level": [11, 12, 106, 214, 229, 237, 238], "lgfortran": [227, 228, 242], "lgpl": 3, "li": [105, 112, 113, 141, 193, 231, 232], "liabil": 3, "liabl": 3, "lib": [202, 218, 227, 228, 242], "libatom": [69, 74, 78, 80], "libpac": [227, 228, 242], "librari": [3, 5, 153, 227, 228, 230], "licens": [0, 63, 67, 153, 183, 202, 218, 227], "license": 3, "licensor": 3, "licl": [229, 233], "lightn": 0, "lightweight": 240, "like": [2, 3, 5, 16, 225, 229, 230, 231, 232, 233, 234, 240], "likewis": 3, "limit": [3, 26, 28, 78, 107, 108, 115, 116, 217, 230, 232, 238, 239], "line": [3, 130, 210, 230, 233], "linear": [56, 65, 127, 128, 133, 136, 152, 217, 227, 228, 232, 237, 238, 242], "linear_hul": [26, 136], "linit": 0, "link": [2, 3, 7, 227], "linn": 193, "lint": 0, "linter": [1, 4], "linux": 229, "lipai": 166, "list": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 35, 39, 45, 46, 51, 53, 56, 58, 60, 62, 63, 65, 67, 68, 72, 73, 75, 78, 79, 80, 81, 88, 91, 96, 98, 102, 104, 107, 108, 113, 114, 115, 116, 117, 121, 122, 124, 127, 129, 131, 132, 134, 136, 139, 141, 142, 143, 147, 148, 150, 151, 156, 163, 164, 166, 175, 176, 185, 188, 189, 197, 209, 213, 214, 217, 229, 230, 231, 232, 233, 240], "liter": [28, 29, 58, 107, 108, 111, 115, 122, 197, 204, 210, 211, 214, 215, 217], "litig": 3, "littl": 134, "liu": [2, 227, 243], "live": 233, "lmp": [227, 228, 242], "load": [201, 202, 227, 228, 229, 230, 231, 238], "load_default_set": 202, "loadfn": 231, "lobster": [229, 230], "lobster_cmd": [229, 230], "local": [1, 3, 4, 154, 210, 230, 232, 233, 234], "local_host": 229, "local_machin": 232, "local_work": 232, "localhost": 230, "locat": [152, 153, 154, 157, 230], "log": [96, 107, 108, 115, 116, 153, 165, 210, 211, 214, 229, 230], "log_batch_freq": 214, "log_epoch_freq": 214, "log_prefix": 165, "logappend": 230, "logdir": 230, "login": [229, 230], "login_node_nam": 230, "long": [3, 5, 94, 98, 229], "longer": [26, 28, 29, 102, 104], "look": [1, 4, 226, 227, 230, 231], "loop": [11, 16, 232, 240], "loptic": 225, "lorbit": 225, "loss": [3, 154, 156, 209, 210, 211, 213, 214, 232], "loss_coeff": 214, "loss_param": 210, "losscoeff": 214, "lost": 229, "lot": [228, 231], "low": [26, 28, 63, 106, 107, 108, 115, 116, 232, 238, 239], "lower": [127, 214, 217, 232], "lower_half_hull_point": 127, "lpad": [228, 230, 240, 242], "lplane": [205, 237], "lr": [105, 112, 113, 141, 210, 211, 214, 232], "lr_scheduler_factor": 214, "lr_scheduler_nam": 214, "lr_scheduler_pati": 214, "lreal": [205, 225, 237], "lrschedul": 210, "lscalapack": [205, 237], "lsqr": 152, "lu": [105, 112, 113, 141], "lv": [105, 112, 113, 141], "lvtot": 225, "lwave": [205, 225, 237], "m": 193, "m3gnet": [0, 26, 28, 29, 107, 108, 115, 116, 122, 124, 153, 156, 183, 210, 212, 217, 235, 238, 240, 243], "m3gnet_hyp": 153, "m3gnet_result": 210, "m3gnetset": 212, "mace": [0, 26, 28, 29, 107, 108, 115, 116, 122, 124, 154, 155, 163, 211, 212, 217, 235, 238, 240, 243], "mace_fin": 232, "mace_hyp": 154, "mace_model": 211, "maceset": 212, "machin": [3, 7, 11, 12, 56, 107, 108, 227, 230, 235, 238, 240, 243], "machine_learning_fit": [228, 229, 232, 233, 242], "made": [0, 3], "magmom": 210, "magmom_target": 210, "magmom_weight": 210, "magnet": [84, 210], "mai": [3, 107, 108, 115, 116, 229, 238], "mail": [3, 230], "mail_typ": [228, 229, 232, 240, 242], "mail_us": [228, 229, 232, 240, 242], "main": [0, 227, 228, 232, 242], "mainli": [1, 4, 230], "maintain": 3, "major": [3, 26, 28, 29, 45, 106], "make": [0, 3, 11, 13, 14, 26, 33, 45, 46, 69, 74, 78, 80, 87, 88, 89, 90, 91, 92, 102, 104, 121, 122, 134, 136, 174, 180, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 242], "make_from_ml_model": 90, "make_kwarg": 90, "maker": [0, 1, 4, 11, 12, 13, 14, 16, 17, 18, 21, 23, 26, 28, 29, 33, 45, 46, 87, 88, 89, 90, 91, 92, 97, 99, 102, 104, 121, 122, 172, 173, 174, 177, 180, 225, 229, 234], "manag": [190, 227, 229, 232, 240, 243], "mandatori": [26, 152, 157, 213, 216, 227, 228], "mani": [90, 106, 226, 233, 238], "manifest": 0, "manipul": 186, "manner": [3, 19], "manual": [0, 1, 4, 90, 229, 230], "manufactur": 3, "map": [26, 152, 156, 157, 214, 216], "march": 3, "mark": 3, "marker": 232, "mask": 3, "mass": 149, "match": [96, 111], "mater": [227, 239], "materi": [2, 3, 7, 11, 14, 16, 17, 18, 19, 22, 23, 33, 38, 87, 90, 91, 153, 183, 193, 227, 228, 232, 233, 238, 239, 242, 243], "materialsmodel": 76, "materialsproject": [1, 4, 183, 202, 218], "materialsvirtuallab": 183, "matgenix": 229, "matgl": [153, 210], "matplotlib": [37, 40, 46], "matric": 23, "matrix": [46, 53, 54, 90, 98], "matrix3d": [46, 53, 54], "matter": 239, "max": [11, 12, 14, 18, 19, 26, 53, 81, 91, 136, 156, 217], "max_atom": [94, 96, 98, 225, 232, 233, 234], "max_energi": 136, "max_epoch": [153, 210, 214, 232], "max_iter": [14, 19, 225, 232, 233], "max_iteration_numb": [26, 28, 217, 237, 238], "max_l": [153, 210, 232], "max_length": [87, 90, 94, 96, 98, 225, 232, 233, 234], "max_n": [153, 210, 232], "max_num_epoch": [211, 232], "max_scf_cycl": 238, "max_step": [26, 28, 107, 108, 115, 116, 217, 237, 238], "maxim": [68, 94, 96, 98, 121, 167], "maximum": [11, 12, 14, 18, 19, 26, 28, 29, 46, 53, 55, 56, 58, 62, 63, 65, 79, 91, 94, 96, 98, 107, 108, 115, 116, 122, 153, 156, 157, 203, 210, 211, 213, 214, 217, 219, 220, 232, 233], "mayb": [225, 232], "mc": [11, 12, 18, 53, 76, 91, 105, 112, 113, 141], "mcdermott": 193, "mcp": 65, "md": [0, 58, 105, 111, 112, 113, 141, 176, 189, 239], "md5sum": [227, 228, 242], "mean": [3, 11, 12, 35, 38, 39, 40, 121, 122, 167, 210, 227, 228, 242], "meaning": 26, "measur": 3, "medium": 3, "meet": 3, "memori": [13, 26, 28, 58, 102, 104, 106, 232, 235], "menu": 3, "merchant": 3, "mere": 3, "merg": [0, 3, 241], "mermaid": 233, "mesh": 238, "messag": 229, "met": [3, 234], "metagga": 237, "method": [1, 3, 4, 16, 26, 28, 33, 39, 58, 60, 62, 63, 106, 107, 108, 115, 116, 136, 180, 190, 203, 217, 220, 221, 222, 229, 232, 238, 239, 240], "methodologi": 239, "metric": [0, 1, 4, 11, 12, 22, 35, 38, 214, 233, 235, 243], "metrics_compon": 214, "metrics_kei": 214, "mf": [225, 226], "mfa": 229, "mg": [105, 112, 113, 141], "micro": [228, 232, 242], "micromamba": [0, 202, 218], "might": [3, 11, 87, 90, 91, 229, 230, 232, 233], "min": [11, 12, 18, 26, 53, 81, 91, 136, 217], "min_atom": [94, 96, 98, 225, 232, 233, 234], "min_dist": [11, 12, 18, 53, 64, 76, 79, 91], "min_length": [87, 90, 94, 96, 98, 225, 231, 232, 233, 234], "minim": [11, 12, 121, 122, 166, 240], "minimum": [11, 12, 18, 28, 29, 46, 53, 55, 56, 64, 76, 79, 87, 90, 91, 94, 96, 98, 111, 204, 210, 234, 240], "minsep": [204, 237], "mir": 214, "mirror": 214, "misc": [0, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 202, 218, 238], "miscellan": 0, "misrepresent": 3, "miss": [0, 5, 210, 231], "mix": [121, 214, 231, 238], "mkdir": [227, 228, 229, 230, 242], "ml": [7, 9, 10, 11, 12, 16, 17, 18, 26, 32, 33, 35, 37, 38, 39, 40, 46, 47, 86, 88, 90, 91, 93, 120, 122, 169, 225, 227, 232, 233, 235, 238, 239, 241, 243], "ml_b": [37, 39, 40], "ml_imag_mod": 38, "ml_model": [11, 12, 16, 33, 37, 38, 90, 232], "ml_path": 16, "ml_phonon_b": 38, "ml_phonon_maker_kwarg": 16, "ml_phonon_task_doc": [33, 231], "ml_script": 166, "mlip": [0, 11, 12, 14, 16, 19, 22, 26, 28, 29, 46, 69, 70, 71, 74, 90, 97, 107, 108, 115, 116, 122, 123, 124, 139, 152, 154, 156, 157, 159, 212, 216, 217, 224, 227, 228, 231, 233, 234, 235, 237, 241, 242, 243], "mlip_fit": 232, "mlip_hyp": [11, 122, 124, 147, 152, 153, 154, 157, 217, 232, 237, 238, 240], "mlip_path": [26, 28, 29, 107, 108, 115, 116, 156, 159, 216, 233, 238, 240], "mlip_typ": [26, 28, 29, 107, 108, 115, 116, 122, 124, 217, 232, 237, 238, 240], "mlipfitmak": [232, 240], "mliphyp": 217, "mlp": 210, "mlphononmak": [16, 97, 232], "mlpotentialfit": 122, "mn": [105, 112, 113, 141], "mo": [105, 112, 113, 141], "mock": [198, 225, 226], "mock_castep": [194, 195, 196, 197, 198, 199], "mock_vasp": [225, 226], "mode": [0, 3, 38, 106, 156, 211, 213, 229, 232], "model": [0, 3, 11, 12, 16, 26, 27, 28, 29, 33, 37, 38, 46, 56, 90, 97, 107, 108, 115, 116, 122, 124, 147, 152, 153, 154, 156, 157, 163, 184, 185, 186, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 232, 234, 237, 238, 239, 241, 243], "model_dtyp": 214, "model_dump": 232, "model_typ": [156, 213], "modif": [3, 227], "modifi": [1, 3, 4, 138, 183, 202, 218, 240], "modul": [0, 1, 4, 8, 9, 24, 30, 31, 41, 42, 43, 85, 100, 106, 118, 119, 168, 169, 170, 171, 192, 227, 229, 230, 233, 240], "modular": 193, "moduleref": 76, "mohanakrishnan": 193, "mol": 149, "molar": 149, "mole": [26, 65, 129, 131, 136, 149], "molecul": [26, 28, 29, 102, 104, 185, 238], "molecular": 238, "moment": [11, 84, 210], "momenta": 111, "mongo": 230, "mongod": 230, "mongodb": [0, 7, 11, 121, 227, 228, 229, 231, 242, 243], "mongosh": 230, "mongostor": 230, "monkeypatch": 198, "mono": 204, "mont": [11, 12, 18, 53, 76, 91, 234], "monti": 231, "monty_encoded_json_doc": 231, "more": [0, 3, 5, 76, 106, 156, 213, 227, 228, 229, 230, 232, 233, 234, 238, 240, 242], "moreov": 3, "morrow": [2, 227], "morrowchem": 0, "mos2": [28, 29, 56, 129, 131, 132, 136], "most": [3, 62, 232, 238], "move": [0, 76, 106, 211, 214, 229], "mp": [13, 210, 211, 225, 229, 231, 233, 234, 235], "mp_api": [229, 231, 232, 233], "mp_id": [11, 13, 14, 16, 17, 18, 19, 23, 38, 91, 225, 231, 232, 233, 234], "mpbenchmark": [225, 231, 232, 233, 234], "mpbm": [231, 232, 233], "mpi": [227, 228, 238, 242], "mpid": [225, 229, 231, 232, 233, 234], "mpirun": [230, 238], "mpr": [231, 232, 233], "mprester": [229, 231, 232, 233], "mr": [149, 229], "mse_loss": 210, "msm": [227, 228, 242], "msonabl": 201, "mt": [105, 112, 113, 141], "mtg": [227, 228, 242], "much": [229, 239], "multi": [26, 136, 211, 230], "multidimension": 106, "multifactor": 229, "multihead": 211, "multiheads_finetun": [211, 232], "multipl": [5, 7, 26, 28, 107, 117, 157, 204, 217, 227, 234, 238], "multipli": [94, 98], "must": [3, 11, 12, 18, 26, 28, 29, 45, 53, 56, 87, 90, 91, 102, 104, 113, 141, 156, 175, 176, 188, 189, 213, 214, 238, 240], "mutabl": [113, 141, 175, 176, 188, 189], "mxcl": 230, "my_fil": [89, 92], "my_fwork": 230, "my_launchpad": 230, "mycastepmak": 180, "myuseradmin": 230, "n": [5, 20, 76, 105, 112, 113, 126, 129, 131, 134, 141, 211, 214, 227, 228, 229, 230, 240, 242], "n_atom": 149, "n_iter": [11, 12, 18, 53, 76, 91], "n_max": [26, 58, 156, 213, 219, 220, 225, 232, 237, 238], "n_spars": [11, 12, 220, 221, 222, 225, 231, 232, 233, 237, 238], "n_sparse_list": [11, 12, 232], "n_speci": 66, "n_structur": [11, 12, 18, 46, 53, 76, 79, 81, 82, 91, 232, 234], "n_train": 214, "n_val": 214, "na": [105, 112, 113, 141], "naik": [0, 2, 193, 227, 243], "name": [0, 1, 3, 4, 11, 12, 13, 14, 19, 22, 26, 28, 29, 33, 37, 40, 45, 46, 51, 78, 84, 87, 88, 89, 90, 91, 92, 96, 102, 104, 107, 108, 115, 116, 121, 122, 124, 127, 128, 129, 132, 136, 143, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 174, 177, 197, 201, 206, 210, 211, 214, 217, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240, 242], "name_filt": [228, 232, 242], "nan": 106, "narrow": 239, "nat": 227, "natascia": 2, "nation": [183, 193, 202, 218], "natom": 238, "natur": 3, "nb": [105, 112, 113, 139, 141, 142], "nblock": 210, "nbyte": 106, "ncore": [205, 237], "nd": [65, 105, 112, 113, 126, 134, 141], "ndarrai": [80, 106, 132, 133, 158, 210], "ndim": 106, "ne": [105, 112, 113, 141], "nearli": 90, "neat": [227, 228, 242], "neaton": 193, "necessari": [3, 73, 90, 225, 226, 227, 228, 229, 240], "need": [1, 3, 4, 5, 65, 106, 136, 148, 156, 213, 214, 226, 227, 228, 229, 230, 232, 233, 234, 238, 240, 242], "neighbor": [211, 214], "neither": 3, "nelm": [205, 237], "nep": [0, 28, 29, 107, 108, 115, 122, 124, 156, 164, 212, 213, 227, 228], "nep_hyp": 156, "nepset": [156, 212], "nequip": [0, 26, 28, 29, 107, 108, 115, 116, 122, 124, 154, 157, 165, 212, 214, 215, 217, 235, 238, 240, 243], "nequip_hyp": 157, "nequipset": 212, "nest": [73, 201, 229], "net": 230, "network": [3, 157, 214, 240], "neural": 156, "neuron": [156, 157, 210, 213, 214], "new": [3, 28, 113, 141, 175, 176, 188, 189, 226, 229, 230, 241], "newer": [227, 228], "newposit": 111, "next": [1, 3, 4, 106, 228, 230, 232, 233], "nform": [204, 237, 238], "nh": [105, 112, 113, 141], "ni": [105, 112, 113, 141], "no_scal": 211, "noam": [63, 67], "node": [26, 28, 107, 108, 117, 153, 210, 217, 228, 229, 230, 232, 238, 240, 242], "non": [0, 3, 5, 26, 28, 29, 45, 111], "noncommerci": 3, "none": [11, 12, 14, 16, 17, 18, 19, 22, 23, 26, 28, 29, 45, 46, 51, 53, 56, 57, 58, 60, 62, 63, 65, 67, 70, 71, 75, 78, 79, 81, 84, 87, 88, 90, 91, 96, 97, 102, 104, 106, 107, 108, 111, 115, 116, 121, 122, 124, 129, 131, 132, 136, 138, 147, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 177, 182, 184, 185, 186, 190, 191, 195, 196, 197, 204, 205, 210, 211, 214, 216, 217, 225, 230], "nonlinear": 214, "nonlinearity_g": 214, "nonlinearity_scalar": 214, "nonlinearity_typ": 214, "nor": 3, "norm": 214, "normal": [3, 11, 12, 18, 46, 53, 76, 82, 91, 205, 214, 225, 232, 234, 237, 238], "note": [5, 11, 12, 18, 20, 23, 26, 28, 29, 53, 62, 63, 65, 67, 77, 80, 89, 90, 91, 92, 102, 104, 106, 154, 214, 217, 225, 229, 230, 232, 233, 234, 238, 240], "notebook": [0, 224, 225, 226], "noth": [3, 111], "notic": [0, 3], "notif": 230, "notifi": 3, "notwithstand": 3, "novo": [63, 67], "now": [0, 5, 225, 226, 229, 230, 235, 240, 243], "np": [26, 28, 29, 80, 102, 104, 105, 106, 112, 113, 128, 141, 158, 210, 230, 238], "npar": [225, 226, 227, 228, 229, 232], "npj": [227, 239], "npz": 214, "nsw": 225, "ntask": [228, 229, 230, 232, 242], "null": [230, 238], "num": 237, "num_basi": [157, 214, 232], "num_featur": [157, 214, 232], "num_group": [26, 28, 107, 117, 217, 237, 238], "num_lay": [157, 214, 232], "num_of_descriptor": 139, "num_of_initial_selected_struct": [26, 28, 29, 217, 237, 238], "num_of_rss_selected_struct": [26, 28, 217, 237, 238], "num_of_select": 58, "num_process": [102, 104], "num_processes_buildcel": [26, 28, 29, 217, 237, 238], "num_processes_fit": [11, 12, 26, 28, 29, 122, 124, 147, 152, 160, 161, 162, 217, 225, 232, 237], "num_processes_rss": [26, 28, 107, 108, 115, 217, 237, 238], "num_unit": 232, "number": [0, 3, 11, 12, 14, 18, 19, 26, 28, 29, 45, 46, 53, 56, 58, 60, 61, 62, 63, 65, 66, 67, 76, 79, 81, 82, 87, 90, 91, 94, 96, 98, 102, 104, 106, 107, 108, 110, 111, 115, 116, 117, 122, 124, 129, 131, 132, 136, 139, 142, 147, 149, 150, 152, 153, 156, 157, 160, 161, 162, 178, 203, 204, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 231, 233, 238], "number_of_iter": 19, "numpi": [1, 4, 11, 12, 18, 53, 76, 82, 91, 106], "numpydoc": 0, "nvidia": [214, 227, 228], "o": [26, 28, 29, 102, 104, 105, 112, 113, 141, 193, 215, 217, 226, 227, 228, 229, 230, 231, 232, 237, 238, 242], "object": [3, 11, 13, 14, 16, 17, 18, 19, 21, 22, 33, 37, 38, 39, 40, 46, 52, 53, 54, 60, 64, 72, 75, 76, 79, 81, 82, 83, 84, 88, 94, 96, 98, 106, 116, 127, 132, 136, 138, 139, 142, 143, 146, 174, 180, 190, 217, 229, 231, 233, 241, 243], "oblig": 3, "obtain": [53, 90, 156, 213, 233, 238], "occasion": 3, "occupi": 106, "occur": 3, "oct": 7, "octet": [204, 237], "odd": [214, 215, 238], "off": [87, 92, 214, 230, 232, 234, 241], "offer": [3, 240], "offici": 3, "offset": [106, 206, 210], "often": [214, 232, 239], "og": [105, 112, 113, 141], "old": 229, "omp_num_thread": [5, 226, 227, 228, 231, 232, 242], "onc": [1, 4, 5, 14, 19, 26, 28, 217, 227, 228, 229, 230, 240, 242], "one": [3, 5, 14, 19, 26, 28, 29, 58, 90, 106, 107, 108, 115, 116, 117, 122, 124, 227, 228, 229, 231, 232, 233, 234, 238, 240, 242], "ones": 233, "ong": 153, "onli": [1, 3, 4, 5, 11, 14, 19, 22, 26, 28, 29, 45, 48, 56, 72, 74, 87, 90, 91, 92, 106, 124, 127, 136, 179, 194, 214, 217, 225, 227, 228, 229, 233, 234, 235, 238, 239, 240, 242, 243], "onlin": 233, "open": [229, 230], "openblas_num_thread": [231, 232], "openmp": [206, 227, 228, 242], "openmp_chunk_s": [206, 237, 238], "oper": [3, 57, 60, 204, 238], "opportun": [1, 4], "optim": [0, 62, 63, 90, 122, 124, 210, 211, 214, 217, 225, 232, 238, 239], "optimis": 239, "optimizer_amsgrad": 214, "optimizer_nam": 214, "option": [0, 1, 3, 4, 26, 57, 58, 60, 65, 94, 96, 98, 102, 104, 106, 136, 143, 152, 153, 154, 156, 157, 197, 203, 207, 212, 213, 214, 217, 227, 228, 229, 232, 234, 240, 242], "order": [3, 28, 29, 56, 65, 106, 129, 131, 132, 136, 152, 154, 156, 157, 208, 211, 213, 221, 222, 228, 231, 232, 237, 238], "org": [3, 76, 122, 124, 156, 227, 228, 242], "organ": 3, "origin": [3, 11, 12, 18, 53, 79, 91, 183, 234, 240], "orth": 204, "other": [1, 2, 3, 4, 13, 22, 87, 90, 91, 131, 136, 191, 227, 228, 229, 231, 232, 233, 237, 238, 240, 242], "otherwis": [3, 48, 49, 57, 87, 90, 179, 194, 232], "otp": 229, "our": [1, 2, 3, 4, 225, 227, 229, 230, 232, 233, 240], "out": [1, 3, 4, 7, 64, 227, 228, 229, 230, 232, 235, 238, 243], "out_fil": [69, 70, 71, 74], "out_file_nam": 155, "outcar": 166, "outcar2xyz": 166, "outlier": [70, 71, 233], "output": [3, 13, 16, 19, 22, 26, 28, 29, 45, 50, 52, 53, 64, 69, 74, 76, 79, 81, 82, 96, 107, 108, 115, 116, 122, 138, 144, 151, 152, 154, 155, 157, 161, 166, 174, 180, 182, 185, 186, 196, 197, 225, 226, 227, 228, 229, 230, 231, 235, 240, 242, 243], "output_file_nam": [104, 107, 108, 115, 116], "outputdoc": 186, "outputs_blob": 230, "outsid": 3, "over": 214, "overal": [16, 38, 231, 232, 233, 239], "overcom": [229, 239], "overlai": 37, "overlap": [111, 204, 238, 240], "overrid": [190, 234, 238, 240], "overridden": 240, "overview": [223, 232, 233, 240, 241, 243], "overwritten": [26, 28, 29, 102, 104, 217, 232], "own": [3, 7, 117, 228, 233, 234, 242, 243], "owndata": 106, "oxford": 227, "p": [105, 112, 113, 127, 141, 214, 229, 230], "p1": 135, "p2": 135, "p3": 135, "pa": [105, 112, 113, 141], "pace": [227, 228, 242], "pacelib_md5": [227, 228, 242], "packag": [3, 5, 111, 202, 218, 227, 228, 230, 232, 238, 242, 243], "packagespec": [227, 228, 242], "page": [0, 69, 74, 78, 80, 233], "pair": [60, 114, 142, 211, 238], "pair_repuls": 211, "pairwis": [64, 114], "panel": [69, 74], "paper": 3, "paragraph": 3, "parallel": [5, 26, 28, 29, 77, 102, 104, 115, 152, 211, 227, 228, 238, 242], "param": [174, 175, 177, 188, 190, 191, 197, 238], "param_file_nam": 46, "param_filenam": [138, 231], "param_str": 138, "param_upd": [190, 191], "parametpariti": 214, "parmar": 193, "pars": 166, "part": [3, 106, 227, 228, 231, 234, 238, 242], "parti": 3, "particular": 3, "partit": [228, 229, 230, 232, 240, 242], "partition_nam": 230, "pass": [3, 16, 26, 28, 29, 46, 87, 89, 90, 92, 97, 102, 104, 130, 180, 191, 217, 229, 231, 232, 233, 234, 238, 240], "passphras": 229, "password": [3, 229, 230], "past": 233, "patent": 3, "path": [0, 1, 4, 11, 12, 16, 26, 28, 29, 33, 49, 50, 55, 56, 57, 58, 69, 74, 87, 90, 102, 104, 107, 108, 114, 115, 116, 122, 124, 145, 147, 152, 153, 154, 156, 157, 159, 161, 174, 196, 197, 198, 199, 202, 210, 211, 216, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240], "path_to_fitted_model": 153, "path_to_hyperparamet": [156, 232], "path_to_mlip": 147, "path_to_vasp_static_calc": 166, "patienc": [211, 214, 232], "pattern": [3, 240], "payment": 3, "pb": [105, 112, 113, 141, 156, 213, 229], "pbc": 231, "pbe": [234, 237, 238], "pbesol": 234, "pd": [105, 112, 113, 141], "pdf": [37, 40], "pe": [210, 225, 234], "peer": 3, "penalis": 76, "peopl": [1, 4], "per": [0, 46, 69, 74, 139, 144, 149, 153, 185, 226, 227, 228, 229, 234, 242], "per_species_rescale_scal": 214, "per_species_rescale_scales_train": 214, "per_species_rescale_shift": 214, "per_species_rescale_shifts_train": 214, "peratommseloss": 209, "perc_extra_band": 238, "perform": [1, 3, 4, 10, 11, 12, 14, 19, 26, 28, 29, 45, 56, 65, 67, 87, 90, 91, 97, 107, 108, 122, 124, 147, 152, 153, 154, 156, 157, 186, 217, 225, 226, 232, 233, 238, 240], "period": [156, 213, 234], "periodicsit": 231, "perman": 3, "permiss": [3, 230], "permit": 3, "perpetu": 3, "person": [3, 233], "persson": 193, "pertin": 3, "petretto": 193, "phase": [238, 239], "phojob": 231, "phonon": [0, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 33, 35, 37, 38, 39, 40, 46, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 139, 166, 176, 189, 207, 224, 227, 228, 229, 234, 242, 243], "phonon2": 232, "phonon_bandstructur": 229, "phonon_bulk_relax_mak": [11, 12, 16, 17, 225, 232, 234], "phonon_data": 232, "phonon_dir": 232, "phonon_displacement_mak": [11, 16, 17, 87, 90, 97, 99, 225, 231, 232], "phonon_static_energy_mak": [11, 12, 16, 17, 225, 232, 234], "phononbandstructuresymmlin": [37, 38, 39, 40], "phononbenchmark": 33, "phononbenchmarkmak": 231, "phononbsdocdoc": [11, 14, 16, 19, 22], "phononbsdosdoc": [11, 14, 19, 22, 33, 231], "phononbsdosdoc_mp_22905": 231, "phonondftmldatagenerationflow": 151, "phonondisplacementmak": [92, 225, 232], "phononmak": [1, 4, 11, 12, 46, 87, 90, 231, 234], "phonons_qha": 232, "phonopi": [11, 12, 16, 17, 87, 90, 94, 98, 232, 233, 234], "phy": [227, 232, 234, 239], "physic": [1, 3, 4, 238, 239, 240], "pick": [26, 216], "pickl": 52, "pid": 230, "pidfil": 230, "pidfilepath": 230, "piec": 3, "piecewis": 133, "pin": 0, "ping": 153, "pip": [1, 4, 5, 227, 228, 229, 230, 242], "pkg": [227, 228, 242], "pkg_kokko": [227, 228, 242], "pkg_manybodi": [227, 228, 242], "pkg_ml": [227, 228, 242], "pkg_molecul": [227, 228, 242], "pkg_phonon": [227, 228, 242], "pkg_python": [227, 228, 242], "pkl_file": 52, "place": [3, 26, 28, 29, 102, 104], "placehold": [6, 156, 213], "plan": 214, "platform": 230, "pleas": [1, 2, 3, 4, 87, 90, 225, 227, 228, 229, 230, 232, 233, 238, 242], "plot": [0, 1, 4, 11, 12, 16, 33, 37, 38, 40, 46, 55, 69, 74, 78, 80, 144, 158, 231, 233], "plotter": 55, "plt": [37, 40, 69, 74], "plu": 3, "pm": [105, 112, 113, 141], "pn": [134, 135], "po": [105, 112, 113, 141], "point": [11, 12, 16, 26, 28, 29, 33, 45, 61, 106, 110, 126, 127, 128, 130, 134, 135, 158, 177, 178, 191, 214, 217, 220, 221, 222, 225, 231, 232, 233, 238, 239, 241, 243], "pointer": 3, "points_nd": 126, "polar": [26, 28, 29, 45, 87, 90, 92, 191, 217], "polariz": [156, 213], "polymorph": 238, "polynomi": [152, 214], "polynomialcutoff_p": 214, "popul": [156, 213], "port": [229, 230], "portabl": 229, "portforward": 230, "portion": 3, "poscar": 225, "posit": [69, 74, 91, 111, 214, 233, 234, 238], "posixpath": [202, 218], "possess": [3, 240], "possibl": [3, 60, 61, 87, 90, 94, 98, 110, 178, 234, 235, 238, 243], "post": 230, "pot": 233, "pot1": 138, "pot2": 138, "pot_fmt": [176, 189], "potcar": [26, 28, 29, 45, 217], "potenti": [0, 5, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 25, 26, 27, 30, 32, 33, 34, 35, 38, 46, 47, 63, 67, 86, 88, 91, 93, 107, 108, 111, 114, 118, 119, 120, 122, 124, 138, 145, 147, 148, 152, 153, 154, 156, 157, 159, 161, 168, 169, 211, 213, 225, 227, 228, 235, 238, 239, 241, 243], "potential_fil": 90, "potential_filenam": [46, 231], "power": 3, "powerup": [226, 229, 232], "pr": [0, 105, 112, 113, 141], "practic": [2, 3, 239], "pre": [0, 1, 4, 5, 11, 14, 19, 22, 26, 121, 122, 216, 225, 226, 227, 228, 235, 238, 239, 241, 243], "pre_databas": 232, "pre_database_dir": [11, 14, 19, 22, 26, 28, 29, 56, 121, 122, 216, 217, 232, 234, 238, 240], "pre_run": 229, "pre_xyz_fil": [11, 14, 19, 22, 121, 122, 232, 234], "pre_xyz_test": 234, "pre_xyz_train": 234, "preambl": 3, "prec": [205, 237, 238], "precis": [3, 11, 12, 16, 17, 87, 90], "predecessor": 3, "predict": [80, 153, 156, 210, 213, 238, 239], "prefer": [3, 232], "prefer_90_degre": [87, 90], "prefix": [5, 11, 12, 35, 107, 108, 115, 116, 165], "preg": 134, "prepar": [97, 159, 228, 233, 238], "preprint": 0, "preprocess": [11, 12, 28, 29, 56, 121, 122, 232, 233, 237, 240, 241, 243], "preprocess_data": 240, "preprocessing_data": 234, "prerequisit": [5, 227, 228, 234], "present": [3, 60, 238], "preserv": [3, 26, 28, 107, 108, 115, 116, 217], "preset": [227, 228, 242], "pressur": [26, 28, 62, 63, 75, 107, 108, 115, 116, 217, 238], "pretrain": 210, "prettifi": 0, "prevent": [3, 94, 98], "previou": [3, 16, 19, 26, 29, 56, 214, 216, 217, 238, 240], "previous": [26, 216, 240], "previous_output": 19, "price": 3, "primarili": [3, 240], "primit": [11, 12, 16, 17, 87, 90], "principl": [0, 232, 238, 239], "print": [96, 214, 226, 227, 228, 229, 232, 233, 240, 242], "prior": 3, "privat": 3, "probabl": [76, 229, 239], "problem": [3, 152, 233], "proce": [1, 4, 46, 122], "procedur": [0, 3, 231, 232], "process": [11, 13, 16, 22, 26, 28, 29, 62, 75, 102, 104, 107, 108, 115, 122, 124, 147, 152, 153, 217, 227, 228, 229, 230, 238, 240], "processmanag": 230, "processor": 5, "proct": 229, "procur": 3, "produc": [3, 11, 12, 14, 33, 87, 88, 90, 91, 102, 104, 121, 122, 233, 234, 239], "product": [3, 26, 58, 62, 63, 65, 219, 220, 238], "prof": 2, "program": [3, 5, 6, 238, 240], "programm": 3, "prohibit": 3, "project": [7, 11, 14, 16, 17, 18, 19, 22, 23, 33, 38, 91, 227, 228, 229, 232, 233, 240, 242, 243], "project_nam": 229, "promin": 3, "prompt": 229, "propag": 3, "proper": 229, "properti": [1, 3, 4, 62, 63, 65, 68, 83, 90, 106, 190, 191, 227, 233], "proport": [26, 28, 29, 56, 65, 217], "propos": 239, "proprietari": 3, "protect": [3, 229], "protocol": [1, 3, 4], "prove": 3, "provid": [3, 5, 7, 11, 12, 13, 16, 18, 26, 28, 29, 45, 46, 53, 60, 91, 121, 122, 152, 154, 157, 210, 217, 227, 228, 229, 231, 232, 233, 234, 237, 238, 240, 241], "provis": 3, "provision": 3, "proxi": 3, "prpvide": 214, "pseudopotenti": 174, "pspot": [174, 177], "pt": [105, 112, 113, 141], "pu": [105, 112, 113, 141], "pub": [122, 124], "public": [2, 3, 227], "publicli": 3, "publish": [0, 3, 5], "pull": [0, 227], "purcel": 193, "pure": 58, "purpos": [3, 127, 239], "pursuant": 3, "put": [156, 213, 228, 230, 231, 232, 233, 242], "pwd": 230, "py": [1, 4, 63, 67, 111, 193, 229], "pycharm": 5, "pydant": [0, 26, 184, 185, 186, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 232, 240], "pymatgen": [11, 14, 16, 17, 18, 19, 21, 22, 33, 37, 38, 39, 40, 46, 53, 54, 64, 76, 79, 81, 82, 87, 88, 90, 91, 94, 96, 98, 143, 174, 225, 227, 228, 229], "pymongo": 228, "pypi": 0, "pyproject": [0, 227], "pytest": [1, 4, 5], "python": [0, 1, 4, 5, 154, 157, 228, 230, 231, 232, 238, 242, 243], "python3": [202, 218], "q": [11, 12, 16, 33, 40, 231, 233], "q_dependent_rms": 39, "qo": 240, "qualifi": 3, "qualiti": [3, 7, 16, 227, 233, 234], "quantiti": 111, "quantumchemist": 0, "queri": [230, 231], "question": 229, "queue": [13, 229, 232], "quick": [7, 241, 243], "quiet": 230, "quip": [65, 67, 77, 232], "quippi": [0, 46, 62, 63], "quit": 229, "qverbatim": [228, 229, 232, 242], "r": [106, 193, 229], "r_max": [154, 157, 211, 214, 232, 240], "ra": [105, 112, 113, 141], "radial": [26, 58, 153, 156, 157, 208, 210, 211, 213, 214, 219, 220, 221, 222], "radiu": [139, 142, 153, 154, 157, 210], "rais": [0, 26, 28, 58, 102, 104, 152, 157, 190, 227], "raise_immedi": [225, 226], "random": [0, 11, 12, 14, 18, 19, 25, 26, 28, 29, 46, 53, 58, 62, 63, 67, 76, 82, 91, 102, 104, 106, 166, 211, 217, 227, 232, 234, 238, 239, 240, 241], "random_se": [26, 28, 29, 58, 62, 63, 67, 102, 217, 238], "random_struct": 104, "randomli": [11, 12, 18, 46, 53, 76, 79, 91], "randomstructuresdatagener": 234, "randomstruturesdatageneratorforml": 91, "rang": [11, 12, 18, 26, 28, 29, 45, 53, 81, 91, 156, 204, 213, 217, 226, 234, 238], "rate": [157, 210, 211, 214], "rather": [225, 226], "ratio": [11, 12, 26, 28, 29, 102, 104, 121, 122, 167, 217], "rattl": [0, 11, 12, 13, 18, 46, 53, 64, 76, 82, 91, 225, 228, 229, 232, 233, 235, 242, 243], "rattle_mc_n_it": [11, 12, 18, 53, 76, 91], "rattle_se": [11, 12, 14, 18, 19, 53, 76, 82, 91, 225, 232], "rattle_std": [11, 12, 18, 46, 53, 76, 82, 91, 225, 232], "rattle_typ": [11, 12, 18, 53, 91, 225, 232, 234], "rattled_bulk_relax_mak": [11, 12, 18, 225, 232, 234], "rattled_dir": 232, "rb": [105, 112, 113, 141], "rbf_type": 210, "re": [105, 112, 113, 141], "reach": [94, 96, 98, 233], "read": [3, 75, 166, 214, 230, 240], "readabl": [1, 3, 4], "readi": [0, 3], "readili": 3, "readm": 0, "readonli": 230, "readonly_password": 230, "readonly_us": 230, "readout": 211, "readpassword": 230, "readwriteanydatabas": 230, "real": 106, "realist": 238, "realiti": 226, "realli": 230, "realtim": [225, 226], "reason": [1, 3, 4, 238, 239, 240], "receipt": [3, 183, 193, 202, 218], "receiv": 3, "recent": 239, "recip": [227, 228, 242], "recipi": 3, "reciprocal_dens": 225, "recogn": [3, 26, 28, 29, 102, 104, 217, 238], "recogniz": 155, "recommend": [90, 111, 214, 227, 228, 238, 240, 242], "recpot": [175, 188], "recurs": [0, 72, 146], "redistribut": 3, "reduc": [0, 87, 90, 94, 98, 131, 239], "reduce_supercell_s": 229, "reduce_supercell_size_job": 229, "reduce_supercell_size_job_mp": 234, "reduced_supercell_s": 94, "reducelronplateau": 214, "reduct": [11, 12, 16, 17, 87, 90], "redund": 0, "ref": [210, 231], "ref_energi": [26, 28, 29, 56, 65, 121, 122, 124, 136, 143, 147, 152, 153, 154, 156, 157, 166, 167, 206, 217, 232, 237, 238, 240], "ref_energy_nam": [26, 28, 29, 121, 122, 124, 143, 147, 152, 153, 154, 156, 157, 166, 217, 237, 240], "ref_forc": [26, 28, 29, 56, 121, 122, 124, 136, 143, 147, 152, 153, 154, 156, 157, 166, 167, 206, 217, 232, 237, 238, 240], "ref_force_nam": [26, 28, 29, 121, 122, 124, 143, 147, 152, 153, 154, 156, 157, 166, 217, 237, 240], "ref_path": [196, 197, 198, 225, 226], "ref_viri": [26, 28, 29, 121, 122, 124, 136, 143, 147, 152, 153, 154, 156, 157, 166, 206, 217, 232, 237, 238, 240], "ref_virial_nam": [26, 28, 29, 121, 122, 124, 143, 147, 152, 153, 154, 155, 156, 157, 166, 217, 237, 240], "ref_xyz": 55, "refactor": 0, "refer": [3, 11, 14, 16, 17, 18, 19, 22, 24, 26, 28, 29, 33, 40, 42, 43, 51, 56, 63, 67, 68, 69, 70, 71, 74, 80, 85, 91, 100, 106, 111, 121, 122, 124, 143, 147, 152, 153, 154, 156, 157, 166, 167, 193, 196, 197, 214, 217, 228, 229, 231, 235, 238, 243], "refin": [0, 238, 241, 243], "refrain": 3, "reg": 136, "reg_minmax": [26, 28, 29, 56, 136, 217, 237, 238], "regard": [3, 96, 227, 228], "regardless": [3, 232], "regener": 3, "regent": [183, 193, 202, 218], "region": [26, 58, 134, 219, 220], "registri": [227, 228, 242], "registryspec": [227, 228, 242], "regress": 152, "regular": [0, 11, 12, 16, 26, 28, 29, 33, 38, 56, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 156, 166, 213, 217, 225, 232, 237, 238, 240], "regularis": 136, "reinstat": 3, "reject": 167, "rel": [65, 238], "relat": [0, 11, 12, 16, 17, 22, 87, 90, 106, 202, 218, 227, 228, 234, 235], "relationship": [3, 87, 90], "relax": [11, 12, 16, 17, 18, 26, 28, 46, 87, 90, 97, 107, 108, 115, 116, 186, 217, 225, 232, 234], "relax_cel": [46, 225, 231, 232], "relax_job": 229, "relax_kwarg": [46, 231, 232], "relax_maker_kwarg": [16, 90, 97, 225, 232], "relax_mp": 234, "relaxmak": [16, 90, 97], "releas": [0, 3, 183, 193, 202, 218, 228, 229], "relev": [3, 225, 227, 240], "reli": [3, 87, 90, 227, 228, 232, 234, 238, 239, 242], "reliabl": [7, 227, 233, 238], "relicens": 3, "remain": [3, 26, 28, 29, 56, 136, 217, 227, 237], "rememb": 233, "remot": [0, 7, 227, 228, 230, 232, 240, 242, 243], "remote_clust": [229, 230], "remote_dir": 229, "remote_error": 229, "remote_target_dir": 229, "remote_tmp_dir": 229, "remov": [0, 3, 26, 28, 58, 75, 102, 104, 111, 217, 233, 237], "remove_tmp_fil": [102, 104], "remove_traj_fil": [26, 28, 58, 75, 217, 238], "render": 3, "repair": 3, "repeat": [11, 16, 121, 122, 229, 231, 232, 234], "repetit": 233, "replac": [20, 23, 229, 230, 232, 233], "repo": [0, 225, 232], "report": [0, 5, 214], "report_init_valid": 214, "repositori": [1, 4, 5, 7, 63, 67], "repres": [3, 28, 29, 56, 66, 67, 106, 116, 153], "represent": [201, 238], "reproduc": [26, 28, 29, 58, 102, 217, 234], "repuls": [26, 28, 107, 108, 115, 116, 211, 217, 238, 240], "request": 227, "requeu": 230, "requir": [3, 5, 13, 26, 28, 58, 62, 63, 96, 106, 152, 157, 163, 183, 193, 202, 218, 227, 228, 229, 230, 232, 235, 239], "rerun": [229, 233], "rerun_job": 229, "rescal": 46, "research": [2, 7, 63, 67, 227], "reserv": [183, 193, 202, 218], "reset": [229, 230], "residu": [26, 28, 107, 108, 115, 116, 217], "resiz": [46, 52, 55], "resolv": 3, "resourc": [13, 228, 229, 232, 240, 242], "resources_mlip": [228, 232, 242], "resources_phon": [228, 232, 242], "resources_ratt": [228, 232, 242], "respect": [3, 11, 12, 97, 153, 228, 229, 232, 242], "respons": [3, 23, 53, 64, 76, 79, 81, 82], "restart": [22, 211, 214, 229], "restart_latest": [211, 232], "restrict": 3, "result": [0, 3, 11, 12, 22, 35, 65, 67, 107, 108, 115, 116, 153, 210, 214, 225, 229, 231, 232, 235, 238, 239, 240, 243], "results_": [11, 12, 35], "results_dir": [153, 210], "results_licl": 233, "results_xi": 231, "resum": [26, 216, 217, 238, 241, 243], "resume_from_previous_st": [26, 217, 237, 238, 240], "resumefrompreviousst": 217, "retain": [3, 217], "retain_existing_sigma": [26, 28, 29, 56, 136, 217, 237, 238], "retri": 229, "retriev": [60, 229], "return": [3, 11, 13, 14, 20, 23, 26, 28, 29, 35, 37, 38, 39, 40, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 94, 96, 97, 98, 99, 107, 108, 111, 114, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 179, 180, 182, 190, 191, 194, 195, 196, 197, 198, 199, 201, 229], "reus": [0, 225], "rev": [227, 239], "revert": 0, "review": [3, 227], "revis": [0, 3], "rf": [105, 112, 113, 141, 229], "rg": [105, 112, 113, 141], "rh": [105, 112, 113, 141], "rhom": 204, "ricci": 193, "rich": 193, "riebesel": 193, "right": [3, 183, 193, 202, 218], "rignanes": 193, "risk": 3, "rlaunch": 230, "rm": [19, 40, 144, 227, 228, 229, 242], "rms_forces_sc": [211, 232], "rms_max": [14, 19, 225, 232, 233], "rmse": [11, 12, 14, 16, 19, 22, 33, 39, 40, 80, 144, 231, 233], "rn": [105, 112, 113, 141], "robust": 234, "rocksalt": 233, "role": 230, "rom": 3, "root": [35, 38, 39, 40, 214], "rosen": 193, "rotat": 157, "rough": 233, "roughli": [11, 12, 18, 53, 76, 91], "round": 240, "routin": 234, "row": 106, "royalti": 3, "rss": [0, 2, 8, 11, 12, 26, 28, 29, 42, 51, 58, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 152, 154, 156, 157, 216, 217, 224, 237, 239, 243], "rss_config": [26, 226, 238, 240], "rss_group": [26, 28, 29, 51, 217, 237, 238], "rss_job": [226, 238, 240], "rss_relax_result": [107, 108, 115, 116], "rss_selection_method": [26, 28, 217, 237, 238], "rss_si_config": 226, "rss_si_smal": 226, "rssconfig": [26, 226, 238, 241, 243], "rssmaker": [1, 4, 226, 238, 240], "rt": 111, "ru": [105, 112, 113, 141], "rule": 3, "run": [0, 1, 3, 4, 11, 13, 14, 19, 20, 23, 26, 28, 29, 33, 45, 46, 50, 101, 103, 107, 108, 114, 115, 116, 122, 124, 156, 159, 160, 161, 162, 164, 174, 180, 182, 184, 186, 197, 198, 202, 213, 214, 217, 225, 226, 227, 228, 229, 230, 234, 235, 238, 241, 242, 243], "run_dir": 229, "run_fits_on_different_clust": [11, 12, 121, 122, 124, 232], "run_loc": [225, 226, 231, 232], "run_nam": 214, "run_phonon_displacements_mp": [229, 234], "run_vasp": [89, 92], "run_vasp_kwarg": [89, 92, 225], "runner": [160, 161, 162, 163, 164, 165, 202, 218, 229], "s41467": [156, 227], "safest": 3, "sahasrabuddh": 193, "sai": 3, "sake": 3, "sale": 3, "same": [0, 3, 26, 28, 29, 80, 87, 90, 92, 102, 104, 147, 152, 153, 154, 156, 157, 214, 225, 227, 228, 229, 230, 231, 232, 234, 238, 240, 242], "sampl": [26, 28, 29, 58, 62, 63, 65, 102, 214, 217, 229, 234, 237, 239, 240, 241, 243], "sandom": [107, 108], "satisfi": [3, 238], "save": [26, 28, 29, 37, 40, 56, 58, 102, 104, 153, 210, 211, 214, 216, 217, 225, 233, 238, 240], "save_all_checkpoint": 211, "save_checkpoint_freq": 214, "save_cpu": [211, 232], "save_ema_checkpoint_freq": 214, "sb": [105, 112, 113, 141], "sbatch": [228, 229, 230, 232, 242], "sc": [0, 105, 112, 113, 141], "scaffold": 230, "scalar": [26, 28, 107, 108, 115, 116, 214, 217], "scalar_exp_pressur": [26, 28, 107, 108, 115, 116, 217, 237, 238], "scalar_pressure_exponential_width": [26, 28, 107, 108, 115, 116, 217, 237, 238], "scalar_pressure_high": [26, 28, 107, 108, 115, 116, 217, 237, 238], "scalar_pressure_low": [26, 28, 107, 108, 115, 116, 217, 237, 238], "scalar_pressure_method": [26, 28, 107, 108, 115, 116, 217, 237, 238], "scale": [11, 12, 18, 53, 79, 81, 91, 152, 211, 214, 225, 232, 234, 238], "scale_factor": 234, "scale_lattic": 225, "scaleshiftbotnet": 211, "scaleshiftmac": 211, "scan": 237, "scenario": 230, "schedul": [210, 214], "scheffler": 193, "schema": [180, 184, 185, 186, 231], "scheme": [26, 28, 29, 56, 65, 87, 90, 136, 217, 237, 238], "schiller": 2, "schmidt": 193, "school": 3, "scienc": [87, 90, 193, 227, 228], "scientif": 2, "scope": [3, 238], "scp": 229, "scp_command": 229, "scp_final_command": 229, "scp_to_tmp_command": 229, "scratch": [25, 26, 29, 210, 217, 238, 239, 241], "scratch_dir": 230, "script": [3, 63, 67, 152, 154, 157, 160, 166, 228, 230, 231, 233, 235, 238, 242, 243], "script_nam": 160, "se": [105, 112, 113, 141, 229], "search": [25, 29, 94, 98, 107, 108, 227, 238, 239, 241], "sec": 229, "second": [106, 130, 135, 156, 213, 233, 238], "secondarili": 3, "section": [3, 106, 223, 224, 229, 232, 233, 235, 237, 238, 240, 241], "see": [2, 3, 5, 76, 106, 227, 229, 231, 232, 234, 240], "seed": [0, 11, 12, 14, 18, 19, 26, 28, 29, 53, 58, 62, 63, 67, 76, 82, 91, 102, 211, 214, 217, 232], "seekpath": [87, 90], "select": [26, 28, 29, 58, 62, 63, 65, 67, 102, 203, 217, 229, 238, 240], "select_by_descriptor": 67, "select_enthalpy_flat_histogram": 63, "select_num": 67, "selected_descriptor": [67, 77], "selected_struct_numb": 102, "selection_method": 58, "self": [63, 67, 190, 214], "sell": 3, "semax": 136, "semiconductor": 3, "semin": 136, "sensibl": [229, 239], "separ": [3, 5, 11, 12, 16, 18, 53, 64, 76, 79, 91, 111, 121, 122, 156, 204, 213, 225, 232], "sequenc": [113, 141, 175, 176, 188, 189, 197], "serial": 231, "serv": 3, "server": [3, 230, 238], "servic": [3, 230], "set": [0, 1, 4, 11, 12, 13, 16, 17, 18, 20, 26, 28, 29, 40, 45, 53, 56, 67, 72, 76, 82, 83, 87, 88, 89, 90, 91, 92, 94, 97, 98, 102, 104, 121, 122, 136, 146, 147, 152, 154, 156, 157, 167, 174, 177, 180, 184, 190, 191, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 233, 235, 237, 238, 239, 240, 242, 243], "set_job_run_properti": 229, "set_run_config": [228, 229, 232, 242], "setup": [5, 7, 26, 228, 232, 233, 240, 242, 243], "setyawan": [87, 90], "setyawan_curtarolo": [87, 90], "sever": [11, 12, 16, 117, 123, 225, 232, 233, 234, 238], "sfmax": 136, "sfmin": 136, "sg": [105, 112, 113, 141], "sh": [227, 228, 242], "shall": [3, 94, 96, 98, 232, 234], "shape": [46, 80, 106], "share": [3, 232], "shell": 230, "shen": 193, "shift": 214, "short": [3, 156, 213, 227, 230], "shot": [26, 58], "should": [1, 3, 4, 26, 28, 29, 51, 75, 80, 102, 104, 106, 156, 164, 180, 227, 229, 230, 231, 233, 243], "should_stop_children": [89, 92], "show": [3, 38, 229, 232, 233, 234], "show_flow_box": 233, "shown": [232, 233], "shuffl": 214, "shut": 230, "shutdown": 230, "shyue": 153, "si": [26, 28, 29, 71, 74, 102, 104, 105, 112, 113, 141, 156, 217, 235, 237, 238, 240, 243], "si_rss": 238, "sigma": [11, 16, 26, 28, 29, 56, 121, 122, 136, 205, 206, 217, 225, 232, 234, 237], "sign": [3, 210], "signific": [3, 232, 239], "significantli": 238, "silica": 237, "silicon": 238, "silu": 215, "similar": [0, 3, 177, 191, 229, 230, 232, 233, 234], "simlar": 230, "simpl": [69, 74, 78, 80, 127, 233], "simplex": 134, "simpli": [5, 227, 228, 229, 232, 237, 240, 242], "simul": [7, 58, 227, 239], "simultan": 3, "sinc": 238, "singl": [0, 3, 11, 12, 20, 26, 28, 29, 45, 73, 116, 136, 177, 191, 217, 229, 232, 233, 235, 238, 239, 240, 243], "sio": [241, 243], "sio2": [26, 28, 29, 102, 104, 136, 217, 237, 240], "site": [202, 210, 218], "situat": 232, "size": [0, 87, 90, 94, 96, 98, 106, 154, 156, 157, 206, 210, 211, 213, 214, 233, 234, 238], "skip": [87, 90, 97, 106, 229], "slack": [204, 238], "slightli": [232, 233], "slow": [11, 238], "slurm": [228, 229, 232, 242], "slurm_ntask": 230, "slurm_setup": [229, 230], "sm": [105, 112, 113, 141], "small": [0, 1, 4, 11, 12, 18, 53, 76, 91, 226, 232, 233, 240], "smaller": [0, 156, 213, 214, 233], "smallest": 238, "smear": [26, 58, 87, 92, 219, 220, 238], "smearing_schem": 238, "smearing_width": 238, "smooth_l1_loss": 210, "sn": [105, 112, 113, 141, 225, 232], "snake": [1, 4], "sne": [156, 213], "snippet": [5, 232, 240], "so": [3, 232, 233, 234, 238], "soap": [11, 12, 16, 26, 33, 38, 58, 62, 63, 66, 67, 77, 122, 124, 147, 148, 206, 207, 219, 220, 225, 232, 233, 237, 238], "soap_delta_list": [11, 12, 232], "soap_dict": [16, 33, 38, 231], "soap_para": [26, 58, 66, 203, 237, 238], "soappara": 203, "soapset": 207, "sobolev": 193, "sock": 230, "socket": [20, 87, 90], "soft": 111, "softli": 111, "softwar": [3, 7, 227, 228, 238, 242, 243], "sold": 3, "sole": [3, 232], "solut": [7, 227, 238], "solver": [152, 208, 232], "some": [1, 3, 4, 232, 240], "someon": [1, 4], "someth": [106, 230], "somewhat": 230, "somewher": 229, "sort": 190, "sort_structur": [190, 191], "sourc": [3, 5, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 33, 35, 37, 38, 39, 40, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 102, 104, 107, 108, 111, 114, 115, 116, 117, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 177, 180, 182, 184, 185, 186, 190, 191, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 229, 230], "space": [64, 81, 90, 234, 238, 239, 240], "spare": 3, "spars": [206, 220, 221, 222], "sparse_jitt": [206, 225, 232, 237, 238], "sparse_method": [220, 221, 222, 225, 232, 237, 238], "speak": 3, "speci": [21, 26, 45, 56, 58, 60, 62, 63, 66, 78, 88, 111, 150, 156, 213, 214, 219, 220, 221, 222, 233, 237, 238], "special": [3, 28, 29, 56], "species_list": [78, 122, 124, 147, 156, 232], "species_z": 66, "specif": [1, 3, 4, 6, 26, 28, 29, 56, 90, 107, 108, 115, 116, 122, 124, 136, 190, 217, 227, 229, 231, 232, 233, 234, 238, 239, 241, 243], "specifi": [3, 11, 12, 18, 26, 28, 29, 51, 53, 81, 91, 102, 104, 107, 108, 113, 115, 116, 141, 142, 152, 154, 157, 175, 176, 180, 188, 189, 190, 204, 217, 234, 238, 240], "speedup": 5, "spheric": [26, 58, 153, 210, 214, 219, 220], "sphericalbessel": 210, "sphinx": [0, 5], "spin": [26, 28, 29, 45, 87, 92, 217], "spin_polar": 238, "spirit": 3, "split": [0, 26, 28, 29, 56, 83, 117, 167, 217, 232, 238], "split_ratio": [11, 12, 83, 121, 122, 167, 225, 232], "spring": 111, "squar": [35, 38, 39, 40], "sr": [105, 112, 113, 141], "src": [0, 193, 227, 228, 229, 242], "srun": 230, "ssh": [229, 230], "ssl_ca_fil": 230, "ssp": 215, "ssvmin": 136, "stabil": 240, "stabl": 0, "stable_29aug2024_update1": [0, 227, 242], "stage": [211, 238], "stage_two": 211, "stand": 3, "standard": [3, 11, 12, 18, 46, 53, 76, 80, 82, 87, 90, 91, 210, 228, 234, 238], "start": [0, 3, 7, 16, 21, 26, 87, 90, 108, 115, 211, 217, 225, 226, 230, 234, 235, 238, 241, 243], "start_mpid": 225, "start_poscar": 225, "start_stage_two": 211, "start_swa": [154, 211, 232], "stat_iso_atom": 232, "stat_iso_atom_0": 225, "stat_iso_atom_0_25": 225, "stat_iso_atom_1": 225, "state": [3, 11, 12, 18, 26, 53, 76, 82, 90, 91, 210, 216, 217, 229, 238, 240], "statement": [3, 238], "static": [11, 12, 16, 17, 18, 26, 28, 29, 45, 46, 52, 87, 89, 90, 91, 92, 97, 166, 177, 186, 191, 225, 228, 229, 232, 234, 238, 242], "static_bulk_": 226, "static_castep": 238, "static_energy_mak": [26, 28, 29, 45, 46, 87, 90, 97, 231, 238], "static_energy_maker_isolated_atom": [26, 28, 29, 45, 238], "static_isolated_0": 226, "static_isolated_atom_mak": [225, 232, 234], "static_maker_kwarg": [16, 90, 97], "static_mp": [225, 234], "static_run_and_convert": 46, "static_vasp": 238, "staticmak": [16, 26, 28, 29, 45, 89, 90, 97, 177, 225, 234, 238], "staticsetgener": [191, 225, 234, 238], "statist": 211, "statu": [3, 229], "std": [80, 230], "std_scale": 211, "stddev": 234, "stem": 234, "step": [1, 3, 4, 26, 28, 46, 65, 76, 91, 106, 107, 108, 115, 116, 122, 210, 216, 217, 225, 228, 229, 230, 231, 233, 235, 240, 243], "step_siz": [94, 98, 234], "still": [227, 238], "stochast": 67, "stoichiometr": [26, 28, 29, 102, 104, 217], "stoichiometri": [26, 28, 29, 56, 65, 102, 104, 132, 136, 217, 238, 239, 240], "stop": [14, 19, 26, 28, 214, 217, 229, 238], "stop_children_kwarg": [89, 92], "stop_criterion": [26, 28, 217, 237, 238], "storag": [3, 225, 228, 230, 238, 242], "store": [84, 87, 90, 104, 106, 124, 153, 174, 180, 210, 228, 230, 231, 232, 240, 242], "store_force_const": [87, 90, 231], "store_input": 229, "store_inputs_mp": 229, "store_magmom": 84, "str": [11, 12, 13, 14, 16, 17, 19, 22, 23, 26, 28, 29, 33, 35, 37, 38, 40, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 96, 102, 104, 107, 108, 114, 115, 116, 121, 122, 124, 127, 128, 129, 132, 136, 139, 143, 144, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 174, 177, 186, 196, 197, 199, 201, 202, 204, 205, 206, 208, 209, 210, 211, 213, 214, 216, 217, 220, 221, 222, 225], "straightforward": 240, "strategi": [238, 240], "stratifi": 232, "stress": [26, 28, 107, 108, 115, 116, 143, 153, 185, 210, 211, 217], "stress_tol": [26, 28, 107, 108, 115, 116, 217, 237, 238], "stress_weight": [210, 211, 232], "stretch": 81, "strict": [0, 5, 90, 227, 228, 229, 231, 242], "stride": 106, "string": [0, 52, 60, 61, 62, 63, 65, 66, 67, 77, 87, 90, 110, 116, 122, 124, 147, 148, 156, 178, 211, 214, 227, 228, 233, 242], "strip": 57, "strm_lvl": 230, "strong": [111, 233, 238, 240], "stronger": 214, "strongli": [228, 232, 238, 240], "struc": 232, "struc_list": 232, "struct": 229, "struct_numb": 104, "struct_start_index": [108, 115], "structur": [0, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 33, 35, 37, 38, 39, 40, 45, 46, 53, 54, 56, 58, 64, 76, 79, 81, 82, 83, 87, 90, 91, 94, 96, 98, 99, 102, 104, 107, 108, 115, 117, 128, 129, 131, 136, 142, 143, 153, 155, 167, 174, 180, 185, 186, 190, 191, 204, 217, 225, 226, 227, 229, 232, 233, 235, 238, 239, 240, 241, 243], "structure_list": [11, 13, 14, 19, 21, 46, 96, 225, 231, 232, 233, 234], "structure_nam": 96, "structure_path": 107, "struggl": 239, "studi": 238, "style": [106, 114], "subclass": [48, 179, 190, 194], "subdivid": 3, "subfold": [196, 229], "subject": [3, 183, 193, 202, 218], "sublicens": 3, "submiss": [227, 228, 233, 240, 242], "submit": [228, 232, 242], "submit_flow": [228, 229, 232, 240, 242], "submodul": [1, 4, 243], "subplot": [69, 74], "subprocess": 229, "subprogram": 3, "subroutin": [3, 11, 12, 234], "subsect": 3, "subsequ": [90, 225, 233], "subset": 232, "substanti": 3, "subtask": [1, 4], "success": [57, 227, 228, 242], "successfulli": 232, "sue": 3, "suffic": 3, "suffici": [64, 233, 238], "suffix": [33, 38, 231], "suitabl": [26, 28, 29, 45, 232, 233, 239], "sum": 131, "summari": [0, 11, 12, 33, 35, 231, 233], "summary_filename_prefix": [11, 12], "sundararaman": 193, "supercel": [0, 11, 12, 13, 16, 17, 18, 20, 23, 46, 53, 54, 87, 90, 91, 94, 96, 97, 98, 99, 232, 233, 235, 243], "supercell_matric": [0, 23], "supercell_matrix": [46, 53, 54, 234], "supercell_set": [11, 12, 13, 16, 17, 18, 20, 90, 91, 225, 232, 234], "supercells_mp": [229, 233, 234], "supercomput": 233, "supermuc_work": 232, "supplement": [3, 240], "suppli": [90, 232, 238], "support": [3, 11, 14, 19, 22, 45, 63, 67, 197, 212, 214, 227, 228, 231, 232, 238, 240, 242], "suppos": 233, "sure": [0, 3, 136, 227, 228, 229, 231, 232], "surfac": [25, 26, 63, 67, 239], "surrend": 3, "surviv": 3, "suse": 230, "sustain": 3, "svmax": 136, "swa": [154, 211], "switch": [1, 4, 87, 92, 225, 230, 231, 233, 234, 237], "sym_reduc": [87, 90], "symb_list": 60, "symbol": [26, 28, 29, 45, 60, 71, 74, 156, 213, 214, 217], "symbreak": 210, "symmetr": 90, "symmetri": [11, 12, 13, 16, 17, 26, 28, 87, 90, 107, 108, 115, 116, 204, 210, 217, 238], "symmetry_gener": 238, "symmop": [204, 237, 238], "symprec": [11, 12, 16, 17, 87, 90, 225, 232], "sync": 210, "sync_dist": 210, "system": [3, 5, 26, 28, 29, 45, 65, 102, 104, 111, 136, 204, 210, 217, 227, 228, 229, 233, 238, 239, 240], "systemat": [3, 227, 233], "systemlog": 230, "t": [64, 105, 106, 112, 113, 141, 193, 211, 220, 221, 222, 229, 233, 234, 237, 238, 240], "ta": [105, 112, 113, 141], "tabl": [114, 156, 213], "tag": [0, 26, 28, 29, 102, 104, 217, 229, 230, 234, 237, 238, 240], "take": [3, 5, 26, 28, 29, 53, 64, 76, 79, 81, 82, 102, 104, 226, 227, 228, 234, 238], "taken": [156, 183, 202, 214, 218, 232], "tangibl": 3, "tanh": 215, "tap": 230, "tar": [227, 228, 242], "task": [11, 12, 16, 17, 26, 28, 33, 56, 87, 90, 107, 117, 186, 217, 227, 228, 231, 233, 242], "task_document_kwarg": [89, 92], "task_label": 186, "taskdoc": [89, 92, 180], "tb": [105, 112, 113, 141, 232], "tc": [105, 112, 113, 141], "te": [105, 112, 113, 141, 156, 213], "teach": 227, "technolog": 3, "tell": 3, "temp": 230, "temperatur": [26, 28, 58, 62, 63, 65, 217], "templat": 231, "temporari": [102, 104, 229], "temporarili": 229, "tensor": 153, "term": [3, 5, 11, 12, 26, 28, 29, 122, 124, 147, 152, 156, 159, 161, 206, 211, 213, 217, 232], "termin": [3, 227, 228, 230, 238, 242], "ternari": [28, 29, 56, 239], "test": [0, 1, 2, 4, 11, 12, 13, 14, 19, 22, 26, 28, 29, 46, 56, 65, 78, 83, 90, 121, 122, 124, 127, 140, 147, 152, 153, 154, 156, 157, 159, 167, 193, 198, 214, 216, 217, 225, 226, 230, 232, 234, 235, 238, 240], "test_data_fil": 121, "test_dir": 225, "test_equal_to_v": [153, 232], "test_error": [26, 28, 29, 140, 147, 152, 153, 154, 156, 157, 216, 238, 240], "test_nam": [78, 147, 159, 167], "test_pproject": 229, "test_project": 229, "test_ratio": [26, 28, 29, 56, 217, 237, 238], "test_structur": 83, "tetra": 204, "text": [11, 12, 33, 35, 233], "tezak": 193, "tgz": [227, 228, 230, 242], "th": [105, 112, 113, 141], "than": [3, 11, 136, 154, 214, 227, 228, 233], "thei": [1, 3, 4, 214, 229, 239], "them": [1, 3, 4, 70, 71, 75, 90, 224, 225, 227, 228, 229, 231, 234, 239, 240], "therefor": 3, "therein": 227, "thermal_displacement_matric": [87, 90], "thermodynam": 90, "theta": [221, 222], "theta_uniform": [221, 222, 237, 238], "thi": [1, 3, 4, 5, 7, 11, 12, 13, 14, 16, 19, 20, 22, 23, 26, 28, 29, 33, 45, 46, 56, 62, 63, 65, 67, 76, 87, 88, 89, 90, 91, 92, 102, 104, 106, 107, 108, 111, 115, 116, 121, 122, 134, 136, 152, 154, 157, 177, 180, 184, 185, 186, 190, 191, 193, 214, 216, 217, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242], "thin": 180, "thing": [0, 3, 136], "third": [3, 135, 156, 213, 233], "this_is_the_path_to_your_db": 230, "thoroughli": 240, "those": [3, 147, 234], "though": [3, 231], "thread": [116, 160, 161, 162, 227, 228, 242], "threaten": 3, "three": [3, 139, 142, 148, 153, 156, 206, 207, 213, 221, 233, 240], "three_bodi": [206, 225, 232, 237, 238], "threeb": [207, 232, 237, 238], "threebodi": 221, "threebody_cutoff": [153, 210, 232], "threebset": 207, "threshold": [70, 71, 232, 233, 238, 240], "through": [3, 11, 16, 130, 183, 193, 202, 218, 232, 238, 239, 240], "throughput": [7, 87, 90, 227, 228], "thu": [3, 225, 226], "thz": [14, 231, 233], "ti": [105, 112, 113, 141], "tick": 229, "tight": [87, 90, 97, 225, 229, 232, 234], "tight_relax_1_mp": 225, "tight_relax_2_mp": 225, "tightdftstaticmak": 234, "tightrelaxmak": [225, 234], "tightrelaxsetgener": 225, "time": [3, 106, 227, 228, 230, 232, 234, 235, 238, 240, 242], "tip": 228, "titl": [63, 67, 69, 74, 78, 111, 153], "tl": [105, 112, 113, 141], "tm": [105, 112, 113, 141], "tmp": [229, 230], "tmp_folder": 229, "to_mermaid": 233, "todict": 111, "todo": [65, 106, 136], "toler": [26, 28, 96, 107, 108, 115, 116, 217, 233], "toml": [0, 227], "too": [3, 5, 64, 90, 94, 98, 232, 233], "tool": [3, 7, 87, 90, 104, 227, 228, 242, 243], "toolkit": [227, 228], "torch": [0, 232], "total": [11, 12, 18, 46, 53, 91, 106, 152, 185, 208, 209, 228, 238], "total_energi": [209, 214], "totaldegre": [152, 208, 232], "track": 166, "trade": 3, "trademark": 3, "train": [11, 12, 14, 19, 22, 26, 44, 46, 47, 58, 59, 78, 83, 86, 90, 91, 93, 121, 122, 124, 125, 147, 152, 153, 154, 156, 157, 159, 163, 167, 206, 210, 211, 213, 214, 216, 225, 227, 228, 232, 233, 234, 237, 238, 239, 241], "train_data_fil": 121, "train_error": [147, 152, 153, 154, 156, 157], "train_from_scratch": [26, 216, 217, 237, 238, 240], "train_nam": [78, 147, 159, 167], "train_nequip": 214, "train_structur": 83, "train_structure_list": 46, "trainabl": 214, "traj": [84, 107, 108, 115, 116, 176, 189, 237, 238], "traj_earli": [237, 238], "traj_obj": 84, "traj_path": [58, 75], "trajectori": [26, 28, 58, 75, 84, 107, 108, 115, 116, 217, 238, 239], "transact": 3, "transfer": [3, 11, 229], "transit": [26, 58, 219, 220, 238, 239], "transmiss": 3, "transpos": 106, "treat": [3, 233], "treati": 3, "trial": 76, "triangl": 135, "tric": 204, "trigger": 0, "trinquet": 193, "triplet": [139, 142], "true": [11, 12, 16, 18, 26, 28, 29, 39, 45, 46, 48, 49, 50, 56, 58, 64, 67, 72, 87, 90, 91, 94, 98, 102, 104, 107, 108, 115, 116, 121, 122, 124, 136, 143, 147, 153, 166, 179, 190, 191, 194, 205, 206, 210, 211, 214, 217, 219, 225, 226, 229, 230, 231, 232, 233, 234, 237, 238], "try": [5, 87, 90, 229, 230], "tsz": 153, "tune": [211, 234, 238, 240], "tup": 229, "tupl": [26, 28, 29, 56, 75, 97, 106, 107, 108, 111, 114, 115, 116, 127, 130, 135, 136, 139, 143, 185, 217], "turn": [214, 232, 233], "tutori": [0, 7, 69, 74, 78, 80, 153, 225, 226, 227, 228, 231, 232, 233, 234, 241, 242], "tutorial_data": 225, "two": [2, 3, 11, 12, 18, 26, 48, 53, 58, 62, 64, 76, 91, 106, 127, 139, 142, 148, 179, 194, 206, 207, 211, 222, 227, 228, 229, 232, 233, 238, 240], "two_bodi": [206, 225, 232, 237, 238], "twob": [207, 232, 237, 238], "twobset": 207, "txt": [89, 92, 231, 233], "type": [0, 1, 3, 4, 6, 11, 12, 13, 14, 20, 23, 26, 28, 29, 35, 37, 38, 39, 40, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 94, 96, 97, 98, 99, 106, 107, 108, 114, 115, 116, 117, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 174, 180, 182, 190, 191, 195, 196, 197, 198, 199, 210, 211, 213, 214, 217, 220, 221, 222, 227, 230, 232, 233, 238], "type_weight": [156, 213], "typic": [3, 26, 28, 29, 45, 89, 92, 127, 128, 129, 132, 238, 239], "u": [105, 112, 113, 141, 183, 193, 202, 218], "ubuntu": [227, 228], "uc": [11, 12, 18, 91], "uk": [63, 67, 227, 228, 242], "unaccept": 3, "unchang": [26, 28, 29, 56, 106, 136, 217, 237], "under": [3, 183, 193, 202, 218, 227, 229, 233, 238], "undergo": 238, "understand": [231, 238], "undisplac": 233, "undistort": 234, "unifi": 0, "uniform": [26, 58, 217, 221, 222, 237, 238], "uniformli": 238, "uniqu": [26, 28, 29, 60, 102, 104, 233], "unit": [1, 4, 11, 12, 16, 17, 18, 26, 28, 29, 87, 90, 91, 102, 104, 149, 153, 157, 185, 204, 210, 214, 217, 231, 233, 234, 238], "unitcel": [11, 12, 18], "univers": [2, 156, 183, 193, 202, 211, 213, 218, 227], "unixsocketprefix": 230, "unless": [3, 106], "unlimit": 3, "unmodifi": [3, 199], "unnecessari": 3, "unpack": 3, "until": [3, 229, 233], "unzip": 199, "up": [0, 11, 12, 18, 26, 28, 29, 45, 53, 76, 82, 83, 91, 102, 104, 152, 154, 157, 195, 216, 217, 227, 228, 229, 232, 234, 238, 240], "updat": [0, 3, 26, 28, 29, 45, 99, 138, 190, 191, 201, 214, 217, 227, 228, 230, 242], "update_devcontain": 0, "update_on": 229, "update_paramet": 201, "update_user_incar_set": [226, 229, 232], "update_vasp_custodian_handl": [226, 232], "upgrad": 228, "upper": 217, "upto": 232, "urgent": 0, "url": [0, 57, 227, 228, 242], "us": [0, 1, 3, 4, 5, 6, 7, 11, 12, 13, 16, 17, 18, 23, 26, 28, 29, 33, 35, 37, 38, 40, 45, 56, 60, 62, 63, 64, 65, 67, 75, 76, 77, 82, 87, 89, 90, 91, 92, 94, 97, 98, 99, 102, 104, 106, 107, 108, 111, 115, 116, 117, 121, 122, 123, 124, 136, 139, 142, 147, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 174, 177, 184, 186, 190, 209, 210, 211, 213, 214, 215, 216, 217, 225, 226, 230, 231, 233, 234, 235, 237, 238, 241, 242, 243], "usabl": 0, "usag": [229, 240, 243], "use_conventional_standard_structur": [11, 12, 16, 17, 87, 90], "use_ema": 214, "use_foundation_model_element_ref": 210, "use_primitive_standard_structur": [11, 12, 16, 17, 87, 90], "use_sc": 214, "use_symmetrized_structur": [87, 90], "user": [1, 3, 4, 7, 16, 190, 227, 228, 229, 230, 232, 233, 234, 238, 240, 242, 243], "user_cell_set": [190, 191, 238], "user_incar_set": [225, 229, 234, 238], "user_indic": 230, "user_kpoints_set": [225, 234], "user_param_set": [190, 191, 238], "useradminanydatabas": 230, "usernam": [229, 230], "usp": [175, 188], "usr": [231, 232], "usual": [1, 4, 136, 214, 227, 228, 229], "uthpala": 230, "util": [0, 1, 4, 37, 38, 39, 40, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 97, 98, 99, 110, 111, 112, 113, 114, 115, 116, 117, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 227, 228, 229, 233, 234, 238, 242], "uuid": 231, "uv": 0, "v": [26, 46, 65, 69, 74, 105, 112, 113, 127, 136, 141, 144, 193, 224, 227, 233, 243], "v0": 229, "v1": [227, 228, 242], "v4": 228, "v5": 230, "val": [133, 214, 234], "valenc": 204, "valid": [3, 28, 153, 197, 202, 211, 214, 227, 228, 232, 238, 242], "valid_batch_s": 211, "validation_batch_s": 214, "validation_dataset": 214, "validation_dataset_file_nam": 214, "validation_dataset_key_map": 214, "validation_loss": 214, "valu": [1, 4, 11, 12, 14, 16, 18, 19, 26, 28, 29, 33, 38, 45, 46, 51, 53, 55, 56, 57, 58, 62, 63, 75, 76, 79, 91, 121, 122, 133, 136, 156, 166, 167, 204, 206, 210, 213, 214, 216, 217, 220, 221, 222, 231, 232, 233, 234, 238, 240], "valueerror": [152, 157, 190], "vari": [65, 232, 238, 239], "variabl": [1, 4, 106, 229, 230, 238], "variable_nam": [1, 4], "variablenam": [1, 4], "variant": [211, 214], "varieti": 234, "variou": [0, 237, 241, 243], "varlei": 193, "vasp": [0, 11, 12, 21, 26, 28, 29, 33, 45, 50, 51, 87, 88, 89, 90, 91, 121, 166, 167, 177, 190, 191, 217, 225, 226, 227, 228, 230, 231, 232, 233, 235, 238, 243], "vasp_binary_nam": 238, "vasp_calc_dir": 151, "vasp_cmd": [229, 230, 238], "vasp_gam": [229, 230], "vasp_gamma_cmd": [229, 230], "vasp_incar_upd": [227, 228], "vasp_mak": 238, "vasp_ref": [166, 167, 232, 234, 237], "vasp_ref_nam": 167, "vasp_std": [229, 230], "vaspinputgener": [89, 92], "vaspjob": 230, "vasprun": 166, "vector": [26, 58, 65, 67, 77, 155, 204, 219], "verbatim": 3, "verbos": 214, "veri": [0, 76, 90, 152, 226, 227, 228, 229, 232, 242], "versatil": 239, "version": [0, 3, 14, 106, 111, 153, 156, 180, 199, 213, 228, 232, 235, 242, 243], "vi": 230, "via": [0, 5, 11, 12, 16, 70, 71, 227, 228, 229, 230, 231, 232, 238, 239], "view": [3, 106, 230], "vigil": 193, "violat": 3, "virial": [26, 28, 29, 121, 122, 124, 136, 138, 143, 147, 152, 153, 154, 155, 156, 157, 166, 206, 211, 213, 217], "virial_nam": 136, "virial_parameter_nam": [206, 232, 237, 238], "virials_weight": 211, "virtual": 183, "visibl": 3, "vision": [7, 227], "visual": 37, "vm": 149, "void": 3, "volker": [2, 63, 67], "volum": [3, 11, 12, 18, 26, 28, 29, 46, 53, 56, 65, 81, 91, 127, 132, 136, 217, 225, 231, 234, 238], "volume_custom_scale_factor": [11, 12, 18, 53, 81, 91, 225, 232, 234], "volume_scale_factor_rang": [11, 12, 18, 53, 81, 91, 232, 234], "vscode": 5, "w": [3, 5, 87, 90, 105, 106, 112, 113, 141, 229], "w_angl": [11, 12, 18, 53, 79, 91], "wa": [3, 26, 29, 56, 217, 227, 228, 233, 238, 239, 242], "wai": [1, 3, 4, 106, 153, 229, 232, 233, 234, 240], "wait": 229, "waiv": 3, "waiver": 3, "walk": 230, "wall": [228, 230], "wandb": [211, 214], "wang": 193, "want": [1, 3, 4, 5, 7, 227, 228, 229, 231, 232, 233, 234, 238, 240, 242], "warn": [214, 225, 226, 229], "waroqui": 193, "warranti": 3, "wcwitt": [227, 228, 242], "we": [1, 2, 3, 4, 87, 90, 225, 226, 227, 228, 229, 230, 232, 233, 234, 238, 240, 242], "websit": [0, 2, 228, 242], "weight": [26, 58, 62, 63, 65, 125, 154, 156, 209, 210, 211, 213, 214, 220, 238, 239], "welcom": [2, 3, 227], "well": [3, 11, 12, 16, 27, 33, 229, 230, 232, 233, 234, 238, 240, 242], "wen": 193, "were": [3, 233], "wf": [0, 228, 240, 242], "wf_user_indic": 230, "wget": [227, 228, 242], "what": [3, 229, 233], "whatev": 3, "when": [0, 3, 26, 28, 29, 48, 56, 152, 157, 179, 194, 210, 214, 216, 228, 229, 232, 233, 238, 240], "where": [3, 26, 29, 56, 106, 186, 217, 228, 229, 230, 232, 233, 234, 238, 240, 242], "where_do_all_yamls_lie_fold": 230, "where_do_you_want_to_start_your_calc": 230, "where_is_your_python_environ": 230, "whether": [3, 26, 28, 29, 38, 46, 56, 58, 67, 75, 87, 90, 106, 122, 124, 136, 148, 190, 191, 197, 204, 206, 210, 211, 214, 217, 219, 220, 221, 222, 233, 238], "which": [3, 11, 12, 18, 26, 28, 29, 45, 53, 57, 62, 63, 65, 67, 76, 77, 82, 89, 91, 92, 94, 98, 102, 104, 106, 153, 156, 213, 227, 228, 230, 232, 233, 234, 238, 240, 242], "which_q_path": 40, "while": 229, "who": 3, "whole": [3, 26, 229, 241], "whom": 3, "whose": [3, 229], "why": 3, "wide": [3, 7, 227], "width": [26, 28, 46, 55, 58, 107, 108, 115, 116, 217, 219, 220, 221, 222], "wil": 232, "window": 3, "wip": 0, "wipo": 3, "wise": [11, 12, 16, 33, 38, 121, 122, 166, 210, 231, 232, 233], "wish": [1, 3, 4], "within": [3, 26, 108, 115, 142, 214, 227, 230, 232, 238, 240], "without": [3, 11, 12, 13, 18, 53, 57, 90, 91, 231, 232], "word": [1, 4], "work": [0, 3, 5, 26, 28, 29, 56, 136, 182, 217, 225, 230, 232, 238, 239, 242], "work_dir": 229, "workdir": 229, "worker": [210, 228, 230, 232, 240, 242], "workflow": [0, 1, 4, 7, 24, 26, 28, 29, 31, 41, 42, 43, 45, 85, 87, 90, 100, 193, 216, 217, 224, 234, 237, 238, 243], "workflow_maker_gen_0": 19, "workflow_maker_gen_1": 19, "worldwid": 3, "worri": [229, 231], "worst": 233, "would": [2, 3, 26, 225, 226, 229, 240], "wrapper": 180, "write": [1, 3, 4, 52, 70, 71, 84, 89, 92, 115, 116, 167], "write_additional_data": [89, 92], "write_benchmark_metr": [231, 233, 234], "write_input_set_kwarg": [89, 92], "write_traj": [115, 116, 237], "write_vasp_input_set": [89, 92], "writeabl": 106, "written": [3, 84, 243], "wvfn_fmt": [176, 189], "www": [3, 63, 67, 227, 228, 230, 242], "x": [46, 48, 55, 105, 106, 112, 113, 130, 133, 136, 141, 156, 179, 193, 194, 213, 230], "x2": 131, "x3": 131, "x_max": [46, 55], "x_min": [46, 55], "x_pred": 80, "x_ref": 80, "xc_function": 238, "xdist": 5, "xe": [105, 112, 113, 141], "xf": [227, 228, 242], "xml": [0, 11, 12, 16, 46, 122, 124, 145, 147, 159, 161, 166, 206, 231, 232, 237, 238], "xml_file": 161, "xml_file_path": 145, "xpot": [122, 124], "xpu": 211, "xxx": [229, 230], "xxx_admin": 230, "xxxx": 230, "xxxxxx": 232, "xyz": [11, 14, 19, 22, 46, 121, 122, 166, 176, 189], "y": [105, 112, 113, 130, 141, 193, 211, 227, 228, 229], "yaml": [0, 1, 4, 202, 218, 226, 227, 228, 229, 230, 237, 240, 241, 243], "yang": 193, "yb": [105, 112, 113, 141], "ye": [211, 227, 228, 242], "year": 3, "yet": [232, 240], "yml": 0, "you": [1, 2, 3, 4, 5, 7, 11, 87, 90, 214, 225, 226, 229, 230, 231, 232, 233, 234, 238, 240, 242, 243], "your": [1, 3, 4, 5, 7, 13, 90, 111, 227, 228, 230, 231, 232, 233, 234, 238, 240, 242, 243], "your_api_kei": 231, "your_email": [228, 229, 232, 240, 242], "your_mp_api_kei": [229, 231, 232, 233], "your_project_nam": 229, "yourpath": 238, "yourself": [3, 228, 230, 232, 233], "yuanbin": [2, 243], "yuanbinliu": 0, "z": [66, 193], "zbl": [156, 211, 213], "zero": 106, "zeta": [26, 58, 219, 220, 225, 232, 237, 238], "zheng": 193, "zhou": 227, "zhu": 193, "zip": [199, 225], "zn": [105, 112, 113, 141], "zr": [105, 112, 113, 141], "\u00e5": [233, 234], "\u2139": [227, 228, 230, 232, 233, 234, 242]}, "titles": ["Changelog", "Contributing to autoplex", "Contributors", "License", "Contributing to autoplex", "Developer Installation", "Glossary", "autoplex documentation", "autoplex.auto", "autoplex.auto.phonons", "autoplex.auto.phonons.flows", "CompleteDFTvsMLBenchmarkWorkflow", "CompleteDFTvsMLBenchmarkWorkflowMPSettings", "DFTSupercellSettingsMaker", "IterativeCompleteDFTvsMLBenchmarkWorkflow", "autoplex.auto.phonons.jobs", "complete_benchmark", "dft_phonopy_gen_data", "dft_random_gen_data", "do_iterative_rattled_structures", "generate_supercells", "get_iso_atom", "get_phonon_output", "run_supercells", "autoplex.auto.rss", "autoplex.auto.rss.flows", "RssMaker", "autoplex.auto.rss.jobs", "do_rss_iterations", "initial_rss", "autoplex.benchmark", "autoplex.benchmark.phonons", "autoplex.benchmark.phonons.flows", "PhononBenchmarkMaker", "autoplex.benchmark.phonons.jobs", "write_benchmark_metrics", "autoplex.benchmark.phonons.utils", "compare_plot", "compute_bandstructure_benchmark_metrics", "get_rmse", "rmse_qdep_plot", "autoplex.benchmark.rss", "autoplex.data", "autoplex.data.common", "autoplex.data.common.flows", "DFTStaticLabelling", "GenerateTrainingDataForTesting", "autoplex.data.common.jobs", "TYPE_CHECKING", "check_convergence_castep", "check_convergence_vasp", "collect_dft_data", "convert_to_extxyz", "generate_randomized_structures", "get_supercell_job", "plot_force_distribution", "preprocess_data", "safe_strip_hostname", "sample_data", "autoplex.data.common.utils", "ElementCollection", "GPa", "boltzhist_cur_dual_iter", "boltzhist_cur_one_shot", "check_distances", "convexhull_cur", "create_soap_descriptor", "cur_select", "data_distillation", "energy_plot", "filter_outlier_energy", "filter_outlier_forces", "flatten", "flatten_list", "force_plot", "handle_rss_trajectory", "mc_rattle", "parallel_calc_descriptor_vec", "plot_energy_forces", "random_vary_angle", "rms_dict", "scale_cell", "std_rattle", "stratified_dataset_split", "to_ase_trajectory", "autoplex.data.phonons", "autoplex.data.phonons.flows", "DFTPhononMaker", "IsoAtomMaker", "IsoAtomStaticMaker", "MLPhononMaker", "RandomStructuresDataGenerator", "TightDFTStaticMaker", "autoplex.data.phonons.jobs", "reduce_supercell_size_job", "autoplex.data.phonons.utils", "check_supercells", "ml_phonon_maker_preparation", "reduce_supercell_size", "update_phonon_displacement_maker", "autoplex.data.rss", "autoplex.data.rss.flows", "BuildMultiRandomizedStructure", "autoplex.data.rss.jobs", "RandomizedStructure", "atomic_numbers", "covalent_radii", "do_rss_multi_node", "do_rss_single_node", "autoplex.data.rss.utils", "GPa", "HookeanRepulsion", "atomic_numbers", "chemical_symbols", "extract_pairstyle", "minimize_structures", "process_rss", "split_structure_into_groups", "autoplex.fitting", "autoplex.fitting.common", "autoplex.fitting.common.flows", "DataPreprocessing", "MLIPFitMaker", "autoplex.fitting.common.jobs", "machine_learning_fit", "autoplex.fitting.common.regularization", "calculate_hull_nd", "get_convex_hull", "get_e_distance_to_hull", "get_e_distance_to_hull_nd", "get_intersect", "get_mole_frac", "label_stoichiometry_volume", "piecewise_linear", "point_in_simplex_nd", "point_in_triangle_2D", "set_custom_sigma", "autoplex.fitting.common.utils", "CustomPotential", "calculate_delta_2b", "check_convergence", "chemical_symbols", "compute_num_of_descriptor", "convert_xyz_to_structure", "energy_remain", "extract_gap_label", "flatten", "gap_fitting", "gap_hyperparameter_constructor", "gcm3_to_Vm", "get_atomic_numbers", "get_list_of_vasp_calc_dirs", "jace_fitting", "m3gnet_fitting", "mace_fitting", "mace_virial_format_conversion", "nep_fitting", "nequip_fitting", "plot_convex_hull", "prepare_fit_environment", "run_ace", "run_ase_gap", "run_gap", "run_mace", "run_nep", "run_nequip", "vaspoutput_2_extended_xyz", "write_after_distillation_data_split", "autoplex.fitting.phonons", "autoplex.fitting.rss", "autoplex.misc", "autoplex.misc.castep", "autoplex.misc.castep.flows", "autoplex.misc.castep.jobs", "BaseCastepMaker", "CASTEP_INPUT_FILES", "CASTEP_OUTPUT_FILES", "CastepStaticMaker", "GPa", "TYPE_CHECKING", "castep_job", "autoplex.misc.castep.run", "run_castep", "autoplex.misc.castep.schema", "InputDoc", "OutputDoc", "TaskDoc", "autoplex.misc.castep.utils", "CASTEP_INPUT_FILES", "CASTEP_OUTPUT_FILES", "CastepInputGenerator", "CastepStaticSetGenerator", "autoplex.misc.utils", "autoplex.misc.utils.mock_castep", "TYPE_CHECKING", "clear_castep_inputs", "copy_castep_outputs", "fake_run_castep", "monkeypatch_castep", "zpath", "autoplex.settings", "AutoplexBaseModel", "AutoplexSettings", "BcurParams", "BuildcellOptions", "CustomIncar", "GAPGeneralSettings", "GAPSettings", "JACESettings", "LossCoeff", "M3GNETSettings", "MACESettings", "MLIPHypers", "NEPSettings", "NEQUIPSettings", "Nonlinearity", "ResumeFromPreviousState", "RssConfig", "SETTINGS", "SoapParas", "SoapSettings", "ThreebSettings", "TwobSettings", "API reference", "Executable tutorials", "Iterative DFT vs MLIP benchmark workflow for phonons", "RSS Workflow", "Overview", "Installation guide", "Jobflow-remote setup", "MongoDB setup tutorial", "Benchmark of ML-based phonon structure", "Fitting phonon-accurate potentials", "Out-of-the-box workflow", "Generating reference data", "Phonon workflow", "&lt;no title&gt;", "Examples", "Input YAML configuration file", "Brief overview", "Quick start", "RSS workflow", "Quick-start", "Tutorials"], "titleterms": {"": [0, 227], "0": [0, 232], "1": [0, 240], "2": [0, 237, 240], "3": [0, 240], "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "Their": 243, "ac": 232, "accur": [232, 233], "add": 229, "adjust": 234, "all": 229, "altern": 230, "an": 240, "api": [223, 229], "atom": 234, "atomate2": [229, 230], "atomic_numb": [105, 112], "auto": [8, 9, 10, 15, 24, 25, 27], "autoplex": [1, 4, 7, 8, 9, 10, 15, 24, 25, 27, 30, 31, 32, 34, 36, 41, 42, 43, 44, 47, 59, 85, 86, 93, 95, 100, 101, 103, 109, 118, 119, 120, 123, 125, 137, 168, 169, 170, 171, 172, 173, 181, 183, 187, 192, 193, 200, 227, 228, 232], "autoplexbasemodel": 201, "autoplexset": 202, "base": 231, "basecastepmak": 174, "bcurparam": 203, "befor": [227, 228, 233], "benchmark": [30, 31, 32, 34, 36, 41, 225, 231, 232], "berlin": 2, "boltzhist_cur_dual_it": 62, "boltzhist_cur_one_shot": 63, "box": 233, "brief": 239, "bug": 0, "build": [5, 240], "buildcel": 238, "buildcellopt": 204, "buildmultirandomizedstructur": 102, "calcul": [231, 232], "calculate_delta_2b": 139, "calculate_hull_nd": 126, "case": 240, "castep": [171, 172, 173, 181, 183, 187], "castep_input_fil": [175, 188], "castep_job": 180, "castep_output_fil": [176, 189], "castepinputgener": 190, "castepstaticmak": 177, "castepstaticsetgener": 191, "chang": [0, 229], "changelog": 0, "check": 229, "check_converg": 140, "check_convergence_castep": 49, "check_convergence_vasp": 50, "check_dist": 64, "check_supercel": 96, "chemical_symbol": [113, 141], "cite": 227, "clear_castep_input": 195, "cluster": 229, "code": [1, 2, 4], "collect_dft_data": 51, "combin": 240, "command": 229, "commit": [1, 4], "common": [43, 44, 47, 59, 119, 120, 123, 125, 137], "compare_plot": 37, "complet": 229, "complete_benchmark": 16, "completedftvsmlbenchmarkworkflow": 11, "completedftvsmlbenchmarkworkflowmpset": 12, "compute_bandstructure_benchmark_metr": 38, "compute_num_of_descriptor": 142, "config": 229, "configur": [230, 238], "content": 243, "contribut": [1, 4, 227, 243], "contributor": [0, 2, 243], "convert_to_extxyz": 52, "convert_xyz_to_structur": 143, "convexhull_cur": 65, "copy_castep_output": 196, "copyright": 193, "core": 2, "correctli": 229, "covalent_radii": 106, "create_soap_descriptor": 66, "cur_select": 67, "customincar": 205, "custompotenti": 138, "data": [42, 43, 44, 47, 59, 85, 86, 93, 95, 100, 101, 103, 109, 229, 234, 238, 240], "data_distil": 68, "databas": [230, 232], "datapreprocess": 121, "dataset": 240, "db": 229, "default": 233, "depend": 228, "develop": [2, 5, 227], "dft": [225, 231, 232, 233], "dft_phonopy_gen_data": 17, "dft_random_gen_data": 18, "dftphononmak": 87, "dftstaticlabel": 45, "dftsupercellsettingsmak": 13, "differ": [229, 232], "direct": 240, "disclaim": 238, "displac": 234, "do_iterative_rattled_structur": 19, "do_rss_iter": 28, "do_rss_multi_nod": 107, "do_rss_single_nod": 108, "document": [0, 5, 7, 227, 228], "done": 229, "download": 229, "elementcollect": 60, "enabl": [227, 228, 242], "energy_plot": 69, "energy_remain": 144, "error": 231, "exampl": [229, 232, 237], "execut": [224, 229], "exist": [231, 240], "expand": 240, "explor": 238, "exsit": 229, "extract_gap_label": 145, "extract_pairstyl": 114, "fail": 229, "fake_run_castep": 197, "featur": [0, 239], "file": [229, 238], "filter_outlier_energi": 70, "filter_outlier_forc": 71, "finetun": 232, "firework": 230, "fit": [118, 119, 120, 123, 125, 137, 168, 169, 232], "fix": 0, "flatten": [72, 146], "flatten_list": 73, "flow": [10, 25, 32, 44, 86, 101, 120, 172, 229], "force_plot": 74, "format": [1, 4], "from": [229, 240], "gap": [231, 232], "gap_fit": 147, "gap_hyperparameter_constructor": 148, "gapgeneralset": 206, "gapset": 207, "gcm3_to_vm": 149, "gener": [1, 4, 231, 232, 233, 234, 238, 240], "generate_randomized_structur": 53, "generate_supercel": 20, "generatetrainingdatafortest": 46, "get": 229, "get_atomic_numb": 150, "get_convex_hul": 127, "get_e_distance_to_hul": 128, "get_e_distance_to_hull_nd": 129, "get_intersect": 130, "get_iso_atom": 21, "get_list_of_vasp_calc_dir": 151, "get_mole_frac": 131, "get_phonon_output": 22, "get_rms": 39, "get_supercell_job": 54, "glossari": 6, "gpa": [61, 110, 178], "guid": 228, "guidelin": [1, 4, 227], "handle_rss_trajectori": 75, "homebrew": 230, "hookeanrepuls": 111, "hous": 0, "i": 232, "initial_rss": 29, "input": [229, 238], "inputdoc": 184, "instal": [5, 227, 228, 229, 230, 242], "interrupt": 240, "isoatommak": 88, "isoatomstaticmak": 89, "iter": [225, 233], "iterativecompletedftvsmlbenchmarkworkflow": 14, "jace_fit": 152, "jaceset": 208, "job": [15, 27, 34, 47, 93, 103, 123, 173, 229], "jobflow": 229, "keep": 0, "kick": 240, "label": 238, "label_stoichiometry_volum": 132, "lammp": [227, 228, 242], "later": 240, "lead": 2, "learn": 233, "licens": [3, 193], "limit": 229, "link": 229, "local": [5, 229], "losscoeff": 209, "m3gnet": 232, "m3gnet_fit": 153, "m3gnetset": 210, "mace": 232, "mace_fit": 154, "mace_virial_format_convers": 155, "maceset": 211, "machin": [229, 232, 233], "machine_learning_fit": 124, "maintain": 2, "manag": [228, 242], "mc_rattl": 76, "memori": 233, "merg": 240, "metric": 231, "minimize_structur": 115, "misc": [170, 171, 172, 173, 181, 183, 187, 192, 193], "ml": [231, 240], "ml_phonon_maker_prepar": 97, "mlip": [225, 232, 238, 240], "mlipfitmak": 122, "mliphyp": 212, "mlphononmak": 90, "mock_castep": 193, "model": 240, "mongodb": 230, "monkeypatch_castep": 198, "mp": 232, "nep_fit": 156, "nepset": 213, "nequip": 232, "nequip_fit": 157, "nequipset": 214, "new": [0, 240], "nonlinear": 215, "now": 233, "object": 240, "off": 240, "onli": 232, "other": 0, "out": 233, "output": 233, "outputdoc": 185, "overview": [227, 239], "oxford": 2, "parallel_calc_descriptor_vec": 77, "paramet": [229, 238, 240], "phonon": [9, 10, 15, 31, 32, 34, 36, 85, 86, 93, 95, 168, 225, 231, 232, 233, 235], "phononbenchmarkmak": 33, "piecewise_linear": 133, "plot_convex_hul": 158, "plot_energy_forc": 78, "plot_force_distribut": 55, "point": 240, "point_in_simplex_nd": 134, "point_in_triangle_2d": 135, "possibl": 232, "potenti": [231, 232, 233, 240], "pre": [229, 231, 240], "prepare_fit_environ": 159, "preprocess": 238, "preprocess_data": 56, "process_rss": 116, "project": 2, "python": [227, 229], "queri": 229, "quick": [240, 242], "random_vary_angl": 79, "randomizedstructur": 104, "randomstructuresdatagener": 91, "rattl": 234, "reduce_supercell_s": 98, "reduce_supercell_size_job": 94, "refer": [223, 234], "refin": 240, "regular": 125, "relax": 229, "remot": 229, "requir": [1, 4, 233], "result": 233, "resum": 240, "resumefrompreviousst": 216, "rms_dict": 80, "rmse_qdep_plot": 40, "rss": [24, 25, 27, 41, 100, 101, 103, 109, 169, 226, 227, 228, 238, 240, 241, 242], "rssconfig": [217, 240], "rssmaker": 26, "run": [5, 181, 231, 232, 233, 240], "run_ac": 160, "run_ase_gap": 161, "run_castep": 182, "run_gap": 162, "run_mac": 163, "run_nep": 164, "run_nequip": 165, "run_supercel": 23, "safe_strip_hostnam": 57, "sampl": 238, "sample_data": 58, "scale_cel": 81, "schema": 183, "scratch": 240, "script": [229, 232], "set": [200, 218, 229, 231, 232, 234], "set_custom_sigma": 136, "setup": [227, 229, 230], "si": 232, "simpl": 229, "singl": 234, "sio": 237, "soappara": 219, "soapset": 220, "some": 229, "specif": 240, "split_structure_into_group": 117, "standard": 227, "start": [227, 228, 229, 233, 240, 242], "std_rattl": 82, "step": 232, "stratified_dataset_split": 83, "structur": [1, 4, 231, 234], "stuck": 5, "sub": 237, "submit": 229, "supercel": 234, "tabl": 243, "taskdoc": 186, "test": [5, 229, 233], "threebset": 221, "through": 230, "tightdftstaticmak": 92, "time": [229, 233], "to_ase_trajectori": 84, "train": 240, "troubleshoot": 5, "tutori": [224, 230, 243], "twobset": 222, "type": 229, "type_check": [48, 179, 194], "unit": 5, "updat": 229, "update_phonon_displacement_mak": 99, "us": [227, 228, 229, 232, 240], "util": [36, 59, 95, 109, 137, 187, 192, 193], "v": 225, "v0": 0, "variou": 240, "vasp": [229, 234], "vaspoutput_2_extended_xyz": 166, "version": [227, 233], "visual": 230, "what": [0, 227], "whole": 240, "work": 229, "worker": 229, "workflow": [225, 226, 227, 228, 229, 232, 233, 235, 240, 241, 242], "write_after_distillation_data_split": 167, "write_benchmark_metr": 35, "yaml": 238, "you": [227, 228], "your": 229, "zpath": 199}})